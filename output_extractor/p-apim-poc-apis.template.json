{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "apimServiceName": {
      "type": "string"
    }
  },
  "resources": [
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis",
      "name": "[concat(parameters('apimServiceName'), '/swagger-petstore-openapi-3-0')]",
      "dependsOn": [],
      "properties": {
        "description": "This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about\nSwagger at [http://swagger.io](http://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!\nYou can now help us improve the API whether it's by making changes to the definition itself or to the code.\nThat way, with time, we can improve the API in general, and expose some of the new features in OAS3.\n\nSome useful links:\n- [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)\n- [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)",
        "authenticationSettings": {
          "subscriptionKeyRequired": false
        },
        "subscriptionKeyParameterNames": {
          "header": "Ocp-Apim-Subscription-Key",
          "query": "subscription-key"
        },
        "apiRevision": "1",
        "isCurrent": true,
        "subscriptionRequired": true,
        "displayName": "Swagger Petstore - OpenAPI 3.0",
        "serviceUrl": "https://petstore3.swagger.io/api/v3",
        "path": "petstore",
        "protocols": [
          "http",
          "https"
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/schemas",
      "name": "[concat(parameters('apimServiceName'), '/swagger-petstore-openapi-3-0/626913b64634610edcbffcd1')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'swagger-petstore-openapi-3-0')]"
      ],
      "properties": {
        "contentType": "application/vnd.oai.openapi.components+json",
        "document": {
          "components": {
            "schemas": {
              "Order": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 10.0
                  },
                  "petId": {
                    "type": "integer",
                    "format": "int64",
                    "example": 198772.0
                  },
                  "quantity": {
                    "type": "integer",
                    "format": "int32",
                    "example": 7
                  },
                  "shipDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "status": {
                    "enum": [
                      "placed",
                      "approved",
                      "delivered"
                    ],
                    "type": "string",
                    "description": "Order Status",
                    "example": "approved"
                  },
                  "complete": {
                    "type": "boolean"
                  }
                },
                "xml": {
                  "name": "order"
                }
              },
              "Customer": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 100000.0
                  },
                  "username": {
                    "type": "string",
                    "example": "fehguy"
                  },
                  "address": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Address"
                    },
                    "xml": {
                      "name": "addresses",
                      "wrapped": true
                    }
                  }
                },
                "xml": {
                  "name": "customer"
                }
              },
              "Address": {
                "type": "object",
                "properties": {
                  "street": {
                    "type": "string",
                    "example": "437 Lytton"
                  },
                  "city": {
                    "type": "string",
                    "example": "Palo Alto"
                  },
                  "state": {
                    "type": "string",
                    "example": "CA"
                  },
                  "zip": {
                    "type": "string",
                    "example": "94301"
                  }
                },
                "xml": {
                  "name": "address"
                }
              },
              "Category": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1.0
                  },
                  "name": {
                    "type": "string",
                    "example": "Dogs"
                  }
                },
                "xml": {
                  "name": "category"
                }
              },
              "User": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 10.0
                  },
                  "username": {
                    "type": "string",
                    "example": "theUser"
                  },
                  "firstName": {
                    "type": "string",
                    "example": "John"
                  },
                  "lastName": {
                    "type": "string",
                    "example": "James"
                  },
                  "email": {
                    "type": "string",
                    "example": "john@email.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "12345"
                  },
                  "phone": {
                    "type": "string",
                    "example": "12345"
                  },
                  "userStatus": {
                    "type": "integer",
                    "description": "User Status",
                    "format": "int32",
                    "example": 1
                  }
                },
                "xml": {
                  "name": "user"
                }
              },
              "Tag": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "xml": {
                  "name": "tag"
                }
              },
              "Pet": {
                "required": [
                  "name",
                  "photoUrls"
                ],
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 10.0
                  },
                  "name": {
                    "type": "string",
                    "example": "doggie"
                  },
                  "category": {
                    "$ref": "#/components/schemas/Category"
                  },
                  "photoUrls": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "xml": {
                        "name": "photoUrl"
                      }
                    },
                    "xml": {
                      "wrapped": true
                    }
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Tag"
                    },
                    "xml": {
                      "wrapped": true
                    }
                  },
                  "status": {
                    "enum": [
                      "available",
                      "pending",
                      "sold"
                    ],
                    "type": "string",
                    "description": "pet status in the store"
                  }
                },
                "xml": {
                  "name": "pet"
                }
              },
              "ApiResponse": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "type": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  }
                },
                "xml": {
                  "name": "##default"
                }
              },
              "PetFindByStatusGetRequest": {
                "enum": [
                  "available",
                  "pending",
                  "sold"
                ],
                "type": "string",
                "default": "available",
                "x-apim-inline": true
              },
              "PetFindByStatusGet200ApplicationXmlResponse": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Pet"
                },
                "x-apim-inline": true
              },
              "PetFindByStatusGet200ApplicationJsonResponse": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Pet"
                },
                "x-apim-inline": true
              },
              "PetFindByTagsGetRequest": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "x-apim-inline": true
              },
              "PetFindByTagsGet200ApplicationXmlResponse": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Pet"
                },
                "x-apim-inline": true
              },
              "PetFindByTagsGet200ApplicationJsonResponse": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Pet"
                },
                "x-apim-inline": true
              },
              "Pet-petId-GetRequest": {
                "type": "integer",
                "format": "int64",
                "x-apim-inline": true
              },
              "Pet-petId-PostRequest": {
                "type": "integer",
                "format": "int64",
                "x-apim-inline": true
              },
              "Pet-petId-PostRequest-1": {
                "type": "string",
                "x-apim-inline": true
              },
              "Pet-petId-PostRequest-2": {
                "type": "string",
                "x-apim-inline": true
              },
              "Pet-petId-DeleteRequest": {
                "type": "string",
                "x-apim-inline": true
              },
              "Pet-petId-DeleteRequest-1": {
                "type": "integer",
                "format": "int64",
                "x-apim-inline": true
              },
              "Pet-petId-UploadImagePostRequest": {
                "type": "integer",
                "format": "int64",
                "x-apim-inline": true
              },
              "Pet-petId-UploadImagePostRequest-1": {
                "type": "string",
                "x-apim-inline": true
              },
              "Pet-petId-UploadImagePostRequest-2": {
                "type": "string",
                "format": "binary",
                "x-apim-inline": true
              },
              "StoreInventoryGet200ApplicationJsonResponse": {
                "type": "object",
                "additionalProperties": {
                  "type": "integer",
                  "format": "int32"
                },
                "x-apim-inline": true
              },
              "StoreOrder-orderId-GetRequest": {
                "type": "integer",
                "format": "int64",
                "x-apim-inline": true
              },
              "StoreOrder-orderId-DeleteRequest": {
                "type": "integer",
                "format": "int64",
                "x-apim-inline": true
              },
              "UserCreateWithListPostRequest": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/User"
                },
                "x-apim-inline": true
              },
              "UserLoginGetRequest": {
                "type": "string",
                "x-apim-inline": true
              },
              "UserLoginGetRequest-1": {
                "type": "string",
                "x-apim-inline": true
              },
              "UserLoginGet200ApplicationXmlResponse": {
                "type": "string",
                "x-apim-inline": true
              },
              "UserLoginGet200ApplicationJsonResponse": {
                "type": "string",
                "x-apim-inline": true
              },
              "UserLoginGet200X-Rate-LimitResponseHeader": {
                "type": "integer",
                "format": "int32",
                "x-apim-inline": true
              },
              "UserLoginGet200X-Expires-AfterResponseHeader": {
                "type": "string",
                "format": "date-time",
                "x-apim-inline": true
              },
              "User-username-GetRequest": {
                "type": "string",
                "x-apim-inline": true
              },
              "User-username-PutRequest": {
                "type": "string",
                "x-apim-inline": true
              },
              "User-username-DeleteRequest": {
                "type": "string",
                "x-apim-inline": true
              },
              "UserArrayRequest-json": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/User"
                },
                "x-apim-inline": true
              }
            }
          }
        }
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/diagnostics",
      "name": "[concat(parameters('apimServiceName'), '/swagger-petstore-openapi-3-0/applicationinsights')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'swagger-petstore-openapi-3-0')]"
      ],
      "properties": {
        "alwaysLog": "allErrors",
        "loggerId": "/subscriptions/510e61ea-804b-489a-b0d1-775d711fe7c0/resourceGroups/APIM-POC/providers/Microsoft.ApiManagement/service/apim-poc-prd/loggers/appi-psl-dev-g7iea-logs",
        "httpCorrelationProtocol": "Legacy",
        "verbosity": "verbose",
        "logClientIp": true,
        "sampling": {
          "samplingType": "fixed",
          "percentage": 100.0
        },
        "frontend": {
          "request": {
            "headers": [],
            "body": {
              "bytes": 0
            }
          },
          "response": {
            "headers": [],
            "body": {
              "bytes": 0
            }
          }
        },
        "backend": {
          "request": {
            "headers": [],
            "body": {
              "bytes": 0
            }
          },
          "response": {
            "headers": [],
            "body": {
              "bytes": 0
            }
          }
        }
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/diagnostics",
      "name": "[concat(parameters('apimServiceName'), '/applicationinsights')]",
      "dependsOn": [],
      "properties": {
        "alwaysLog": "allErrors",
        "loggerId": "/subscriptions/510e61ea-804b-489a-b0d1-775d711fe7c0/resourceGroups/APIM-POC/providers/Microsoft.ApiManagement/service/apim-poc-prd/loggers/appi-psl-dev-g7iea-logs",
        "httpCorrelationProtocol": "Legacy",
        "logClientIp": true,
        "sampling": {
          "samplingType": "fixed",
          "percentage": 100.0
        },
        "frontend": {
          "request": {}
        },
        "backend": {
          "request": {}
        }
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/products/apis",
      "name": "[concat(parameters('apimServiceName'), '/cfd6560de1594b03bab78e1073aa1724/swagger-petstore-openapi-3-0')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'swagger-petstore-openapi-3-0')]"
      ],
      "properties": {
        "displayName": "Pet Store Product",
        "description": "Product giving access to Petstore api",
        "subscriptionRequired": true,
        "approvalRequired": false,
        "state": "published"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/tags",
      "name": "[concat(parameters('apimServiceName'), '/swagger-petstore-openapi-3-0/pet')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'swagger-petstore-openapi-3-0')]"
      ],
      "properties": {
        "displayName": "pet"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/swagger-petstore-openapi-3-0/getPetById')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'swagger-petstore-openapi-3-0')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('apimServiceName'), 'swagger-petstore-openapi-3-0', '626913b64634610edcbffcd1')]"
      ],
      "properties": {
        "displayName": "Find pet by ID",
        "method": "GET",
        "urlTemplate": "/pet/{petId}",
        "description": "Returns a single pet",
        "templateParameters": [
          {
            "name": "petId",
            "description": "Format - int64. ID of pet to return",
            "type": "integer",
            "required": true,
            "values": []
          }
        ],
        "responses": [
          {
            "description": "successful operation",
            "headers": [],
            "representations": [
              {
                "contentType": "application/xml",
                "schemaId": "626913b64634610edcbffcd1",
                "typeName": "Pet",
                "sample": "<pet>\r\n  <id>10</id>\r\n  <name>doggie</name>\r\n  <category>\r\n    <id>1</id>\r\n    <name>Dogs</name>\r\n  </category>\r\n  <photoUrls>\r\n    <photoUrl>string</photoUrl>\r\n  </photoUrls>\r\n  <tags>\r\n    <tag>\r\n      <id>0</id>\r\n      <name>string</name>\r\n    </tag>\r\n  </tags>\r\n  <status>available</status>\r\n</pet>"
              },
              {
                "contentType": "application/json",
                "schemaId": "626913b64634610edcbffcd1",
                "typeName": "Pet",
                "sample": "{\r\n  \"id\": 10.0,\r\n  \"name\": \"doggie\",\r\n  \"category\": {\r\n    \"id\": 1.0,\r\n    \"name\": \"Dogs\"\r\n  },\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 0,\r\n      \"name\": \"string\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}"
              }
            ],
            "statusCode": 200
          },
          {
            "description": "Invalid ID supplied",
            "headers": [],
            "representations": [],
            "statusCode": 400
          },
          {
            "description": "Pet not found",
            "headers": [],
            "representations": [],
            "statusCode": 404
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/swagger-petstore-openapi-3-0/getInventory')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'swagger-petstore-openapi-3-0')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('apimServiceName'), 'swagger-petstore-openapi-3-0', '626913b64634610edcbffcd1')]"
      ],
      "properties": {
        "displayName": "Returns pet inventories by status",
        "method": "GET",
        "urlTemplate": "/store/inventory",
        "description": "Returns a map of status codes to quantities",
        "templateParameters": [],
        "responses": [
          {
            "description": "successful operation",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "626913b64634610edcbffcd1",
                "typeName": "StoreInventoryGet200ApplicationJsonResponse",
                "sample": "{}"
              }
            ],
            "statusCode": 200
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "name": "[concat(parameters('apimServiceName'), '/swagger-petstore-openapi-3-0/getPetById/pet')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), 'swagger-petstore-openapi-3-0', 'getPetById')]"
      ],
      "properties": {
        "displayName": "pet"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "name": "[concat(parameters('apimServiceName'), '/swagger-petstore-openapi-3-0/getInventory/store')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), 'swagger-petstore-openapi-3-0', 'getInventory')]"
      ],
      "properties": {
        "displayName": "store"
      }
    }
  ]
}