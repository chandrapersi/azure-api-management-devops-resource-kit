{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "apimServiceName": {
      "type": "string"
    },
    "policyXMLBaseUrl": {
      "type": "string"
    },
    "apiLoggerId": {
      "type": "object"
    }
  },
  "resources": [
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis",
      "name": "[concat(parameters('apimServiceName'), '/2e6c853c29c34231b86d49dc8c1c8b7a')]",
      "dependsOn": [],
      "properties": {
        "description": "Policy report API's can be used to get details of various reports available in Policy system",
        "authenticationSettings": {
          "subscriptionKeyRequired": false
        },
        "subscriptionKeyParameterNames": {
          "header": "Ocp-Apim-Subscription-Key",
          "query": "subscription-key"
        },
        "apiRevision": "1",
        "isCurrent": true,
        "subscriptionRequired": true,
        "displayName": "Policy report API",
        "serviceUrl": "https://suite-test1.cloudinsurer.com/mic/api/oas/policy-reports/v1/reports",
        "path": "Reports",
        "protocols": [
          "https"
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/schemas",
      "name": "[concat(parameters('apimServiceName'), '/2e6c853c29c34231b86d49dc8c1c8b7a/627dfe724634611330f0d8d2')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), '2e6c853c29c34231b86d49dc8c1c8b7a')]"
      ],
      "properties": {
        "contentType": "application/vnd.oai.openapi.components+json",
        "document": {
          "components": {
            "schemas": {
              "RequestFilter": {
                "type": "object",
                "properties": {
                  "filterColumn": {
                    "type": "string",
                    "description": "Filter column"
                  },
                  "filterValue": {
                    "type": "string",
                    "description": "Filter Value"
                  },
                  "filterFormat": {
                    "enum": [
                      "STRING",
                      "NUMBER",
                      "DATE"
                    ],
                    "type": "string",
                    "description": "format for the filter value",
                    "default": "STRING"
                  }
                },
                "description": "This object represents the additional filter information for the request"
              },
              "upcomingRenewals_additionalFilters": {
                "type": "object",
                "properties": {
                  "filterColumn": {
                    "enum": [
                      "expiringdaysin"
                    ],
                    "type": "string",
                    "description": "These values can be used for the filterColumn"
                  }
                },
                "description": "Set of acceptable value for upcomingRenewals in Requestfilter objects filterColumn."
              },
              "pendingReferals_additionalFilters": {
                "type": "object",
                "properties": {
                  "filterColumn": {
                    "enum": [
                      "companyCode",
                      "productCode",
                      "underwriterCode",
                      "underwriterName",
                      "producerName",
                      "policyNumber",
                      "marketManager",
                      "customerName"
                    ],
                    "type": "string",
                    "description": "These values can be used for the filterColumn"
                  }
                },
                "description": "Set of acceptable value for pendingReferals in Requestfilter objects filterColumn."
              },
              "rejectedReferrals_additionalFilters": {
                "type": "object",
                "properties": {
                  "filterColumn": {
                    "enum": [
                      "companyCode",
                      "productCode",
                      "underwriterCode",
                      "underwriterName",
                      "producerName",
                      "policyNumber",
                      "marketManager",
                      "customerName"
                    ],
                    "type": "string",
                    "description": "These values can be used for the filterColumn"
                  }
                },
                "description": "Set of acceptable value for rejectedReferrals in Requestfilter objects filterColumn."
              },
              "policyClaimsView_additionalFilters": {
                "type": "object",
                "properties": {
                  "filterColumn": {
                    "enum": [
                      "policynumber",
                      "_entityReference"
                    ],
                    "type": "string",
                    "description": "These values can be used for the filterColumn"
                  }
                },
                "description": "Set of acceptable value for policyClaimsView in Requestfilter objects filterColumn."
              },
              "customerQuotesReport_additionalFilters": {
                "type": "object",
                "properties": {
                  "filterColumn": {
                    "enum": [
                      "Status",
                      "customerId"
                    ],
                    "type": "string",
                    "description": "These values can be used for the filterColumn"
                  }
                },
                "description": "Set of acceptable value for customerQuotesReport in Requestfilter objects filterColumn."
              },
              "customerPoliciesQuotesReport_additionalFilters": {
                "type": "object",
                "properties": {
                  "filterColumn": {
                    "enum": [
                      "Status",
                      "customerId"
                    ],
                    "type": "string",
                    "description": "These values can be used for the filterColumn"
                  }
                },
                "description": "Set of acceptable value for customerPoliciesQuotesReport in Requestfilter objects filterColumn."
              },
              "policyDashboard_additionalFilters": {
                "type": "object",
                "properties": {
                  "filterColumn": {
                    "enum": [
                      "lossDate",
                      "policynumber"
                    ],
                    "type": "string",
                    "description": "These values can be used for the filterColumn"
                  }
                },
                "description": "Set of acceptable value for policyDashboard in Requestfilter objects filterColumn."
              },
              "customerDashboard_additionalFilters": {
                "type": "object",
                "properties": {
                  "filterColumn": {
                    "enum": [
                      "customernumber"
                    ],
                    "type": "string",
                    "description": "These values can be used for the filterColumn"
                  }
                },
                "description": "Set of acceptable value for customerDashboard in Requestfilter objects filterColumn."
              },
              "pendingIssuances_additionalFilters": {
                "type": "object",
                "properties": {
                  "filterColumn": {
                    "enum": [
                      "pending_since",
                      "customerName"
                    ],
                    "type": "string",
                    "description": "These values can be used for the filterColumn"
                  }
                },
                "description": "Set of acceptable value for pendingIssuances in Requestfilter objects filterColumn."
              },
              "pendingCancellations_additionalFilters": {
                "type": "object",
                "properties": {
                  "filterColumn": {
                    "enum": [
                      "companyCode",
                      "productCode",
                      "underwriterCode",
                      "daysTillCancel",
                      "underwriterName",
                      "policyNumber",
                      "customerName"
                    ],
                    "type": "string",
                    "description": "These values can be used for the filterColumn"
                  }
                },
                "description": "Set of acceptable value for pendingCancellations in Requestfilter objects filterColumn."
              },
              "pendingQuotes_additionalFilters": {
                "type": "object",
                "properties": {
                  "filterColumn": {
                    "enum": [
                      "pending_since",
                      "customerName"
                    ],
                    "type": "string",
                    "description": "These values can be used for the filterColumn"
                  }
                },
                "description": "Set of acceptable value for pendingQuotes in Requestfilter objects filterColumn."
              },
              "Pagination": {
                "type": "object",
                "properties": {
                  "correlationid": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "Used to identify the record cache if the pagination logic uses a server side cache.",
                    "example": "BLUSRLIST_101"
                  },
                  "pageSize": {
                    "type": "integer",
                    "description": "Number of records to be returned in a single page. API will use default value if this is not supplied",
                    "format": "int32",
                    "default": 10,
                    "example": 10
                  },
                  "totalRecords": {
                    "type": "integer",
                    "description": "Total number of records. This can be used by the consumer to decide the page size.",
                    "format": "int32",
                    "readOnly": true,
                    "example": 100
                  },
                  "pageNumber": {
                    "type": "integer",
                    "description": "Page number of the current records.",
                    "format": "int32",
                    "readOnly": true,
                    "example": 1
                  },
                  "lastPageNumber": {
                    "type": "integer",
                    "description": "Page number of the last page based on total records.",
                    "format": "int32",
                    "readOnly": true,
                    "example": 10
                  },
                  "startIndex": {
                    "type": "string",
                    "description": "Start index/ID of records in the current page. This is the start cursor of the record set representing a page.This can be continutation token to fetch the previous page.",
                    "readOnly": true,
                    "example": "u1001"
                  },
                  "endIndex": {
                    "type": "string",
                    "description": "End index/ID of records in the current page.This is the end cursor of the record set representing a page. This can be continutation token to fetch the next page.",
                    "readOnly": true,
                    "example": "u1010"
                  },
                  "links": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/PageLink"
                    },
                    "description": "Page links for previous, next, first and last pages"
                  }
                },
                "description": "Pagination Metada which is used to communicate pagination related fields between consumer and API implementation"
              },
              "PageLink": {
                "type": "object",
                "properties": {
                  "next": {
                    "maxLength": 150,
                    "type": "string",
                    "description": "Represents http link to access the next page",
                    "example": "http://sampledomain/version/resourcename?pageSize=10&pageNumber=2"
                  },
                  "prev": {
                    "maxLength": 150,
                    "type": "string",
                    "description": "Represents http link to access the previous page",
                    "example": "http://sampledomain/version/resourcename?pageSize=10&pageNumber=1"
                  },
                  "first": {
                    "maxLength": 150,
                    "type": "string",
                    "description": "Represents http link to access the first page",
                    "example": "http://sampledomain/version/resourcename?pageSize=10&pageNumber=1"
                  },
                  "last": {
                    "maxLength": 150,
                    "type": "string",
                    "description": "Represents http link to access the last page",
                    "example": "http://sampledomain/version/resourcename?pageSize=10&pageNumber=10"
                  }
                },
                "description": "Represents first, last, previous and next page , http links in a pagination context."
              },
              "Error_message": {
                "type": "object",
                "properties": {
                  "systemerrcode": {
                    "type": "string",
                    "description": "System/Application error code",
                    "example": "ERR-001"
                  },
                  "developer": {
                    "type": "string",
                    "description": "Verbose, plain language description of the problem for the app developer with hints about how to fix it.",
                    "example": "Message for app developer"
                  },
                  "user": {
                    "type": "string",
                    "description": "Pass this message on to the app user if needed.",
                    "example": "Message for end user"
                  }
                }
              },
              "Error": {
                "required": [
                  "message",
                  "status",
                  "statuscode"
                ],
                "type": "object",
                "properties": {
                  "statuscode": {
                    "type": "string",
                    "description": "HTTP Status code for example 200/400/500",
                    "example": "http-status-code"
                  },
                  "status": {
                    "type": "string",
                    "description": "Short status description",
                    "example": "Example status message"
                  },
                  "id": {
                    "type": "string",
                    "description": "Unique id of the policy"
                  },
                  "message": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Error_message"
                    },
                    "description": "Detailed error messages"
                  },
                  "moreinfo": {
                    "type": "string",
                    "description": "HTTP Link to more information page.",
                    "example": "http://sampledomain/errors/ERR-001"
                  }
                }
              },
              "upcomingRenewals_ResponseDetails": {
                "type": "object",
                "properties": {
                  "reportCount": {
                    "type": "integer",
                    "description": "Indicate the total number of records fetched by the report",
                    "format": "int32"
                  },
                  "sortColumn": {
                    "type": "string",
                    "description": "indictes the column name on which the report is sorted"
                  },
                  "sortOrder": {
                    "enum": [
                      "ASC",
                      "DESC"
                    ],
                    "type": "string",
                    "description": "indicates the sort order"
                  },
                  "effectiveStartDateRange": {
                    "type": "string",
                    "description": "Enter Effective Date start Range for Quote/Policy to be retrieved",
                    "format": "date-time"
                  },
                  "effectiveEndDateRange": {
                    "type": "string",
                    "description": "Enter Effective Date Range for Quote/Policy to be retrieved",
                    "format": "date-time"
                  },
                  "reportData": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "PolicyEffectiveDate": {
                          "type": "string",
                          "description": "Value of PolicyEffectiveDate"
                        },
                        "Producer": {
                          "type": "string",
                          "description": "Value of Producer"
                        },
                        "Zip": {
                          "type": "string",
                          "description": "Value of Zip"
                        },
                        "PolicyNumber": {
                          "type": "string",
                          "description": "Value of PolicyNumber"
                        },
                        "Street": {
                          "type": "string",
                          "description": "Value of Street"
                        },
                        "Email": {
                          "type": "string",
                          "description": "Value of Email"
                        },
                        "ProducerCode": {
                          "type": "string",
                          "description": "Value of ProducerCode"
                        },
                        "City": {
                          "type": "string",
                          "description": "Value of City"
                        },
                        "CustomerId": {
                          "type": "string",
                          "description": "Value of CustomerId"
                        },
                        "Product": {
                          "type": "string",
                          "description": "Value of Product"
                        },
                        "TotalWrittenPremium": {
                          "type": "string",
                          "description": "Value of TotalWrittenPremium"
                        },
                        "State": {
                          "type": "string",
                          "description": "Value of State"
                        },
                        "Surcharge/tax/fee": {
                          "type": "string",
                          "description": "Value of Surcharge/tax/fee"
                        },
                        "PolicyEffectiveDateSort": {
                          "type": "string",
                          "description": "Value of PolicyEffectiveDateSort"
                        },
                        "Company": {
                          "type": "string",
                          "description": "Value of Company"
                        },
                        "PolicyExpirationDateSort": {
                          "type": "string",
                          "description": "Value of PolicyExpirationDateSort"
                        },
                        "SourceSystem": {
                          "type": "string",
                          "description": "Value of SourceSystem"
                        },
                        "Insured": {
                          "type": "string",
                          "description": "Value of Insured"
                        },
                        "PolicyExpirationDate": {
                          "type": "string",
                          "description": "Value of PolicyExpirationDate"
                        },
                        "Fein": {
                          "type": "string",
                          "description": "Value of Fein"
                        },
                        "UnderwriterName": {
                          "type": "string",
                          "description": "Value of UnderwriterName"
                        },
                        "Phone": {
                          "type": "string",
                          "description": "Value of Phone"
                        },
                        "WrittenPremium": {
                          "type": "string",
                          "description": "Value of WrittenPremium"
                        },
                        "CustomerName": {
                          "type": "string",
                          "description": "Value of CustomerName"
                        }
                      }
                    }
                  },
                  "pagination": {
                    "$ref": "#/components/schemas/Pagination"
                  }
                },
                "description": "This object represents information for My Performance report"
              },
              "pendingReferals_ResponseDetails": {
                "type": "object",
                "properties": {
                  "reportCount": {
                    "type": "integer",
                    "description": "Indicate the total number of records fetched by the report",
                    "format": "int32"
                  },
                  "sortColumn": {
                    "type": "string",
                    "description": "indictes the column name on which the report is sorted"
                  },
                  "sortOrder": {
                    "enum": [
                      "ASC",
                      "DESC"
                    ],
                    "type": "string",
                    "description": "indicates the sort order"
                  },
                  "effectiveStartDateRange": {
                    "type": "string",
                    "description": "Enter Effective Date start Range for Quote/Policy to be retrieved",
                    "format": "date-time"
                  },
                  "effectiveEndDateRange": {
                    "type": "string",
                    "description": "Enter Effective Date Range for Quote/Policy to be retrieved",
                    "format": "date-time"
                  },
                  "reportData": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "EffectiveDate": {
                          "type": "string",
                          "description": "Value of EffectiveDate"
                        },
                        "AgencyName": {
                          "type": "string",
                          "description": "Value of AgencyName"
                        },
                        "ItemNumber": {
                          "type": "string",
                          "description": "Value of ItemNumber"
                        },
                        "Date": {
                          "type": "string",
                          "description": "Value of Date"
                        },
                        "AgencyNumber": {
                          "type": "string",
                          "description": "Value of AgencyNumber"
                        },
                        "CustomerId": {
                          "type": "string",
                          "description": "Value of CustomerId"
                        },
                        "Product": {
                          "type": "string",
                          "description": "Value of Product"
                        },
                        "TotalPremium": {
                          "type": "string",
                          "description": "Value of TotalPremium"
                        },
                        "Surcharge/Tax/fee": {
                          "type": "string",
                          "description": "Value of Surcharge/Tax/fee"
                        },
                        "PolicyEffectiveDateSort": {
                          "type": "string",
                          "description": "Value of PolicyEffectiveDateSort"
                        },
                        "EntityType": {
                          "type": "string",
                          "description": "Value of EntityType"
                        },
                        "PolicyExpirationDateSort": {
                          "type": "string",
                          "description": "Value of PolicyExpirationDateSort"
                        },
                        "SourceSystem": {
                          "type": "string",
                          "description": "Value of SourceSystem"
                        },
                        "Customer": {
                          "type": "string",
                          "description": "Value of Customer"
                        },
                        "ExpirationDate": {
                          "type": "string",
                          "description": "Value of ExpirationDate"
                        },
                        "Underwriter": {
                          "type": "string",
                          "description": "Value of Underwriter"
                        },
                        "Premium": {
                          "type": "string",
                          "description": "Value of Premium"
                        },
                        "CustomerName": {
                          "type": "string",
                          "description": "Value of CustomerName"
                        }
                      }
                    }
                  },
                  "pagination": {
                    "$ref": "#/components/schemas/Pagination"
                  }
                },
                "description": "This object represents information for My Performance report"
              },
              "myPerformanceListConf_ResponseDetails": {
                "type": "object",
                "properties": {
                  "reportCount": {
                    "type": "integer",
                    "description": "Indicate the total number of records fetched by the report",
                    "format": "int32"
                  },
                  "sortColumn": {
                    "type": "string",
                    "description": "indictes the column name on which the report is sorted"
                  },
                  "sortOrder": {
                    "enum": [
                      "ASC",
                      "DESC"
                    ],
                    "type": "string",
                    "description": "indicates the sort order"
                  },
                  "effectiveStartDateRange": {
                    "type": "string",
                    "description": "Enter Effective Date start Range for Quote/Policy to be retrieved",
                    "format": "date-time"
                  },
                  "effectiveEndDateRange": {
                    "type": "string",
                    "description": "Enter Effective Date Range for Quote/Policy to be retrieved",
                    "format": "date-time"
                  },
                  "reportData": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "PolicyIssued": {
                          "type": "string",
                          "description": "Value of PolicyIssued"
                        },
                        "NumberOfQuotes": {
                          "type": "string",
                          "description": "Value of NumberOfQuotes"
                        },
                        "PremiumWritten": {
                          "type": "string",
                          "description": "Value of PremiumWritten"
                        },
                        "PremiumWrittenWithoutFormat": {
                          "type": "string",
                          "description": "Value of PremiumWrittenWithoutFormat"
                        }
                      }
                    }
                  },
                  "pagination": {
                    "$ref": "#/components/schemas/Pagination"
                  }
                },
                "description": "This object represents information for My Performance report"
              },
              "agentInfo_ResponseDetails": {
                "type": "object",
                "properties": {
                  "reportCount": {
                    "type": "integer",
                    "description": "Indicate the total number of records fetched by the report",
                    "format": "int32"
                  },
                  "sortColumn": {
                    "type": "string",
                    "description": "indictes the column name on which the report is sorted"
                  },
                  "sortOrder": {
                    "enum": [
                      "ASC",
                      "DESC"
                    ],
                    "type": "string",
                    "description": "indicates the sort order"
                  },
                  "effectiveStartDateRange": {
                    "type": "string",
                    "description": "Enter Effective Date start Range for Quote/Policy to be retrieved",
                    "format": "date-time"
                  },
                  "effectiveEndDateRange": {
                    "type": "string",
                    "description": "Enter Effective Date Range for Quote/Policy to be retrieved",
                    "format": "date-time"
                  },
                  "reportData": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "AgentName": {
                          "type": "string",
                          "description": "Value of AgentName"
                        },
                        "LicenseState": {
                          "type": "string",
                          "description": "Value of LicenseState"
                        },
                        "Id": {
                          "type": "string",
                          "description": "Value of Id"
                        },
                        "LicenseNo": {
                          "type": "string",
                          "description": "Value of LicenseNo"
                        },
                        "ProducerCategory": {
                          "type": "string",
                          "description": "Value of ProducerCategory"
                        },
                        "EmailId": {
                          "type": "string",
                          "description": "Value of EmailId"
                        },
                        "DirectBillIndicator": {
                          "type": "string",
                          "description": "Value of DirectBillIndicator"
                        },
                        "TaxStateProvince": {
                          "type": "string",
                          "description": "Value of TaxStateProvince"
                        },
                        "Territory": {
                          "type": "string",
                          "description": "Value of Territory"
                        },
                        "Address": {
                          "type": "string",
                          "description": "Value of Address"
                        },
                        "AgentNumber": {
                          "type": "string",
                          "description": "Value of AgentNumber"
                        },
                        "LicenseId": {
                          "type": "string",
                          "description": "Value of LicenseId"
                        },
                        "Telephone": {
                          "type": "string",
                          "description": "Value of Telephone"
                        },
                        "ProducerClass": {
                          "type": "string",
                          "description": "Value of ProducerClass"
                        }
                      }
                    }
                  },
                  "pagination": {
                    "$ref": "#/components/schemas/Pagination"
                  }
                },
                "description": "This object represents information for My Performance report"
              },
              "rejectedReferrals_ResponseDetails": {
                "type": "object",
                "properties": {
                  "reportCount": {
                    "type": "integer",
                    "description": "Indicate the total number of records fetched by the report",
                    "format": "int32"
                  },
                  "sortColumn": {
                    "type": "string",
                    "description": "indictes the column name on which the report is sorted"
                  },
                  "sortOrder": {
                    "enum": [
                      "ASC",
                      "DESC"
                    ],
                    "type": "string",
                    "description": "indicates the sort order"
                  },
                  "effectiveStartDateRange": {
                    "type": "string",
                    "description": "Enter Effective Date start Range for Quote/Policy to be retrieved",
                    "format": "date-time"
                  },
                  "effectiveEndDateRange": {
                    "type": "string",
                    "description": "Enter Effective Date Range for Quote/Policy to be retrieved",
                    "format": "date-time"
                  },
                  "reportData": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "EffectiveDate": {
                          "type": "string",
                          "description": "Value of EffectiveDate"
                        },
                        "UnderwriterReason": {
                          "type": "string",
                          "description": "Value of UnderwriterReason"
                        },
                        "AgencyName": {
                          "type": "string",
                          "description": "Value of AgencyName"
                        },
                        "ItemNumber": {
                          "type": "string",
                          "description": "Value of ItemNumber"
                        },
                        "Date": {
                          "type": "string",
                          "description": "Value of Date"
                        },
                        "AgencyNumber": {
                          "type": "string",
                          "description": "Value of AgencyNumber"
                        },
                        "CustomerId": {
                          "type": "string",
                          "description": "Value of CustomerId"
                        },
                        "Product": {
                          "type": "string",
                          "description": "Value of Product"
                        },
                        "TotalPremium": {
                          "type": "string",
                          "description": "Value of TotalPremium"
                        },
                        "Surcharge/Tax/fee": {
                          "type": "string",
                          "description": "Value of Surcharge/Tax/fee"
                        },
                        "PolicyEffectiveDateSort": {
                          "type": "string",
                          "description": "Value of PolicyEffectiveDateSort"
                        },
                        "EntityType": {
                          "type": "string",
                          "description": "Value of EntityType"
                        },
                        "PolicyExpirationDateSort": {
                          "type": "string",
                          "description": "Value of PolicyExpirationDateSort"
                        },
                        "SourceSystem": {
                          "type": "string",
                          "description": "Value of SourceSystem"
                        },
                        "Customer": {
                          "type": "string",
                          "description": "Value of Customer"
                        },
                        "ExpirationDate": {
                          "type": "string",
                          "description": "Value of ExpirationDate"
                        },
                        "Underwriter": {
                          "type": "string",
                          "description": "Value of Underwriter"
                        },
                        "Premium": {
                          "type": "string",
                          "description": "Value of Premium"
                        },
                        "CustomerName": {
                          "type": "string",
                          "description": "Value of CustomerName"
                        }
                      }
                    }
                  },
                  "pagination": {
                    "$ref": "#/components/schemas/Pagination"
                  }
                },
                "description": "This object represents information for My Performance report"
              },
              "policyClaimsView_ResponseDetails": {
                "type": "object",
                "properties": {
                  "reportCount": {
                    "type": "integer",
                    "description": "Indicate the total number of records fetched by the report",
                    "format": "int32"
                  },
                  "sortColumn": {
                    "type": "string",
                    "description": "indictes the column name on which the report is sorted"
                  },
                  "sortOrder": {
                    "enum": [
                      "ASC",
                      "DESC"
                    ],
                    "type": "string",
                    "description": "indicates the sort order"
                  },
                  "effectiveStartDateRange": {
                    "type": "string",
                    "description": "Enter Effective Date start Range for Quote/Policy to be retrieved",
                    "format": "date-time"
                  },
                  "effectiveEndDateRange": {
                    "type": "string",
                    "description": "Enter Effective Date Range for Quote/Policy to be retrieved",
                    "format": "date-time"
                  },
                  "reportData": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "LossDate": {
                          "type": "string",
                          "description": "Value of LossDate"
                        },
                        "TotalExpenseOutstanding": {
                          "type": "string",
                          "description": "Value of TotalExpenseOutstanding"
                        },
                        "ReportingDate": {
                          "type": "string",
                          "description": "Value of ReportingDate"
                        },
                        "Status": {
                          "type": "string",
                          "description": "Value of Status"
                        },
                        "TotalLossOutstanding": {
                          "type": "string",
                          "description": "Value of TotalLossOutstanding"
                        },
                        "LastModified": {
                          "type": "string",
                          "description": "Value of LastModified"
                        },
                        "TotalLossPaid": {
                          "type": "string",
                          "description": "Value of TotalLossPaid"
                        },
                        "TotalExpensePaid": {
                          "type": "string",
                          "description": "Value of TotalExpensePaid"
                        },
                        "TotalIncurred": {
                          "type": "string",
                          "description": "Value of TotalIncurred"
                        },
                        "ClaimNumber": {
                          "type": "string",
                          "description": "Value of ClaimNumber"
                        }
                      }
                    }
                  },
                  "pagination": {
                    "$ref": "#/components/schemas/Pagination"
                  }
                },
                "description": "This object represents information for My Performance report"
              },
              "customerQuotesReport_ResponseDetails": {
                "type": "object",
                "properties": {
                  "reportCount": {
                    "type": "integer",
                    "description": "Indicate the total number of records fetched by the report",
                    "format": "int32"
                  },
                  "sortColumn": {
                    "type": "string",
                    "description": "indictes the column name on which the report is sorted"
                  },
                  "sortOrder": {
                    "enum": [
                      "ASC",
                      "DESC"
                    ],
                    "type": "string",
                    "description": "indicates the sort order"
                  },
                  "effectiveStartDateRange": {
                    "type": "string",
                    "description": "Enter Effective Date start Range for Quote/Policy to be retrieved",
                    "format": "date-time"
                  },
                  "effectiveEndDateRange": {
                    "type": "string",
                    "description": "Enter Effective Date Range for Quote/Policy to be retrieved",
                    "format": "date-time"
                  },
                  "reportData": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "EffectiveDate": {
                          "type": "string",
                          "description": "Value of EffectiveDate"
                        },
                        "EntityReference": {
                          "type": "string",
                          "description": "Value of EntityReference"
                        },
                        "FullTermPremium": {
                          "type": "string",
                          "description": "Value of FullTermPremium"
                        },
                        "Producer": {
                          "type": "string",
                          "description": "Value of Producer"
                        },
                        "PolicyNumber": {
                          "type": "string",
                          "description": "Value of PolicyNumber"
                        },
                        "Date": {
                          "type": "string",
                          "description": "Value of Date"
                        },
                        "PolicyEffectiveDateSort": {
                          "type": "string",
                          "description": "Value of PolicyEffectiveDateSort"
                        },
                        "PolicyExpirationDateSort": {
                          "type": "string",
                          "description": "Value of PolicyExpirationDateSort"
                        },
                        "Company": {
                          "type": "string",
                          "description": "Value of Company"
                        },
                        "SourceSystem": {
                          "type": "string",
                          "description": "Value of SourceSystem"
                        },
                        "Insured": {
                          "type": "string",
                          "description": "Value of Insured"
                        },
                        "ProducerCode": {
                          "type": "string",
                          "description": "Value of ProducerCode"
                        },
                        "Status": {
                          "type": "string",
                          "description": "Value of Status"
                        },
                        "ExpirationDate": {
                          "type": "string",
                          "description": "Value of ExpirationDate"
                        },
                        "Product": {
                          "type": "string",
                          "description": "Value of Product"
                        }
                      }
                    }
                  },
                  "pagination": {
                    "$ref": "#/components/schemas/Pagination"
                  }
                },
                "description": "This object represents information for My Performance report"
              },
              "customerPoliciesQuotesReport_ResponseDetails": {
                "type": "object",
                "properties": {
                  "reportCount": {
                    "type": "integer",
                    "description": "Indicate the total number of records fetched by the report",
                    "format": "int32"
                  },
                  "sortColumn": {
                    "type": "string",
                    "description": "indictes the column name on which the report is sorted"
                  },
                  "sortOrder": {
                    "enum": [
                      "ASC",
                      "DESC"
                    ],
                    "type": "string",
                    "description": "indicates the sort order"
                  },
                  "effectiveStartDateRange": {
                    "type": "string",
                    "description": "Enter Effective Date start Range for Quote/Policy to be retrieved",
                    "format": "date-time"
                  },
                  "effectiveEndDateRange": {
                    "type": "string",
                    "description": "Enter Effective Date Range for Quote/Policy to be retrieved",
                    "format": "date-time"
                  },
                  "reportData": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "EffectiveDate": {
                          "type": "string",
                          "description": "Value of EffectiveDate"
                        },
                        "EntityReference": {
                          "type": "string",
                          "description": "Value of EntityReference"
                        },
                        "FullTermPremium": {
                          "type": "string",
                          "description": "Value of FullTermPremium"
                        },
                        "Producer": {
                          "type": "string",
                          "description": "Value of Producer"
                        },
                        "PolicyNumber": {
                          "type": "string",
                          "description": "Value of PolicyNumber"
                        },
                        "Date": {
                          "type": "string",
                          "description": "Value of Date"
                        },
                        "PolicyEffectiveDateSort": {
                          "type": "string",
                          "description": "Value of PolicyEffectiveDateSort"
                        },
                        "PolicyExpirationDateSort": {
                          "type": "string",
                          "description": "Value of PolicyExpirationDateSort"
                        },
                        "Company": {
                          "type": "string",
                          "description": "Value of Company"
                        },
                        "SourceSystem": {
                          "type": "string",
                          "description": "Value of SourceSystem"
                        },
                        "Insured": {
                          "type": "string",
                          "description": "Value of Insured"
                        },
                        "ProducerCode": {
                          "type": "string",
                          "description": "Value of ProducerCode"
                        },
                        "Status": {
                          "type": "string",
                          "description": "Value of Status"
                        },
                        "ExpirationDate": {
                          "type": "string",
                          "description": "Value of ExpirationDate"
                        },
                        "Product": {
                          "type": "string",
                          "description": "Value of Product"
                        }
                      }
                    }
                  },
                  "pagination": {
                    "$ref": "#/components/schemas/Pagination"
                  }
                },
                "description": "This object represents information for My Performance report"
              },
              "monthlyWrittenPremiumSummary_ResponseDetails": {
                "type": "object",
                "properties": {
                  "reportCount": {
                    "type": "integer",
                    "description": "Indicate the total number of records fetched by the report",
                    "format": "int32"
                  },
                  "sortColumn": {
                    "type": "string",
                    "description": "indictes the column name on which the report is sorted"
                  },
                  "sortOrder": {
                    "enum": [
                      "ASC",
                      "DESC"
                    ],
                    "type": "string",
                    "description": "indicates the sort order"
                  },
                  "effectiveStartDateRange": {
                    "type": "string",
                    "description": "Enter Effective Date start Range for Quote/Policy to be retrieved",
                    "format": "date-time"
                  },
                  "effectiveEndDateRange": {
                    "type": "string",
                    "description": "Enter Effective Date Range for Quote/Policy to be retrieved",
                    "format": "date-time"
                  },
                  "reportData": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "TransactionMonth": {
                          "type": "string",
                          "description": "Value of TransactionMonth"
                        },
                        "TransactionYearmonth": {
                          "type": "string",
                          "description": "Value of TransactionYearmonth"
                        },
                        "WrittenPremiumAmount": {
                          "type": "string",
                          "description": "Value of WrittenPremiumAmount"
                        }
                      }
                    }
                  },
                  "pagination": {
                    "$ref": "#/components/schemas/Pagination"
                  }
                },
                "description": "This object represents information for My Performance report"
              },
              "policyDashboard_ResponseDetails": {
                "type": "object",
                "properties": {
                  "reportCount": {
                    "type": "integer",
                    "description": "Indicate the total number of records fetched by the report",
                    "format": "int32"
                  },
                  "sortColumn": {
                    "type": "string",
                    "description": "indictes the column name on which the report is sorted"
                  },
                  "sortOrder": {
                    "enum": [
                      "ASC",
                      "DESC"
                    ],
                    "type": "string",
                    "description": "indicates the sort order"
                  },
                  "effectiveStartDateRange": {
                    "type": "string",
                    "description": "Enter Effective Date start Range for Quote/Policy to be retrieved",
                    "format": "date-time"
                  },
                  "effectiveEndDateRange": {
                    "type": "string",
                    "description": "Enter Effective Date Range for Quote/Policy to be retrieved",
                    "format": "date-time"
                  },
                  "reportData": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "EffectiveDate": {
                          "type": "string",
                          "description": "Value of EffectiveDate"
                        },
                        "PolicyNumber": {
                          "type": "string",
                          "description": "Value of PolicyNumber"
                        },
                        "Firstname": {
                          "type": "string",
                          "description": "Value of Firstname"
                        },
                        "Agentid": {
                          "type": "string",
                          "description": "Value of Agentid"
                        },
                        "Agentname": {
                          "type": "string",
                          "description": "Value of Agentname"
                        },
                        "Status": {
                          "type": "string",
                          "description": "Value of Status"
                        },
                        "CustomerId": {
                          "type": "string",
                          "description": "Value of CustomerId"
                        },
                        "Lastname": {
                          "type": "string",
                          "description": "Value of Lastname"
                        },
                        "Insuredaddress": {
                          "type": "string",
                          "description": "Value of Insuredaddress"
                        },
                        "Taxes,Fees,Surcharges": {
                          "type": "string",
                          "description": "Value of Taxes,Fees,Surcharges"
                        },
                        "WrittenPremium": {
                          "type": "string",
                          "description": "Value of WrittenPremium"
                        },
                        "TransactionEffectiveDate": {
                          "type": "string",
                          "description": "Value of TransactionEffectiveDate"
                        },
                        "Insuredphone": {
                          "type": "string",
                          "description": "Value of Insuredphone"
                        },
                        "PolicyPeriod": {
                          "type": "string",
                          "description": "Value of PolicyPeriod"
                        },
                        "PolicyReference": {
                          "type": "string",
                          "description": "Value of PolicyReference"
                        },
                        "ProductName": {
                          "type": "string",
                          "description": "Value of ProductName"
                        },
                        "EntityType": {
                          "type": "string",
                          "description": "Value of EntityType"
                        },
                        "TransactionPremium": {
                          "type": "string",
                          "description": "Value of TransactionPremium"
                        },
                        "CompanyName": {
                          "type": "string",
                          "description": "Value of CompanyName"
                        },
                        "TotalPremium": {
                          "type": "string",
                          "description": "Value of TotalPremium"
                        },
                        "ExpirationDate": {
                          "type": "string",
                          "description": "Value of ExpirationDate"
                        },
                        "UnderwriterName": {
                          "type": "string",
                          "description": "Value of UnderwriterName"
                        },
                        "ValidPeriodRemaining": {
                          "type": "string",
                          "description": "Value of ValidPeriodRemaining"
                        },
                        "CustomerName": {
                          "type": "string",
                          "description": "Value of CustomerName"
                        },
                        "Insuredname": {
                          "type": "string",
                          "description": "Value of Insuredname"
                        }
                      }
                    }
                  },
                  "pagination": {
                    "$ref": "#/components/schemas/Pagination"
                  }
                },
                "description": "This object represents information for My Performance report"
              },
              "pendingIssuances_ResponseDetails": {
                "type": "object",
                "properties": {
                  "reportCount": {
                    "type": "integer",
                    "description": "Indicate the total number of records fetched by the report",
                    "format": "int32"
                  },
                  "sortColumn": {
                    "type": "string",
                    "description": "indictes the column name on which the report is sorted"
                  },
                  "sortOrder": {
                    "enum": [
                      "ASC",
                      "DESC"
                    ],
                    "type": "string",
                    "description": "indicates the sort order"
                  },
                  "effectiveStartDateRange": {
                    "type": "string",
                    "description": "Enter Effective Date start Range for Quote/Policy to be retrieved",
                    "format": "date-time"
                  },
                  "effectiveEndDateRange": {
                    "type": "string",
                    "description": "Enter Effective Date Range for Quote/Policy to be retrieved",
                    "format": "date-time"
                  },
                  "reportData": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "EffectiveDate": {
                          "type": "string",
                          "description": "Value of EffectiveDate"
                        },
                        "ProducerName": {
                          "type": "string",
                          "description": "Value of ProducerName"
                        },
                        "TotalQuotedPremium": {
                          "type": "string",
                          "description": "Value of TotalQuotedPremium"
                        },
                        "Zip": {
                          "type": "string",
                          "description": "Value of Zip"
                        },
                        "QuoteNumber": {
                          "type": "string",
                          "description": "Value of QuoteNumber"
                        },
                        "Street": {
                          "type": "string",
                          "description": "Value of Street"
                        },
                        "Email": {
                          "type": "string",
                          "description": "Value of Email"
                        },
                        "ProducerCode": {
                          "type": "string",
                          "description": "Value of ProducerCode"
                        },
                        "City": {
                          "type": "string",
                          "description": "Value of City"
                        },
                        "CustomerId": {
                          "type": "string",
                          "description": "Value of CustomerId"
                        },
                        "Product": {
                          "type": "string",
                          "description": "Value of Product"
                        },
                        "PendingSinceSort": {
                          "type": "string",
                          "description": "Value of PendingSinceSort"
                        },
                        "PendingSince": {
                          "type": "string",
                          "description": "Value of PendingSince"
                        },
                        "State": {
                          "type": "string",
                          "description": "Value of State"
                        },
                        "Surcharge/Tax/fee": {
                          "type": "string",
                          "description": "Value of Surcharge/Tax/fee"
                        },
                        "PolicyEffectiveDateSort": {
                          "type": "string",
                          "description": "Value of PolicyEffectiveDateSort"
                        },
                        "QuotedPremium": {
                          "type": "string",
                          "description": "Value of QuotedPremium"
                        },
                        "PolicyExpirationDateSort": {
                          "type": "string",
                          "description": "Value of PolicyExpirationDateSort"
                        },
                        "Company": {
                          "type": "string",
                          "description": "Value of Company"
                        },
                        "SourceSystem": {
                          "type": "string",
                          "description": "Value of SourceSystem"
                        },
                        "Insured": {
                          "type": "string",
                          "description": "Value of Insured"
                        },
                        "ExpiryDate": {
                          "type": "string",
                          "description": "Value of ExpiryDate"
                        },
                        "Fein": {
                          "type": "string",
                          "description": "Value of Fein"
                        },
                        "UnderwriterName": {
                          "type": "string",
                          "description": "Value of UnderwriterName"
                        },
                        "Phone": {
                          "type": "string",
                          "description": "Value of Phone"
                        },
                        "CustomerName": {
                          "type": "string",
                          "description": "Value of CustomerName"
                        }
                      }
                    }
                  },
                  "pagination": {
                    "$ref": "#/components/schemas/Pagination"
                  }
                },
                "description": "This object represents information for My Performance report"
              },
              "monthlyIssuedPoliciesSummary_ResponseDetails": {
                "type": "object",
                "properties": {
                  "reportCount": {
                    "type": "integer",
                    "description": "Indicate the total number of records fetched by the report",
                    "format": "int32"
                  },
                  "sortColumn": {
                    "type": "string",
                    "description": "indictes the column name on which the report is sorted"
                  },
                  "sortOrder": {
                    "enum": [
                      "ASC",
                      "DESC"
                    ],
                    "type": "string",
                    "description": "indicates the sort order"
                  },
                  "effectiveStartDateRange": {
                    "type": "string",
                    "description": "Enter Effective Date start Range for Quote/Policy to be retrieved",
                    "format": "date-time"
                  },
                  "effectiveEndDateRange": {
                    "type": "string",
                    "description": "Enter Effective Date Range for Quote/Policy to be retrieved",
                    "format": "date-time"
                  },
                  "reportData": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "AccountingMonth": {
                          "type": "string",
                          "description": "Value of AccountingMonth"
                        },
                        "InforcePolicies": {
                          "type": "string",
                          "description": "Value of InforcePolicies"
                        },
                        "AccountingYearmonth": {
                          "type": "string",
                          "description": "Value of AccountingYearmonth"
                        }
                      }
                    }
                  },
                  "pagination": {
                    "$ref": "#/components/schemas/Pagination"
                  }
                },
                "description": "This object represents information for My Performance report"
              },
              "customerDashboard_ResponseDetails": {
                "type": "object",
                "properties": {
                  "reportCount": {
                    "type": "integer",
                    "description": "Indicate the total number of records fetched by the report",
                    "format": "int32"
                  },
                  "sortColumn": {
                    "type": "string",
                    "description": "indictes the column name on which the report is sorted"
                  },
                  "sortOrder": {
                    "enum": [
                      "ASC",
                      "DESC"
                    ],
                    "type": "string",
                    "description": "indicates the sort order"
                  },
                  "effectiveStartDateRange": {
                    "type": "string",
                    "description": "Enter Effective Date start Range for Quote/Policy to be retrieved",
                    "format": "date-time"
                  },
                  "effectiveEndDateRange": {
                    "type": "string",
                    "description": "Enter Effective Date Range for Quote/Policy to be retrieved",
                    "format": "date-time"
                  },
                  "reportData": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "MailingAddress": {
                          "type": "string",
                          "description": "Value of MailingAddress"
                        },
                        "InforcePremium": {
                          "type": "string",
                          "description": "Value of InforcePremium"
                        },
                        "Contactname": {
                          "type": "string",
                          "description": "Value of Contactname"
                        },
                        "Phone": {
                          "type": "string",
                          "description": "Value of Phone"
                        },
                        "CustomerPhone": {
                          "type": "string",
                          "description": "Value of CustomerPhone"
                        },
                        "CustomerSinceFormated": {
                          "type": "string",
                          "description": "Value of CustomerSinceFormated"
                        },
                        "Email": {
                          "type": "string",
                          "description": "Value of Email"
                        },
                        "Contactaddress": {
                          "type": "string",
                          "description": "Value of Contactaddress"
                        },
                        "CustomerSince": {
                          "type": "string",
                          "description": "Value of CustomerSince"
                        },
                        "Status": {
                          "type": "string",
                          "description": "Value of Status"
                        },
                        "Customerrating": {
                          "type": "string",
                          "description": "Value of Customerrating"
                        },
                        "CustomerName": {
                          "type": "string",
                          "description": "Value of CustomerName"
                        },
                        "CustomerNumber": {
                          "type": "string",
                          "description": "Value of CustomerNumber"
                        },
                        "InforcePolicies": {
                          "type": "string",
                          "description": "Value of InforcePolicies"
                        }
                      }
                    }
                  },
                  "pagination": {
                    "$ref": "#/components/schemas/Pagination"
                  }
                },
                "description": "This object represents information for My Performance report"
              },
              "pendingCancellations_ResponseDetails": {
                "type": "object",
                "properties": {
                  "reportCount": {
                    "type": "integer",
                    "description": "Indicate the total number of records fetched by the report",
                    "format": "int32"
                  },
                  "sortColumn": {
                    "type": "string",
                    "description": "indictes the column name on which the report is sorted"
                  },
                  "sortOrder": {
                    "enum": [
                      "ASC",
                      "DESC"
                    ],
                    "type": "string",
                    "description": "indicates the sort order"
                  },
                  "effectiveStartDateRange": {
                    "type": "string",
                    "description": "Enter Effective Date start Range for Quote/Policy to be retrieved",
                    "format": "date-time"
                  },
                  "effectiveEndDateRange": {
                    "type": "string",
                    "description": "Enter Effective Date Range for Quote/Policy to be retrieved",
                    "format": "date-time"
                  },
                  "reportData": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "PolicyEffectiveDate": {
                          "type": "string",
                          "description": "Value of PolicyEffectiveDate"
                        },
                        "DateCreated": {
                          "type": "string",
                          "description": "Value of DateCreated"
                        },
                        "DateSuspended": {
                          "type": "string",
                          "description": "Value of DateSuspended"
                        },
                        "CancellationDate": {
                          "type": "string",
                          "description": "Value of CancellationDate"
                        },
                        "ProducerName": {
                          "type": "string",
                          "description": "Value of ProducerName"
                        },
                        "Zip": {
                          "type": "string",
                          "description": "Value of Zip"
                        },
                        "MailDate": {
                          "type": "string",
                          "description": "Value of MailDate"
                        },
                        "PolicyNumber": {
                          "type": "string",
                          "description": "Value of PolicyNumber"
                        },
                        "Date": {
                          "type": "string",
                          "description": "Value of Date"
                        },
                        "MailedDateSort": {
                          "type": "string",
                          "description": "Value of MailedDateSort"
                        },
                        "Street": {
                          "type": "string",
                          "description": "Value of Street"
                        },
                        "Email": {
                          "type": "string",
                          "description": "Value of Email"
                        },
                        "ProducerCode": {
                          "type": "string",
                          "description": "Value of ProducerCode"
                        },
                        "City": {
                          "type": "string",
                          "description": "Value of City"
                        },
                        "CustomerId": {
                          "type": "string",
                          "description": "Value of CustomerId"
                        },
                        "Product": {
                          "type": "string",
                          "description": "Value of Product"
                        },
                        "Reason": {
                          "type": "string",
                          "description": "Value of Reason"
                        },
                        "TotalWrittenPremium": {
                          "type": "string",
                          "description": "Value of TotalWrittenPremium"
                        },
                        "State": {
                          "type": "string",
                          "description": "Value of State"
                        },
                        "PolicyEffectiveDateSort": {
                          "type": "string",
                          "description": "Value of PolicyEffectiveDateSort"
                        },
                        "PolicyExpirationDateSort": {
                          "type": "string",
                          "description": "Value of PolicyExpirationDateSort"
                        },
                        "Company": {
                          "type": "string",
                          "description": "Value of Company"
                        },
                        "SourceSystem": {
                          "type": "string",
                          "description": "Value of SourceSystem"
                        },
                        "Insured": {
                          "type": "string",
                          "description": "Value of Insured"
                        },
                        "DateCreatedSort": {
                          "type": "string",
                          "description": "Value of DateCreatedSort"
                        },
                        "PolicyExpiryDate": {
                          "type": "string",
                          "description": "Value of PolicyExpiryDate"
                        },
                        "Fein": {
                          "type": "string",
                          "description": "Value of Fein"
                        },
                        "UnderwriterName": {
                          "type": "string",
                          "description": "Value of UnderwriterName"
                        },
                        "Phone": {
                          "type": "string",
                          "description": "Value of Phone"
                        },
                        "CancellationDateSort": {
                          "type": "string",
                          "description": "Value of CancellationDateSort"
                        },
                        "DateSuspendedSort": {
                          "type": "string",
                          "description": "Value of DateSuspendedSort"
                        },
                        "CustomerName": {
                          "type": "string",
                          "description": "Value of CustomerName"
                        }
                      }
                    }
                  },
                  "pagination": {
                    "$ref": "#/components/schemas/Pagination"
                  }
                },
                "description": "This object represents information for My Performance report"
              },
              "pendingQuotes_ResponseDetails": {
                "type": "object",
                "properties": {
                  "reportCount": {
                    "type": "integer",
                    "description": "Indicate the total number of records fetched by the report",
                    "format": "int32"
                  },
                  "sortColumn": {
                    "type": "string",
                    "description": "indictes the column name on which the report is sorted"
                  },
                  "sortOrder": {
                    "enum": [
                      "ASC",
                      "DESC"
                    ],
                    "type": "string",
                    "description": "indicates the sort order"
                  },
                  "effectiveStartDateRange": {
                    "type": "string",
                    "description": "Enter Effective Date start Range for Quote/Policy to be retrieved",
                    "format": "date-time"
                  },
                  "effectiveEndDateRange": {
                    "type": "string",
                    "description": "Enter Effective Date Range for Quote/Policy to be retrieved",
                    "format": "date-time"
                  },
                  "reportData": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "EffectiveDate": {
                          "type": "string",
                          "description": "Value of EffectiveDate"
                        },
                        "ProducerName": {
                          "type": "string",
                          "description": "Value of ProducerName"
                        },
                        "TotalQuotedPremium": {
                          "type": "string",
                          "description": "Value of TotalQuotedPremium"
                        },
                        "Zip": {
                          "type": "string",
                          "description": "Value of Zip"
                        },
                        "QuoteNumber": {
                          "type": "string",
                          "description": "Value of QuoteNumber"
                        },
                        "Street": {
                          "type": "string",
                          "description": "Value of Street"
                        },
                        "Email": {
                          "type": "string",
                          "description": "Value of Email"
                        },
                        "ProducerCode": {
                          "type": "string",
                          "description": "Value of ProducerCode"
                        },
                        "Status": {
                          "type": "string",
                          "description": "Value of Status"
                        },
                        "City": {
                          "type": "string",
                          "description": "Value of City"
                        },
                        "CustomerId": {
                          "type": "string",
                          "description": "Value of CustomerId"
                        },
                        "Product": {
                          "type": "string",
                          "description": "Value of Product"
                        },
                        "PendingSinceSort": {
                          "type": "string",
                          "description": "Value of PendingSinceSort"
                        },
                        "PendingSince": {
                          "type": "string",
                          "description": "Value of PendingSince"
                        },
                        "State": {
                          "type": "string",
                          "description": "Value of State"
                        },
                        "Surcharge/Tax/fee": {
                          "type": "string",
                          "description": "Value of Surcharge/Tax/fee"
                        },
                        "PolicyEffectiveDateSort": {
                          "type": "string",
                          "description": "Value of PolicyEffectiveDateSort"
                        },
                        "QuotedPremium": {
                          "type": "string",
                          "description": "Value of QuotedPremium"
                        },
                        "PolicyExpirationDateSort": {
                          "type": "string",
                          "description": "Value of PolicyExpirationDateSort"
                        },
                        "Company": {
                          "type": "string",
                          "description": "Value of Company"
                        },
                        "SourceSystem": {
                          "type": "string",
                          "description": "Value of SourceSystem"
                        },
                        "Insured": {
                          "type": "string",
                          "description": "Value of Insured"
                        },
                        "ExpiryDate": {
                          "type": "string",
                          "description": "Value of ExpiryDate"
                        },
                        "Fein": {
                          "type": "string",
                          "description": "Value of Fein"
                        },
                        "UnderwriterName": {
                          "type": "string",
                          "description": "Value of UnderwriterName"
                        },
                        "Phone": {
                          "type": "string",
                          "description": "Value of Phone"
                        },
                        "CustomerName": {
                          "type": "string",
                          "description": "Value of CustomerName"
                        }
                      }
                    }
                  },
                  "pagination": {
                    "$ref": "#/components/schemas/Pagination"
                  }
                },
                "description": "This object represents information for My Performance report"
              },
              "ReportRequestDetails": {
                "type": "object",
                "properties": {
                  "sortColumn": {
                    "type": "string",
                    "description": "indictes the column name on which the report is sorted"
                  },
                  "sortOrder": {
                    "enum": [
                      "ASC",
                      "DESC"
                    ],
                    "type": "string",
                    "description": "indicates the sort order"
                  },
                  "effectiveStartDateRange": {
                    "type": "string",
                    "description": "Enter Effective Date start Range for Quote/Policy to be retrieved",
                    "format": "date-time"
                  },
                  "effectiveEndDateRange": {
                    "type": "string",
                    "description": "Enter Effective Date Range for Quote/Policy to be retrieved",
                    "format": "date-time"
                  },
                  "sourceSystemUserId": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "User Id sent by source system"
                  },
                  "sourceSystemCode": {
                    "maxLength": 10,
                    "type": "string",
                    "description": "Originating system from where the request is interfaced to the Policy system"
                  },
                  "sourceSystemRequestNo": {
                    "maxLength": 30,
                    "type": "integer",
                    "description": "Request sequence generated in the source system to uniquely identify a request",
                    "format": "int32"
                  },
                  "additionalFilters": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/RequestFilter"
                    }
                  }
                },
                "description": "This object represents information for getting the My Performance report"
              }
            }
          }
        }
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/diagnostics",
      "name": "[concat(parameters('apimServiceName'), '/applicationinsights')]",
      "dependsOn": [],
      "properties": {
        "alwaysLog": "allErrors",
        "loggerId": "[parameters('apiLoggerId').applicationinsights]",
        "httpCorrelationProtocol": "Legacy",
        "logClientIp": true,
        "sampling": {
          "samplingType": "fixed",
          "percentage": 100.0
        },
        "frontend": {
          "request": {}
        },
        "backend": {
          "request": {}
        }
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/diagnostics",
      "name": "[concat(parameters('apimServiceName'), '/azuremonitor')]",
      "dependsOn": [],
      "properties": {
        "loggerId": "[parameters('apiLoggerId').azuremonitor]",
        "logClientIp": true,
        "sampling": {
          "samplingType": "fixed",
          "percentage": 100.0
        },
        "frontend": {
          "request": {}
        },
        "backend": {
          "request": {}
        }
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/products/apis",
      "name": "[concat(parameters('apimServiceName'), '/b6fe748ccac64a22841df03cc28b3d26/2e6c853c29c34231b86d49dc8c1c8b7a')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), '2e6c853c29c34231b86d49dc8c1c8b7a')]"
      ],
      "properties": {
        "displayName": "Quote Transaction",
        "description": "product giving access to Quote Transaction api",
        "subscriptionRequired": true,
        "approvalRequired": false,
        "state": "published"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/2e6c853c29c34231b86d49dc8c1c8b7a/agentInfo')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), '2e6c853c29c34231b86d49dc8c1c8b7a')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('apimServiceName'), '2e6c853c29c34231b86d49dc8c1c8b7a', '627dfe724634611330f0d8d2')]"
      ],
      "properties": {
        "displayName": "This endpoint fetches data correspoding to the reports configured for agentInfo",
        "method": "POST",
        "urlTemplate": "/agentInfo",
        "description": "This endpoint fetches data correspoding to the reports configured for agentInfo",
        "templateParameters": [],
        "request": {
          "description": "request information to get the report data",
          "headers": [],
          "queryParameters": [
            {
              "defaultValue": "N",
              "description": "Send this flag as Y in case only count is required",
              "name": "countOnly",
              "required": false,
              "type": "string"
            },
            {
              "name": "pageSize",
              "required": false,
              "type": "integer"
            },
            {
              "name": "pageNumber",
              "required": false,
              "type": "integer"
            }
          ],
          "representations": [
            {
              "contentType": "application/json",
              "schemaId": "627dfe724634611330f0d8d2",
              "typeName": "ReportRequestDetails",
              "sample": "{\r\n  \"sortColumn\": \"string\",\r\n  \"sortOrder\": \"ASC\",\r\n  \"effectiveStartDateRange\": \"string\",\r\n  \"effectiveEndDateRange\": \"string\",\r\n  \"sourceSystemUserId\": \"string\",\r\n  \"sourceSystemCode\": \"string\",\r\n  \"sourceSystemRequestNo\": 0,\r\n  \"additionalFilters\": [\r\n    {\r\n      \"filterColumn\": \"string\",\r\n      \"filterValue\": \"string\",\r\n      \"filterFormat\": \"STRING\"\r\n    }\r\n  ]\r\n}"
            }
          ]
        },
        "responses": [
          {
            "description": "Successful operation",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dfe724634611330f0d8d2",
                "typeName": "agentInfo_ResponseDetails",
                "sample": "{\r\n  \"reportCount\": 0,\r\n  \"sortColumn\": \"string\",\r\n  \"sortOrder\": \"ASC\",\r\n  \"effectiveStartDateRange\": \"string\",\r\n  \"effectiveEndDateRange\": \"string\",\r\n  \"reportData\": [\r\n    {\r\n      \"AgentName\": \"string\",\r\n      \"LicenseState\": \"string\",\r\n      \"Id\": \"string\",\r\n      \"LicenseNo\": \"string\",\r\n      \"ProducerCategory\": \"string\",\r\n      \"EmailId\": \"string\",\r\n      \"DirectBillIndicator\": \"string\",\r\n      \"TaxStateProvince\": \"string\",\r\n      \"Territory\": \"string\",\r\n      \"Address\": \"string\",\r\n      \"AgentNumber\": \"string\",\r\n      \"LicenseId\": \"string\",\r\n      \"Telephone\": \"string\",\r\n      \"ProducerClass\": \"string\"\r\n    }\r\n  ],\r\n  \"pagination\": {\r\n    \"correlationid\": \"BLUSRLIST_101\",\r\n    \"pageSize\": 10,\r\n    \"totalRecords\": 100,\r\n    \"pageNumber\": 1,\r\n    \"lastPageNumber\": 10,\r\n    \"startIndex\": \"u1001\",\r\n    \"endIndex\": \"u1010\",\r\n    \"links\": [\r\n      {\r\n        \"next\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=2\",\r\n        \"prev\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=1\",\r\n        \"first\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=1\",\r\n        \"last\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=10\"\r\n      }\r\n    ]\r\n  }\r\n}"
              }
            ],
            "statusCode": 200
          },
          {
            "description": "Bad request",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dfe724634611330f0d8d2",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"id\": \"string\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 400
          },
          {
            "description": "Resource not found",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dfe724634611330f0d8d2",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"id\": \"string\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 404
          },
          {
            "description": "Server not available",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dfe724634611330f0d8d2",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"id\": \"string\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 500
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/2e6c853c29c34231b86d49dc8c1c8b7a/customerDashboard')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), '2e6c853c29c34231b86d49dc8c1c8b7a')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('apimServiceName'), '2e6c853c29c34231b86d49dc8c1c8b7a', '627dfe724634611330f0d8d2')]"
      ],
      "properties": {
        "displayName": "This endpoint fetches data correspoding to the reports configured for customerDashboard",
        "method": "POST",
        "urlTemplate": "/customerDashboard",
        "description": "This endpoint fetches data correspoding to the reports configured for customerDashboard",
        "templateParameters": [],
        "request": {
          "description": "request information to get the report data",
          "headers": [],
          "queryParameters": [
            {
              "defaultValue": "N",
              "description": "Send this flag as Y in case only count is required",
              "name": "countOnly",
              "required": false,
              "type": "string"
            },
            {
              "name": "pageSize",
              "required": false,
              "type": "integer"
            },
            {
              "name": "pageNumber",
              "required": false,
              "type": "integer"
            }
          ],
          "representations": [
            {
              "contentType": "application/json",
              "schemaId": "627dfe724634611330f0d8d2",
              "typeName": "ReportRequestDetails",
              "sample": "{\r\n  \"sortColumn\": \"string\",\r\n  \"sortOrder\": \"ASC\",\r\n  \"effectiveStartDateRange\": \"string\",\r\n  \"effectiveEndDateRange\": \"string\",\r\n  \"sourceSystemUserId\": \"string\",\r\n  \"sourceSystemCode\": \"string\",\r\n  \"sourceSystemRequestNo\": 0,\r\n  \"additionalFilters\": [\r\n    {\r\n      \"filterColumn\": \"string\",\r\n      \"filterValue\": \"string\",\r\n      \"filterFormat\": \"STRING\"\r\n    }\r\n  ]\r\n}"
            }
          ]
        },
        "responses": [
          {
            "description": "Successful operation",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dfe724634611330f0d8d2",
                "typeName": "customerDashboard_ResponseDetails",
                "sample": "{\r\n  \"reportCount\": 0,\r\n  \"sortColumn\": \"string\",\r\n  \"sortOrder\": \"ASC\",\r\n  \"effectiveStartDateRange\": \"string\",\r\n  \"effectiveEndDateRange\": \"string\",\r\n  \"reportData\": [\r\n    {\r\n      \"MailingAddress\": \"string\",\r\n      \"InforcePremium\": \"string\",\r\n      \"Contactname\": \"string\",\r\n      \"Phone\": \"string\",\r\n      \"CustomerPhone\": \"string\",\r\n      \"CustomerSinceFormated\": \"string\",\r\n      \"Email\": \"string\",\r\n      \"Contactaddress\": \"string\",\r\n      \"CustomerSince\": \"string\",\r\n      \"Status\": \"string\",\r\n      \"Customerrating\": \"string\",\r\n      \"CustomerName\": \"string\",\r\n      \"CustomerNumber\": \"string\",\r\n      \"InforcePolicies\": \"string\"\r\n    }\r\n  ],\r\n  \"pagination\": {\r\n    \"correlationid\": \"BLUSRLIST_101\",\r\n    \"pageSize\": 10,\r\n    \"totalRecords\": 100,\r\n    \"pageNumber\": 1,\r\n    \"lastPageNumber\": 10,\r\n    \"startIndex\": \"u1001\",\r\n    \"endIndex\": \"u1010\",\r\n    \"links\": [\r\n      {\r\n        \"next\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=2\",\r\n        \"prev\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=1\",\r\n        \"first\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=1\",\r\n        \"last\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=10\"\r\n      }\r\n    ]\r\n  }\r\n}"
              }
            ],
            "statusCode": 200
          },
          {
            "description": "Bad request",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dfe724634611330f0d8d2",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"id\": \"string\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 400
          },
          {
            "description": "Resource not found",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dfe724634611330f0d8d2",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"id\": \"string\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 404
          },
          {
            "description": "Server not available",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dfe724634611330f0d8d2",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"id\": \"string\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 500
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/2e6c853c29c34231b86d49dc8c1c8b7a/customerPoliciesQuotesReport')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), '2e6c853c29c34231b86d49dc8c1c8b7a')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('apimServiceName'), '2e6c853c29c34231b86d49dc8c1c8b7a', '627dfe724634611330f0d8d2')]"
      ],
      "properties": {
        "displayName": "This endpoint fetches data correspoding to the reports configured for customerPoliciesQuotesReport",
        "method": "POST",
        "urlTemplate": "/customerPoliciesQuotesReport",
        "description": "This endpoint fetches data correspoding to the reports configured for customerPoliciesQuotesReport",
        "templateParameters": [],
        "request": {
          "description": "request information to get the report data",
          "headers": [],
          "queryParameters": [
            {
              "defaultValue": "N",
              "description": "Send this flag as Y in case only count is required",
              "name": "countOnly",
              "required": false,
              "type": "string"
            },
            {
              "name": "pageSize",
              "required": false,
              "type": "integer"
            },
            {
              "name": "pageNumber",
              "required": false,
              "type": "integer"
            }
          ],
          "representations": [
            {
              "contentType": "application/json",
              "schemaId": "627dfe724634611330f0d8d2",
              "typeName": "ReportRequestDetails",
              "sample": "{\r\n  \"sortColumn\": \"string\",\r\n  \"sortOrder\": \"ASC\",\r\n  \"effectiveStartDateRange\": \"string\",\r\n  \"effectiveEndDateRange\": \"string\",\r\n  \"sourceSystemUserId\": \"string\",\r\n  \"sourceSystemCode\": \"string\",\r\n  \"sourceSystemRequestNo\": 0,\r\n  \"additionalFilters\": [\r\n    {\r\n      \"filterColumn\": \"string\",\r\n      \"filterValue\": \"string\",\r\n      \"filterFormat\": \"STRING\"\r\n    }\r\n  ]\r\n}"
            }
          ]
        },
        "responses": [
          {
            "description": "Successful operation",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dfe724634611330f0d8d2",
                "typeName": "customerPoliciesQuotesReport_ResponseDetails",
                "sample": "{\r\n  \"reportCount\": 0,\r\n  \"sortColumn\": \"string\",\r\n  \"sortOrder\": \"ASC\",\r\n  \"effectiveStartDateRange\": \"string\",\r\n  \"effectiveEndDateRange\": \"string\",\r\n  \"reportData\": [\r\n    {\r\n      \"EffectiveDate\": \"string\",\r\n      \"EntityReference\": \"string\",\r\n      \"FullTermPremium\": \"string\",\r\n      \"Producer\": \"string\",\r\n      \"PolicyNumber\": \"string\",\r\n      \"Date\": \"string\",\r\n      \"PolicyEffectiveDateSort\": \"string\",\r\n      \"PolicyExpirationDateSort\": \"string\",\r\n      \"Company\": \"string\",\r\n      \"SourceSystem\": \"string\",\r\n      \"Insured\": \"string\",\r\n      \"ProducerCode\": \"string\",\r\n      \"Status\": \"string\",\r\n      \"ExpirationDate\": \"string\",\r\n      \"Product\": \"string\"\r\n    }\r\n  ],\r\n  \"pagination\": {\r\n    \"correlationid\": \"BLUSRLIST_101\",\r\n    \"pageSize\": 10,\r\n    \"totalRecords\": 100,\r\n    \"pageNumber\": 1,\r\n    \"lastPageNumber\": 10,\r\n    \"startIndex\": \"u1001\",\r\n    \"endIndex\": \"u1010\",\r\n    \"links\": [\r\n      {\r\n        \"next\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=2\",\r\n        \"prev\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=1\",\r\n        \"first\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=1\",\r\n        \"last\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=10\"\r\n      }\r\n    ]\r\n  }\r\n}"
              }
            ],
            "statusCode": 200
          },
          {
            "description": "Bad request",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dfe724634611330f0d8d2",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"id\": \"string\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 400
          },
          {
            "description": "Resource not found",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dfe724634611330f0d8d2",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"id\": \"string\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 404
          },
          {
            "description": "Server not available",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dfe724634611330f0d8d2",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"id\": \"string\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 500
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/2e6c853c29c34231b86d49dc8c1c8b7a/customerQuotesReport')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), '2e6c853c29c34231b86d49dc8c1c8b7a')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('apimServiceName'), '2e6c853c29c34231b86d49dc8c1c8b7a', '627dfe724634611330f0d8d2')]"
      ],
      "properties": {
        "displayName": "This endpoint fetches data correspoding to the reports configured for customerQuotesReport",
        "method": "POST",
        "urlTemplate": "/customerQuotesReport",
        "description": "This endpoint fetches data correspoding to the reports configured for customerQuotesReport",
        "templateParameters": [],
        "request": {
          "description": "request information to get the report data",
          "headers": [],
          "queryParameters": [
            {
              "defaultValue": "N",
              "description": "Send this flag as Y in case only count is required",
              "name": "countOnly",
              "required": false,
              "type": "string"
            },
            {
              "name": "pageSize",
              "required": false,
              "type": "integer"
            },
            {
              "name": "pageNumber",
              "required": false,
              "type": "integer"
            }
          ],
          "representations": [
            {
              "contentType": "application/json",
              "schemaId": "627dfe724634611330f0d8d2",
              "typeName": "ReportRequestDetails",
              "sample": "{\r\n  \"sortColumn\": \"string\",\r\n  \"sortOrder\": \"ASC\",\r\n  \"effectiveStartDateRange\": \"string\",\r\n  \"effectiveEndDateRange\": \"string\",\r\n  \"sourceSystemUserId\": \"string\",\r\n  \"sourceSystemCode\": \"string\",\r\n  \"sourceSystemRequestNo\": 0,\r\n  \"additionalFilters\": [\r\n    {\r\n      \"filterColumn\": \"string\",\r\n      \"filterValue\": \"string\",\r\n      \"filterFormat\": \"STRING\"\r\n    }\r\n  ]\r\n}"
            }
          ]
        },
        "responses": [
          {
            "description": "Successful operation",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dfe724634611330f0d8d2",
                "typeName": "customerQuotesReport_ResponseDetails",
                "sample": "{\r\n  \"reportCount\": 0,\r\n  \"sortColumn\": \"string\",\r\n  \"sortOrder\": \"ASC\",\r\n  \"effectiveStartDateRange\": \"string\",\r\n  \"effectiveEndDateRange\": \"string\",\r\n  \"reportData\": [\r\n    {\r\n      \"EffectiveDate\": \"string\",\r\n      \"EntityReference\": \"string\",\r\n      \"FullTermPremium\": \"string\",\r\n      \"Producer\": \"string\",\r\n      \"PolicyNumber\": \"string\",\r\n      \"Date\": \"string\",\r\n      \"PolicyEffectiveDateSort\": \"string\",\r\n      \"PolicyExpirationDateSort\": \"string\",\r\n      \"Company\": \"string\",\r\n      \"SourceSystem\": \"string\",\r\n      \"Insured\": \"string\",\r\n      \"ProducerCode\": \"string\",\r\n      \"Status\": \"string\",\r\n      \"ExpirationDate\": \"string\",\r\n      \"Product\": \"string\"\r\n    }\r\n  ],\r\n  \"pagination\": {\r\n    \"correlationid\": \"BLUSRLIST_101\",\r\n    \"pageSize\": 10,\r\n    \"totalRecords\": 100,\r\n    \"pageNumber\": 1,\r\n    \"lastPageNumber\": 10,\r\n    \"startIndex\": \"u1001\",\r\n    \"endIndex\": \"u1010\",\r\n    \"links\": [\r\n      {\r\n        \"next\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=2\",\r\n        \"prev\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=1\",\r\n        \"first\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=1\",\r\n        \"last\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=10\"\r\n      }\r\n    ]\r\n  }\r\n}"
              }
            ],
            "statusCode": 200
          },
          {
            "description": "Bad request",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dfe724634611330f0d8d2",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"id\": \"string\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 400
          },
          {
            "description": "Resource not found",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dfe724634611330f0d8d2",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"id\": \"string\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 404
          },
          {
            "description": "Server not available",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dfe724634611330f0d8d2",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"id\": \"string\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 500
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/2e6c853c29c34231b86d49dc8c1c8b7a/monthlyIssuedPoliciesSummary')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), '2e6c853c29c34231b86d49dc8c1c8b7a')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('apimServiceName'), '2e6c853c29c34231b86d49dc8c1c8b7a', '627dfe724634611330f0d8d2')]"
      ],
      "properties": {
        "displayName": "This endpoint fetches data correspoding to the reports configured for monthlyIssuedPoliciesSummary",
        "method": "POST",
        "urlTemplate": "/monthlyIssuedPoliciesSummary",
        "description": "This endpoint fetches data correspoding to the reports configured for monthlyIssuedPoliciesSummary",
        "templateParameters": [],
        "request": {
          "description": "request information to get the report data",
          "headers": [],
          "queryParameters": [
            {
              "defaultValue": "N",
              "description": "Send this flag as Y in case only count is required",
              "name": "countOnly",
              "required": false,
              "type": "string"
            },
            {
              "name": "pageSize",
              "required": false,
              "type": "integer"
            },
            {
              "name": "pageNumber",
              "required": false,
              "type": "integer"
            }
          ],
          "representations": [
            {
              "contentType": "application/json",
              "schemaId": "627dfe724634611330f0d8d2",
              "typeName": "ReportRequestDetails",
              "sample": "{\r\n  \"sortColumn\": \"string\",\r\n  \"sortOrder\": \"ASC\",\r\n  \"effectiveStartDateRange\": \"string\",\r\n  \"effectiveEndDateRange\": \"string\",\r\n  \"sourceSystemUserId\": \"string\",\r\n  \"sourceSystemCode\": \"string\",\r\n  \"sourceSystemRequestNo\": 0,\r\n  \"additionalFilters\": [\r\n    {\r\n      \"filterColumn\": \"string\",\r\n      \"filterValue\": \"string\",\r\n      \"filterFormat\": \"STRING\"\r\n    }\r\n  ]\r\n}"
            }
          ]
        },
        "responses": [
          {
            "description": "Successful operation",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dfe724634611330f0d8d2",
                "typeName": "monthlyIssuedPoliciesSummary_ResponseDetails",
                "sample": "{\r\n  \"reportCount\": 0,\r\n  \"sortColumn\": \"string\",\r\n  \"sortOrder\": \"ASC\",\r\n  \"effectiveStartDateRange\": \"string\",\r\n  \"effectiveEndDateRange\": \"string\",\r\n  \"reportData\": [\r\n    {\r\n      \"AccountingMonth\": \"string\",\r\n      \"InforcePolicies\": \"string\",\r\n      \"AccountingYearmonth\": \"string\"\r\n    }\r\n  ],\r\n  \"pagination\": {\r\n    \"correlationid\": \"BLUSRLIST_101\",\r\n    \"pageSize\": 10,\r\n    \"totalRecords\": 100,\r\n    \"pageNumber\": 1,\r\n    \"lastPageNumber\": 10,\r\n    \"startIndex\": \"u1001\",\r\n    \"endIndex\": \"u1010\",\r\n    \"links\": [\r\n      {\r\n        \"next\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=2\",\r\n        \"prev\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=1\",\r\n        \"first\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=1\",\r\n        \"last\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=10\"\r\n      }\r\n    ]\r\n  }\r\n}"
              }
            ],
            "statusCode": 200
          },
          {
            "description": "Bad request",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dfe724634611330f0d8d2",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"id\": \"string\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 400
          },
          {
            "description": "Resource not found",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dfe724634611330f0d8d2",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"id\": \"string\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 404
          },
          {
            "description": "Server not available",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dfe724634611330f0d8d2",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"id\": \"string\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 500
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/2e6c853c29c34231b86d49dc8c1c8b7a/monthlyWrittenPremiumSummary')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), '2e6c853c29c34231b86d49dc8c1c8b7a')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('apimServiceName'), '2e6c853c29c34231b86d49dc8c1c8b7a', '627dfe724634611330f0d8d2')]"
      ],
      "properties": {
        "displayName": "This endpoint fetches data correspoding to the reports configured for monthlyWrittenPremiumSummary",
        "method": "POST",
        "urlTemplate": "/monthlyWrittenPremiumSummary",
        "description": "This endpoint fetches data correspoding to the reports configured for monthlyWrittenPremiumSummary",
        "templateParameters": [],
        "request": {
          "description": "request information to get the report data",
          "headers": [],
          "queryParameters": [
            {
              "defaultValue": "N",
              "description": "Send this flag as Y in case only count is required",
              "name": "countOnly",
              "required": false,
              "type": "string"
            },
            {
              "name": "pageSize",
              "required": false,
              "type": "integer"
            },
            {
              "name": "pageNumber",
              "required": false,
              "type": "integer"
            }
          ],
          "representations": [
            {
              "contentType": "application/json",
              "schemaId": "627dfe724634611330f0d8d2",
              "typeName": "ReportRequestDetails",
              "sample": "{\r\n  \"sortColumn\": \"string\",\r\n  \"sortOrder\": \"ASC\",\r\n  \"effectiveStartDateRange\": \"string\",\r\n  \"effectiveEndDateRange\": \"string\",\r\n  \"sourceSystemUserId\": \"string\",\r\n  \"sourceSystemCode\": \"string\",\r\n  \"sourceSystemRequestNo\": 0,\r\n  \"additionalFilters\": [\r\n    {\r\n      \"filterColumn\": \"string\",\r\n      \"filterValue\": \"string\",\r\n      \"filterFormat\": \"STRING\"\r\n    }\r\n  ]\r\n}"
            }
          ]
        },
        "responses": [
          {
            "description": "Successful operation",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dfe724634611330f0d8d2",
                "typeName": "monthlyWrittenPremiumSummary_ResponseDetails",
                "sample": "{\r\n  \"reportCount\": 0,\r\n  \"sortColumn\": \"string\",\r\n  \"sortOrder\": \"ASC\",\r\n  \"effectiveStartDateRange\": \"string\",\r\n  \"effectiveEndDateRange\": \"string\",\r\n  \"reportData\": [\r\n    {\r\n      \"TransactionMonth\": \"string\",\r\n      \"TransactionYearmonth\": \"string\",\r\n      \"WrittenPremiumAmount\": \"string\"\r\n    }\r\n  ],\r\n  \"pagination\": {\r\n    \"correlationid\": \"BLUSRLIST_101\",\r\n    \"pageSize\": 10,\r\n    \"totalRecords\": 100,\r\n    \"pageNumber\": 1,\r\n    \"lastPageNumber\": 10,\r\n    \"startIndex\": \"u1001\",\r\n    \"endIndex\": \"u1010\",\r\n    \"links\": [\r\n      {\r\n        \"next\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=2\",\r\n        \"prev\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=1\",\r\n        \"first\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=1\",\r\n        \"last\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=10\"\r\n      }\r\n    ]\r\n  }\r\n}"
              }
            ],
            "statusCode": 200
          },
          {
            "description": "Bad request",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dfe724634611330f0d8d2",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"id\": \"string\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 400
          },
          {
            "description": "Resource not found",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dfe724634611330f0d8d2",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"id\": \"string\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 404
          },
          {
            "description": "Server not available",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dfe724634611330f0d8d2",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"id\": \"string\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 500
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/2e6c853c29c34231b86d49dc8c1c8b7a/myPerformanceListConf')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), '2e6c853c29c34231b86d49dc8c1c8b7a')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('apimServiceName'), '2e6c853c29c34231b86d49dc8c1c8b7a', '627dfe724634611330f0d8d2')]"
      ],
      "properties": {
        "displayName": "This endpoint fetches data correspoding to the reports configured for myPerformanceListConf",
        "method": "POST",
        "urlTemplate": "/myPerformanceListConf",
        "description": "This endpoint fetches data correspoding to the reports configured for myPerformanceListConf",
        "templateParameters": [],
        "request": {
          "description": "request information to get the report data",
          "headers": [],
          "queryParameters": [
            {
              "defaultValue": "N",
              "description": "Send this flag as Y in case only count is required",
              "name": "countOnly",
              "required": false,
              "type": "string"
            },
            {
              "name": "pageSize",
              "required": false,
              "type": "integer"
            },
            {
              "name": "pageNumber",
              "required": false,
              "type": "integer"
            }
          ],
          "representations": [
            {
              "contentType": "application/json",
              "schemaId": "627dfe724634611330f0d8d2",
              "typeName": "ReportRequestDetails",
              "sample": "{\r\n  \"sortColumn\": \"string\",\r\n  \"sortOrder\": \"ASC\",\r\n  \"effectiveStartDateRange\": \"string\",\r\n  \"effectiveEndDateRange\": \"string\",\r\n  \"sourceSystemUserId\": \"string\",\r\n  \"sourceSystemCode\": \"string\",\r\n  \"sourceSystemRequestNo\": 0,\r\n  \"additionalFilters\": [\r\n    {\r\n      \"filterColumn\": \"string\",\r\n      \"filterValue\": \"string\",\r\n      \"filterFormat\": \"STRING\"\r\n    }\r\n  ]\r\n}"
            }
          ]
        },
        "responses": [
          {
            "description": "Successful operation",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dfe724634611330f0d8d2",
                "typeName": "myPerformanceListConf_ResponseDetails",
                "sample": "{\r\n  \"reportCount\": 0,\r\n  \"sortColumn\": \"string\",\r\n  \"sortOrder\": \"ASC\",\r\n  \"effectiveStartDateRange\": \"string\",\r\n  \"effectiveEndDateRange\": \"string\",\r\n  \"reportData\": [\r\n    {\r\n      \"PolicyIssued\": \"string\",\r\n      \"NumberOfQuotes\": \"string\",\r\n      \"PremiumWritten\": \"string\",\r\n      \"PremiumWrittenWithoutFormat\": \"string\"\r\n    }\r\n  ],\r\n  \"pagination\": {\r\n    \"correlationid\": \"BLUSRLIST_101\",\r\n    \"pageSize\": 10,\r\n    \"totalRecords\": 100,\r\n    \"pageNumber\": 1,\r\n    \"lastPageNumber\": 10,\r\n    \"startIndex\": \"u1001\",\r\n    \"endIndex\": \"u1010\",\r\n    \"links\": [\r\n      {\r\n        \"next\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=2\",\r\n        \"prev\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=1\",\r\n        \"first\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=1\",\r\n        \"last\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=10\"\r\n      }\r\n    ]\r\n  }\r\n}"
              }
            ],
            "statusCode": 200
          },
          {
            "description": "Bad request",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dfe724634611330f0d8d2",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"id\": \"string\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 400
          },
          {
            "description": "Resource not found",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dfe724634611330f0d8d2",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"id\": \"string\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 404
          },
          {
            "description": "Server not available",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dfe724634611330f0d8d2",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"id\": \"string\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 500
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/2e6c853c29c34231b86d49dc8c1c8b7a/pendingCancellations')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), '2e6c853c29c34231b86d49dc8c1c8b7a')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('apimServiceName'), '2e6c853c29c34231b86d49dc8c1c8b7a', '627dfe724634611330f0d8d2')]"
      ],
      "properties": {
        "displayName": "This endpoint fetches data correspoding to the reports configured for pendingCancellations",
        "method": "POST",
        "urlTemplate": "/pendingCancellations",
        "description": "This endpoint fetches data correspoding to the reports configured for pendingCancellations",
        "templateParameters": [],
        "request": {
          "description": "request information to get the report data",
          "headers": [],
          "queryParameters": [
            {
              "defaultValue": "N",
              "description": "Send this flag as Y in case only count is required",
              "name": "countOnly",
              "required": false,
              "type": "string"
            },
            {
              "name": "pageSize",
              "required": false,
              "type": "integer"
            },
            {
              "name": "pageNumber",
              "required": false,
              "type": "integer"
            }
          ],
          "representations": [
            {
              "contentType": "application/json",
              "schemaId": "627dfe724634611330f0d8d2",
              "typeName": "ReportRequestDetails",
              "sample": "{\r\n  \"sortColumn\": \"string\",\r\n  \"sortOrder\": \"ASC\",\r\n  \"effectiveStartDateRange\": \"string\",\r\n  \"effectiveEndDateRange\": \"string\",\r\n  \"sourceSystemUserId\": \"string\",\r\n  \"sourceSystemCode\": \"string\",\r\n  \"sourceSystemRequestNo\": 0,\r\n  \"additionalFilters\": [\r\n    {\r\n      \"filterColumn\": \"string\",\r\n      \"filterValue\": \"string\",\r\n      \"filterFormat\": \"STRING\"\r\n    }\r\n  ]\r\n}"
            }
          ]
        },
        "responses": [
          {
            "description": "Successful operation",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dfe724634611330f0d8d2",
                "typeName": "pendingCancellations_ResponseDetails",
                "sample": "{\r\n  \"reportCount\": 0,\r\n  \"sortColumn\": \"string\",\r\n  \"sortOrder\": \"ASC\",\r\n  \"effectiveStartDateRange\": \"string\",\r\n  \"effectiveEndDateRange\": \"string\",\r\n  \"reportData\": [\r\n    {\r\n      \"PolicyEffectiveDate\": \"string\",\r\n      \"DateCreated\": \"string\",\r\n      \"DateSuspended\": \"string\",\r\n      \"CancellationDate\": \"string\",\r\n      \"ProducerName\": \"string\",\r\n      \"Zip\": \"string\",\r\n      \"MailDate\": \"string\",\r\n      \"PolicyNumber\": \"string\",\r\n      \"Date\": \"string\",\r\n      \"MailedDateSort\": \"string\",\r\n      \"Street\": \"string\",\r\n      \"Email\": \"string\",\r\n      \"ProducerCode\": \"string\",\r\n      \"City\": \"string\",\r\n      \"CustomerId\": \"string\",\r\n      \"Product\": \"string\",\r\n      \"Reason\": \"string\",\r\n      \"TotalWrittenPremium\": \"string\",\r\n      \"State\": \"string\",\r\n      \"PolicyEffectiveDateSort\": \"string\",\r\n      \"PolicyExpirationDateSort\": \"string\",\r\n      \"Company\": \"string\",\r\n      \"SourceSystem\": \"string\",\r\n      \"Insured\": \"string\",\r\n      \"DateCreatedSort\": \"string\",\r\n      \"PolicyExpiryDate\": \"string\",\r\n      \"Fein\": \"string\",\r\n      \"UnderwriterName\": \"string\",\r\n      \"Phone\": \"string\",\r\n      \"CancellationDateSort\": \"string\",\r\n      \"DateSuspendedSort\": \"string\",\r\n      \"CustomerName\": \"string\"\r\n    }\r\n  ],\r\n  \"pagination\": {\r\n    \"correlationid\": \"BLUSRLIST_101\",\r\n    \"pageSize\": 10,\r\n    \"totalRecords\": 100,\r\n    \"pageNumber\": 1,\r\n    \"lastPageNumber\": 10,\r\n    \"startIndex\": \"u1001\",\r\n    \"endIndex\": \"u1010\",\r\n    \"links\": [\r\n      {\r\n        \"next\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=2\",\r\n        \"prev\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=1\",\r\n        \"first\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=1\",\r\n        \"last\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=10\"\r\n      }\r\n    ]\r\n  }\r\n}"
              }
            ],
            "statusCode": 200
          },
          {
            "description": "Bad request",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dfe724634611330f0d8d2",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"id\": \"string\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 400
          },
          {
            "description": "Resource not found",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dfe724634611330f0d8d2",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"id\": \"string\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 404
          },
          {
            "description": "Server not available",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dfe724634611330f0d8d2",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"id\": \"string\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 500
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/2e6c853c29c34231b86d49dc8c1c8b7a/pendingIssuances')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), '2e6c853c29c34231b86d49dc8c1c8b7a')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('apimServiceName'), '2e6c853c29c34231b86d49dc8c1c8b7a', '627dfe724634611330f0d8d2')]"
      ],
      "properties": {
        "displayName": "This endpoint fetches data correspoding to the reports configured for pendingIssuances",
        "method": "POST",
        "urlTemplate": "/pendingIssuances",
        "description": "This endpoint fetches data correspoding to the reports configured for pendingIssuances",
        "templateParameters": [],
        "request": {
          "description": "request information to get the report data",
          "headers": [],
          "queryParameters": [
            {
              "defaultValue": "N",
              "description": "Send this flag as Y in case only count is required",
              "name": "countOnly",
              "required": false,
              "type": "string"
            },
            {
              "name": "pageSize",
              "required": false,
              "type": "integer"
            },
            {
              "name": "pageNumber",
              "required": false,
              "type": "integer"
            }
          ],
          "representations": [
            {
              "contentType": "application/json",
              "schemaId": "627dfe724634611330f0d8d2",
              "typeName": "ReportRequestDetails",
              "sample": "{\r\n  \"sortColumn\": \"string\",\r\n  \"sortOrder\": \"ASC\",\r\n  \"effectiveStartDateRange\": \"string\",\r\n  \"effectiveEndDateRange\": \"string\",\r\n  \"sourceSystemUserId\": \"string\",\r\n  \"sourceSystemCode\": \"string\",\r\n  \"sourceSystemRequestNo\": 0,\r\n  \"additionalFilters\": [\r\n    {\r\n      \"filterColumn\": \"string\",\r\n      \"filterValue\": \"string\",\r\n      \"filterFormat\": \"STRING\"\r\n    }\r\n  ]\r\n}"
            }
          ]
        },
        "responses": [
          {
            "description": "Successful operation",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dfe724634611330f0d8d2",
                "typeName": "pendingIssuances_ResponseDetails",
                "sample": "{\r\n  \"reportCount\": 0,\r\n  \"sortColumn\": \"string\",\r\n  \"sortOrder\": \"ASC\",\r\n  \"effectiveStartDateRange\": \"string\",\r\n  \"effectiveEndDateRange\": \"string\",\r\n  \"reportData\": [\r\n    {\r\n      \"EffectiveDate\": \"string\",\r\n      \"ProducerName\": \"string\",\r\n      \"TotalQuotedPremium\": \"string\",\r\n      \"Zip\": \"string\",\r\n      \"QuoteNumber\": \"string\",\r\n      \"Street\": \"string\",\r\n      \"Email\": \"string\",\r\n      \"ProducerCode\": \"string\",\r\n      \"City\": \"string\",\r\n      \"CustomerId\": \"string\",\r\n      \"Product\": \"string\",\r\n      \"PendingSinceSort\": \"string\",\r\n      \"PendingSince\": \"string\",\r\n      \"State\": \"string\",\r\n      \"Surcharge/Tax/fee\": \"string\",\r\n      \"PolicyEffectiveDateSort\": \"string\",\r\n      \"QuotedPremium\": \"string\",\r\n      \"PolicyExpirationDateSort\": \"string\",\r\n      \"Company\": \"string\",\r\n      \"SourceSystem\": \"string\",\r\n      \"Insured\": \"string\",\r\n      \"ExpiryDate\": \"string\",\r\n      \"Fein\": \"string\",\r\n      \"UnderwriterName\": \"string\",\r\n      \"Phone\": \"string\",\r\n      \"CustomerName\": \"string\"\r\n    }\r\n  ],\r\n  \"pagination\": {\r\n    \"correlationid\": \"BLUSRLIST_101\",\r\n    \"pageSize\": 10,\r\n    \"totalRecords\": 100,\r\n    \"pageNumber\": 1,\r\n    \"lastPageNumber\": 10,\r\n    \"startIndex\": \"u1001\",\r\n    \"endIndex\": \"u1010\",\r\n    \"links\": [\r\n      {\r\n        \"next\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=2\",\r\n        \"prev\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=1\",\r\n        \"first\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=1\",\r\n        \"last\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=10\"\r\n      }\r\n    ]\r\n  }\r\n}"
              }
            ],
            "statusCode": 200
          },
          {
            "description": "Bad request",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dfe724634611330f0d8d2",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"id\": \"string\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 400
          },
          {
            "description": "Resource not found",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dfe724634611330f0d8d2",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"id\": \"string\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 404
          },
          {
            "description": "Server not available",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dfe724634611330f0d8d2",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"id\": \"string\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 500
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/2e6c853c29c34231b86d49dc8c1c8b7a/pendingQuotes')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), '2e6c853c29c34231b86d49dc8c1c8b7a')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('apimServiceName'), '2e6c853c29c34231b86d49dc8c1c8b7a', '627dfe724634611330f0d8d2')]"
      ],
      "properties": {
        "displayName": "This endpoint fetches data correspoding to the reports configured for pendingQuotes",
        "method": "POST",
        "urlTemplate": "/pendingQuotes",
        "description": "This endpoint fetches data correspoding to the reports configured for pendingQuotes",
        "templateParameters": [],
        "request": {
          "description": "request information to get the report data",
          "headers": [],
          "queryParameters": [
            {
              "defaultValue": "N",
              "description": "Send this flag as Y in case only count is required",
              "name": "countOnly",
              "required": false,
              "type": "string"
            },
            {
              "name": "pageSize",
              "required": false,
              "type": "integer"
            },
            {
              "name": "pageNumber",
              "required": false,
              "type": "integer"
            }
          ],
          "representations": [
            {
              "contentType": "application/json",
              "schemaId": "627dfe724634611330f0d8d2",
              "typeName": "ReportRequestDetails",
              "sample": "{\r\n  \"sortColumn\": \"string\",\r\n  \"sortOrder\": \"ASC\",\r\n  \"effectiveStartDateRange\": \"string\",\r\n  \"effectiveEndDateRange\": \"string\",\r\n  \"sourceSystemUserId\": \"string\",\r\n  \"sourceSystemCode\": \"string\",\r\n  \"sourceSystemRequestNo\": 0,\r\n  \"additionalFilters\": [\r\n    {\r\n      \"filterColumn\": \"string\",\r\n      \"filterValue\": \"string\",\r\n      \"filterFormat\": \"STRING\"\r\n    }\r\n  ]\r\n}"
            }
          ]
        },
        "responses": [
          {
            "description": "Successful operation",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dfe724634611330f0d8d2",
                "typeName": "pendingQuotes_ResponseDetails",
                "sample": "{\r\n  \"reportCount\": 0,\r\n  \"sortColumn\": \"string\",\r\n  \"sortOrder\": \"ASC\",\r\n  \"effectiveStartDateRange\": \"string\",\r\n  \"effectiveEndDateRange\": \"string\",\r\n  \"reportData\": [\r\n    {\r\n      \"EffectiveDate\": \"string\",\r\n      \"ProducerName\": \"string\",\r\n      \"TotalQuotedPremium\": \"string\",\r\n      \"Zip\": \"string\",\r\n      \"QuoteNumber\": \"string\",\r\n      \"Street\": \"string\",\r\n      \"Email\": \"string\",\r\n      \"ProducerCode\": \"string\",\r\n      \"Status\": \"string\",\r\n      \"City\": \"string\",\r\n      \"CustomerId\": \"string\",\r\n      \"Product\": \"string\",\r\n      \"PendingSinceSort\": \"string\",\r\n      \"PendingSince\": \"string\",\r\n      \"State\": \"string\",\r\n      \"Surcharge/Tax/fee\": \"string\",\r\n      \"PolicyEffectiveDateSort\": \"string\",\r\n      \"QuotedPremium\": \"string\",\r\n      \"PolicyExpirationDateSort\": \"string\",\r\n      \"Company\": \"string\",\r\n      \"SourceSystem\": \"string\",\r\n      \"Insured\": \"string\",\r\n      \"ExpiryDate\": \"string\",\r\n      \"Fein\": \"string\",\r\n      \"UnderwriterName\": \"string\",\r\n      \"Phone\": \"string\",\r\n      \"CustomerName\": \"string\"\r\n    }\r\n  ],\r\n  \"pagination\": {\r\n    \"correlationid\": \"BLUSRLIST_101\",\r\n    \"pageSize\": 10,\r\n    \"totalRecords\": 100,\r\n    \"pageNumber\": 1,\r\n    \"lastPageNumber\": 10,\r\n    \"startIndex\": \"u1001\",\r\n    \"endIndex\": \"u1010\",\r\n    \"links\": [\r\n      {\r\n        \"next\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=2\",\r\n        \"prev\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=1\",\r\n        \"first\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=1\",\r\n        \"last\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=10\"\r\n      }\r\n    ]\r\n  }\r\n}"
              }
            ],
            "statusCode": 200
          },
          {
            "description": "Bad request",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dfe724634611330f0d8d2",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"id\": \"string\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 400
          },
          {
            "description": "Resource not found",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dfe724634611330f0d8d2",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"id\": \"string\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 404
          },
          {
            "description": "Server not available",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dfe724634611330f0d8d2",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"id\": \"string\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 500
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/2e6c853c29c34231b86d49dc8c1c8b7a/pendingReferals')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), '2e6c853c29c34231b86d49dc8c1c8b7a')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('apimServiceName'), '2e6c853c29c34231b86d49dc8c1c8b7a', '627dfe724634611330f0d8d2')]"
      ],
      "properties": {
        "displayName": "This endpoint fetches data correspoding to the reports configured for pendingReferals",
        "method": "POST",
        "urlTemplate": "/pendingReferals",
        "description": "This endpoint fetches data correspoding to the reports configured for pendingReferals",
        "templateParameters": [],
        "request": {
          "description": "request information to get the report data",
          "headers": [],
          "queryParameters": [
            {
              "defaultValue": "N",
              "description": "Send this flag as Y in case only count is required",
              "name": "countOnly",
              "required": false,
              "type": "string"
            },
            {
              "name": "pageSize",
              "required": false,
              "type": "integer"
            },
            {
              "name": "pageNumber",
              "required": false,
              "type": "integer"
            }
          ],
          "representations": [
            {
              "contentType": "application/json",
              "schemaId": "627dfe724634611330f0d8d2",
              "typeName": "ReportRequestDetails",
              "sample": "{\r\n  \"sortColumn\": \"string\",\r\n  \"sortOrder\": \"ASC\",\r\n  \"effectiveStartDateRange\": \"string\",\r\n  \"effectiveEndDateRange\": \"string\",\r\n  \"sourceSystemUserId\": \"string\",\r\n  \"sourceSystemCode\": \"string\",\r\n  \"sourceSystemRequestNo\": 0,\r\n  \"additionalFilters\": [\r\n    {\r\n      \"filterColumn\": \"string\",\r\n      \"filterValue\": \"string\",\r\n      \"filterFormat\": \"STRING\"\r\n    }\r\n  ]\r\n}"
            }
          ]
        },
        "responses": [
          {
            "description": "Successful operation",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dfe724634611330f0d8d2",
                "typeName": "pendingReferals_ResponseDetails",
                "sample": "{\r\n  \"reportCount\": 0,\r\n  \"sortColumn\": \"string\",\r\n  \"sortOrder\": \"ASC\",\r\n  \"effectiveStartDateRange\": \"string\",\r\n  \"effectiveEndDateRange\": \"string\",\r\n  \"reportData\": [\r\n    {\r\n      \"EffectiveDate\": \"string\",\r\n      \"AgencyName\": \"string\",\r\n      \"ItemNumber\": \"string\",\r\n      \"Date\": \"string\",\r\n      \"AgencyNumber\": \"string\",\r\n      \"CustomerId\": \"string\",\r\n      \"Product\": \"string\",\r\n      \"TotalPremium\": \"string\",\r\n      \"Surcharge/Tax/fee\": \"string\",\r\n      \"PolicyEffectiveDateSort\": \"string\",\r\n      \"EntityType\": \"string\",\r\n      \"PolicyExpirationDateSort\": \"string\",\r\n      \"SourceSystem\": \"string\",\r\n      \"Customer\": \"string\",\r\n      \"ExpirationDate\": \"string\",\r\n      \"Underwriter\": \"string\",\r\n      \"Premium\": \"string\",\r\n      \"CustomerName\": \"string\"\r\n    }\r\n  ],\r\n  \"pagination\": {\r\n    \"correlationid\": \"BLUSRLIST_101\",\r\n    \"pageSize\": 10,\r\n    \"totalRecords\": 100,\r\n    \"pageNumber\": 1,\r\n    \"lastPageNumber\": 10,\r\n    \"startIndex\": \"u1001\",\r\n    \"endIndex\": \"u1010\",\r\n    \"links\": [\r\n      {\r\n        \"next\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=2\",\r\n        \"prev\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=1\",\r\n        \"first\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=1\",\r\n        \"last\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=10\"\r\n      }\r\n    ]\r\n  }\r\n}"
              }
            ],
            "statusCode": 200
          },
          {
            "description": "Bad request",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dfe724634611330f0d8d2",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"id\": \"string\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 400
          },
          {
            "description": "Resource not found",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dfe724634611330f0d8d2",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"id\": \"string\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 404
          },
          {
            "description": "Server not available",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dfe724634611330f0d8d2",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"id\": \"string\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 500
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/2e6c853c29c34231b86d49dc8c1c8b7a/policyClaimsView')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), '2e6c853c29c34231b86d49dc8c1c8b7a')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('apimServiceName'), '2e6c853c29c34231b86d49dc8c1c8b7a', '627dfe724634611330f0d8d2')]"
      ],
      "properties": {
        "displayName": "This endpoint fetches data correspoding to the reports configured for policyClaimsView",
        "method": "POST",
        "urlTemplate": "/policyClaimsView",
        "description": "This endpoint fetches data correspoding to the reports configured for policyClaimsView",
        "templateParameters": [],
        "request": {
          "description": "request information to get the report data",
          "headers": [],
          "queryParameters": [
            {
              "defaultValue": "N",
              "description": "Send this flag as Y in case only count is required",
              "name": "countOnly",
              "required": false,
              "type": "string"
            },
            {
              "name": "pageSize",
              "required": false,
              "type": "integer"
            },
            {
              "name": "pageNumber",
              "required": false,
              "type": "integer"
            }
          ],
          "representations": [
            {
              "contentType": "application/json",
              "schemaId": "627dfe724634611330f0d8d2",
              "typeName": "ReportRequestDetails",
              "sample": "{\r\n  \"sortColumn\": \"string\",\r\n  \"sortOrder\": \"ASC\",\r\n  \"effectiveStartDateRange\": \"string\",\r\n  \"effectiveEndDateRange\": \"string\",\r\n  \"sourceSystemUserId\": \"string\",\r\n  \"sourceSystemCode\": \"string\",\r\n  \"sourceSystemRequestNo\": 0,\r\n  \"additionalFilters\": [\r\n    {\r\n      \"filterColumn\": \"string\",\r\n      \"filterValue\": \"string\",\r\n      \"filterFormat\": \"STRING\"\r\n    }\r\n  ]\r\n}"
            }
          ]
        },
        "responses": [
          {
            "description": "Successful operation",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dfe724634611330f0d8d2",
                "typeName": "policyClaimsView_ResponseDetails",
                "sample": "{\r\n  \"reportCount\": 0,\r\n  \"sortColumn\": \"string\",\r\n  \"sortOrder\": \"ASC\",\r\n  \"effectiveStartDateRange\": \"string\",\r\n  \"effectiveEndDateRange\": \"string\",\r\n  \"reportData\": [\r\n    {\r\n      \"LossDate\": \"string\",\r\n      \"TotalExpenseOutstanding\": \"string\",\r\n      \"ReportingDate\": \"string\",\r\n      \"Status\": \"string\",\r\n      \"TotalLossOutstanding\": \"string\",\r\n      \"LastModified\": \"string\",\r\n      \"TotalLossPaid\": \"string\",\r\n      \"TotalExpensePaid\": \"string\",\r\n      \"TotalIncurred\": \"string\",\r\n      \"ClaimNumber\": \"string\"\r\n    }\r\n  ],\r\n  \"pagination\": {\r\n    \"correlationid\": \"BLUSRLIST_101\",\r\n    \"pageSize\": 10,\r\n    \"totalRecords\": 100,\r\n    \"pageNumber\": 1,\r\n    \"lastPageNumber\": 10,\r\n    \"startIndex\": \"u1001\",\r\n    \"endIndex\": \"u1010\",\r\n    \"links\": [\r\n      {\r\n        \"next\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=2\",\r\n        \"prev\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=1\",\r\n        \"first\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=1\",\r\n        \"last\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=10\"\r\n      }\r\n    ]\r\n  }\r\n}"
              }
            ],
            "statusCode": 200
          },
          {
            "description": "Bad request",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dfe724634611330f0d8d2",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"id\": \"string\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 400
          },
          {
            "description": "Resource not found",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dfe724634611330f0d8d2",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"id\": \"string\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 404
          },
          {
            "description": "Server not available",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dfe724634611330f0d8d2",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"id\": \"string\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 500
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/2e6c853c29c34231b86d49dc8c1c8b7a/policyDashboard')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), '2e6c853c29c34231b86d49dc8c1c8b7a')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('apimServiceName'), '2e6c853c29c34231b86d49dc8c1c8b7a', '627dfe724634611330f0d8d2')]"
      ],
      "properties": {
        "displayName": "This endpoint fetches data correspoding to the reports configured for policyDashboard",
        "method": "POST",
        "urlTemplate": "/policyDashboard",
        "description": "This endpoint fetches data correspoding to the reports configured for policyDashboard",
        "templateParameters": [],
        "request": {
          "description": "request information to get the report data",
          "headers": [],
          "queryParameters": [
            {
              "defaultValue": "N",
              "description": "Send this flag as Y in case only count is required",
              "name": "countOnly",
              "required": false,
              "type": "string"
            },
            {
              "name": "pageSize",
              "required": false,
              "type": "integer"
            },
            {
              "name": "pageNumber",
              "required": false,
              "type": "integer"
            }
          ],
          "representations": [
            {
              "contentType": "application/json",
              "schemaId": "627dfe724634611330f0d8d2",
              "typeName": "ReportRequestDetails",
              "sample": "{\r\n  \"sortColumn\": \"string\",\r\n  \"sortOrder\": \"ASC\",\r\n  \"effectiveStartDateRange\": \"string\",\r\n  \"effectiveEndDateRange\": \"string\",\r\n  \"sourceSystemUserId\": \"string\",\r\n  \"sourceSystemCode\": \"string\",\r\n  \"sourceSystemRequestNo\": 0,\r\n  \"additionalFilters\": [\r\n    {\r\n      \"filterColumn\": \"string\",\r\n      \"filterValue\": \"string\",\r\n      \"filterFormat\": \"STRING\"\r\n    }\r\n  ]\r\n}"
            }
          ]
        },
        "responses": [
          {
            "description": "Successful operation",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dfe724634611330f0d8d2",
                "typeName": "policyDashboard_ResponseDetails",
                "sample": "{\r\n  \"reportCount\": 0,\r\n  \"sortColumn\": \"string\",\r\n  \"sortOrder\": \"ASC\",\r\n  \"effectiveStartDateRange\": \"string\",\r\n  \"effectiveEndDateRange\": \"string\",\r\n  \"reportData\": [\r\n    {\r\n      \"EffectiveDate\": \"string\",\r\n      \"PolicyNumber\": \"string\",\r\n      \"Firstname\": \"string\",\r\n      \"Agentid\": \"string\",\r\n      \"Agentname\": \"string\",\r\n      \"Status\": \"string\",\r\n      \"CustomerId\": \"string\",\r\n      \"Lastname\": \"string\",\r\n      \"Insuredaddress\": \"string\",\r\n      \"Taxes,Fees,Surcharges\": \"string\",\r\n      \"WrittenPremium\": \"string\",\r\n      \"TransactionEffectiveDate\": \"string\",\r\n      \"Insuredphone\": \"string\",\r\n      \"PolicyPeriod\": \"string\",\r\n      \"PolicyReference\": \"string\",\r\n      \"ProductName\": \"string\",\r\n      \"EntityType\": \"string\",\r\n      \"TransactionPremium\": \"string\",\r\n      \"CompanyName\": \"string\",\r\n      \"TotalPremium\": \"string\",\r\n      \"ExpirationDate\": \"string\",\r\n      \"UnderwriterName\": \"string\",\r\n      \"ValidPeriodRemaining\": \"string\",\r\n      \"CustomerName\": \"string\",\r\n      \"Insuredname\": \"string\"\r\n    }\r\n  ],\r\n  \"pagination\": {\r\n    \"correlationid\": \"BLUSRLIST_101\",\r\n    \"pageSize\": 10,\r\n    \"totalRecords\": 100,\r\n    \"pageNumber\": 1,\r\n    \"lastPageNumber\": 10,\r\n    \"startIndex\": \"u1001\",\r\n    \"endIndex\": \"u1010\",\r\n    \"links\": [\r\n      {\r\n        \"next\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=2\",\r\n        \"prev\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=1\",\r\n        \"first\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=1\",\r\n        \"last\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=10\"\r\n      }\r\n    ]\r\n  }\r\n}"
              }
            ],
            "statusCode": 200
          },
          {
            "description": "Bad request",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dfe724634611330f0d8d2",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"id\": \"string\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 400
          },
          {
            "description": "Resource not found",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dfe724634611330f0d8d2",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"id\": \"string\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 404
          },
          {
            "description": "Server not available",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dfe724634611330f0d8d2",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"id\": \"string\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 500
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/2e6c853c29c34231b86d49dc8c1c8b7a/rejectedReferrals')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), '2e6c853c29c34231b86d49dc8c1c8b7a')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('apimServiceName'), '2e6c853c29c34231b86d49dc8c1c8b7a', '627dfe724634611330f0d8d2')]"
      ],
      "properties": {
        "displayName": "This endpoint fetches data correspoding to the reports configured for rejectedReferrals",
        "method": "POST",
        "urlTemplate": "/rejectedReferrals",
        "description": "This endpoint fetches data correspoding to the reports configured for rejectedReferrals",
        "templateParameters": [],
        "request": {
          "description": "request information to get the report data",
          "headers": [],
          "queryParameters": [
            {
              "defaultValue": "N",
              "description": "Send this flag as Y in case only count is required",
              "name": "countOnly",
              "required": false,
              "type": "string"
            },
            {
              "name": "pageSize",
              "required": false,
              "type": "integer"
            },
            {
              "name": "pageNumber",
              "required": false,
              "type": "integer"
            }
          ],
          "representations": [
            {
              "contentType": "application/json",
              "schemaId": "627dfe724634611330f0d8d2",
              "typeName": "ReportRequestDetails",
              "sample": "{\r\n  \"sortColumn\": \"string\",\r\n  \"sortOrder\": \"ASC\",\r\n  \"effectiveStartDateRange\": \"string\",\r\n  \"effectiveEndDateRange\": \"string\",\r\n  \"sourceSystemUserId\": \"string\",\r\n  \"sourceSystemCode\": \"string\",\r\n  \"sourceSystemRequestNo\": 0,\r\n  \"additionalFilters\": [\r\n    {\r\n      \"filterColumn\": \"string\",\r\n      \"filterValue\": \"string\",\r\n      \"filterFormat\": \"STRING\"\r\n    }\r\n  ]\r\n}"
            }
          ]
        },
        "responses": [
          {
            "description": "Successful operation",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dfe724634611330f0d8d2",
                "typeName": "rejectedReferrals_ResponseDetails",
                "sample": "{\r\n  \"reportCount\": 0,\r\n  \"sortColumn\": \"string\",\r\n  \"sortOrder\": \"ASC\",\r\n  \"effectiveStartDateRange\": \"string\",\r\n  \"effectiveEndDateRange\": \"string\",\r\n  \"reportData\": [\r\n    {\r\n      \"EffectiveDate\": \"string\",\r\n      \"UnderwriterReason\": \"string\",\r\n      \"AgencyName\": \"string\",\r\n      \"ItemNumber\": \"string\",\r\n      \"Date\": \"string\",\r\n      \"AgencyNumber\": \"string\",\r\n      \"CustomerId\": \"string\",\r\n      \"Product\": \"string\",\r\n      \"TotalPremium\": \"string\",\r\n      \"Surcharge/Tax/fee\": \"string\",\r\n      \"PolicyEffectiveDateSort\": \"string\",\r\n      \"EntityType\": \"string\",\r\n      \"PolicyExpirationDateSort\": \"string\",\r\n      \"SourceSystem\": \"string\",\r\n      \"Customer\": \"string\",\r\n      \"ExpirationDate\": \"string\",\r\n      \"Underwriter\": \"string\",\r\n      \"Premium\": \"string\",\r\n      \"CustomerName\": \"string\"\r\n    }\r\n  ],\r\n  \"pagination\": {\r\n    \"correlationid\": \"BLUSRLIST_101\",\r\n    \"pageSize\": 10,\r\n    \"totalRecords\": 100,\r\n    \"pageNumber\": 1,\r\n    \"lastPageNumber\": 10,\r\n    \"startIndex\": \"u1001\",\r\n    \"endIndex\": \"u1010\",\r\n    \"links\": [\r\n      {\r\n        \"next\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=2\",\r\n        \"prev\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=1\",\r\n        \"first\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=1\",\r\n        \"last\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=10\"\r\n      }\r\n    ]\r\n  }\r\n}"
              }
            ],
            "statusCode": 200
          },
          {
            "description": "Bad request",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dfe724634611330f0d8d2",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"id\": \"string\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 400
          },
          {
            "description": "Resource not found",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dfe724634611330f0d8d2",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"id\": \"string\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 404
          },
          {
            "description": "Server not available",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dfe724634611330f0d8d2",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"id\": \"string\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 500
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/2e6c853c29c34231b86d49dc8c1c8b7a/upcomingRenewals')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), '2e6c853c29c34231b86d49dc8c1c8b7a')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('apimServiceName'), '2e6c853c29c34231b86d49dc8c1c8b7a', '627dfe724634611330f0d8d2')]"
      ],
      "properties": {
        "displayName": "This endpoint fetches data correspoding to the reports configured for upcomingRenewals",
        "method": "POST",
        "urlTemplate": "/upcomingRenewals",
        "description": "This endpoint fetches data correspoding to the reports configured for upcomingRenewals",
        "templateParameters": [],
        "request": {
          "description": "request information to get the report data",
          "headers": [],
          "queryParameters": [
            {
              "defaultValue": "N",
              "description": "Send this flag as Y in case only count is required",
              "name": "countOnly",
              "required": false,
              "type": "string"
            },
            {
              "name": "pageSize",
              "required": false,
              "type": "integer"
            },
            {
              "name": "pageNumber",
              "required": false,
              "type": "integer"
            }
          ],
          "representations": [
            {
              "contentType": "application/json",
              "schemaId": "627dfe724634611330f0d8d2",
              "typeName": "ReportRequestDetails",
              "sample": "{\r\n  \"sortColumn\": \"string\",\r\n  \"sortOrder\": \"ASC\",\r\n  \"effectiveStartDateRange\": \"string\",\r\n  \"effectiveEndDateRange\": \"string\",\r\n  \"sourceSystemUserId\": \"string\",\r\n  \"sourceSystemCode\": \"string\",\r\n  \"sourceSystemRequestNo\": 0,\r\n  \"additionalFilters\": [\r\n    {\r\n      \"filterColumn\": \"string\",\r\n      \"filterValue\": \"string\",\r\n      \"filterFormat\": \"STRING\"\r\n    }\r\n  ]\r\n}"
            }
          ]
        },
        "responses": [
          {
            "description": "Successful operation",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dfe724634611330f0d8d2",
                "typeName": "upcomingRenewals_ResponseDetails",
                "sample": "{\r\n  \"reportCount\": 0,\r\n  \"sortColumn\": \"string\",\r\n  \"sortOrder\": \"ASC\",\r\n  \"effectiveStartDateRange\": \"string\",\r\n  \"effectiveEndDateRange\": \"string\",\r\n  \"reportData\": [\r\n    {\r\n      \"PolicyEffectiveDate\": \"string\",\r\n      \"Producer\": \"string\",\r\n      \"Zip\": \"string\",\r\n      \"PolicyNumber\": \"string\",\r\n      \"Street\": \"string\",\r\n      \"Email\": \"string\",\r\n      \"ProducerCode\": \"string\",\r\n      \"City\": \"string\",\r\n      \"CustomerId\": \"string\",\r\n      \"Product\": \"string\",\r\n      \"TotalWrittenPremium\": \"string\",\r\n      \"State\": \"string\",\r\n      \"Surcharge/tax/fee\": \"string\",\r\n      \"PolicyEffectiveDateSort\": \"string\",\r\n      \"Company\": \"string\",\r\n      \"PolicyExpirationDateSort\": \"string\",\r\n      \"SourceSystem\": \"string\",\r\n      \"Insured\": \"string\",\r\n      \"PolicyExpirationDate\": \"string\",\r\n      \"Fein\": \"string\",\r\n      \"UnderwriterName\": \"string\",\r\n      \"Phone\": \"string\",\r\n      \"WrittenPremium\": \"string\",\r\n      \"CustomerName\": \"string\"\r\n    }\r\n  ],\r\n  \"pagination\": {\r\n    \"correlationid\": \"BLUSRLIST_101\",\r\n    \"pageSize\": 10,\r\n    \"totalRecords\": 100,\r\n    \"pageNumber\": 1,\r\n    \"lastPageNumber\": 10,\r\n    \"startIndex\": \"u1001\",\r\n    \"endIndex\": \"u1010\",\r\n    \"links\": [\r\n      {\r\n        \"next\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=2\",\r\n        \"prev\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=1\",\r\n        \"first\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=1\",\r\n        \"last\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=10\"\r\n      }\r\n    ]\r\n  }\r\n}"
              }
            ],
            "statusCode": 200
          },
          {
            "description": "Bad request",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dfe724634611330f0d8d2",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"id\": \"string\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 400
          },
          {
            "description": "Resource not found",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dfe724634611330f0d8d2",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"id\": \"string\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 404
          },
          {
            "description": "Server not available",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dfe724634611330f0d8d2",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"id\": \"string\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 500
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "name": "[concat(parameters('apimServiceName'), '/2e6c853c29c34231b86d49dc8c1c8b7a/agentInfo/agentInfo')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), '2e6c853c29c34231b86d49dc8c1c8b7a', 'agentInfo')]"
      ],
      "properties": {
        "displayName": "agentInfo"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "name": "[concat(parameters('apimServiceName'), '/2e6c853c29c34231b86d49dc8c1c8b7a/customerDashboard/customerDashboard')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), '2e6c853c29c34231b86d49dc8c1c8b7a', 'customerDashboard')]"
      ],
      "properties": {
        "displayName": "customerDashboard"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "name": "[concat(parameters('apimServiceName'), '/2e6c853c29c34231b86d49dc8c1c8b7a/customerPoliciesQuotesReport/customerPoliciesQuotesReport')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), '2e6c853c29c34231b86d49dc8c1c8b7a', 'customerPoliciesQuotesReport')]"
      ],
      "properties": {
        "displayName": "customerPoliciesQuotesReport"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "name": "[concat(parameters('apimServiceName'), '/2e6c853c29c34231b86d49dc8c1c8b7a/customerQuotesReport/customerQuotesReport')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), '2e6c853c29c34231b86d49dc8c1c8b7a', 'customerQuotesReport')]"
      ],
      "properties": {
        "displayName": "customerQuotesReport"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "name": "[concat(parameters('apimServiceName'), '/2e6c853c29c34231b86d49dc8c1c8b7a/monthlyIssuedPoliciesSummary/monthlyIssuedPoliciesSummary')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), '2e6c853c29c34231b86d49dc8c1c8b7a', 'monthlyIssuedPoliciesSummary')]"
      ],
      "properties": {
        "displayName": "monthlyIssuedPoliciesSummary"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "name": "[concat(parameters('apimServiceName'), '/2e6c853c29c34231b86d49dc8c1c8b7a/monthlyWrittenPremiumSummary/monthlyWrittenPremiumSummary')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), '2e6c853c29c34231b86d49dc8c1c8b7a', 'monthlyWrittenPremiumSummary')]"
      ],
      "properties": {
        "displayName": "monthlyWrittenPremiumSummary"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "name": "[concat(parameters('apimServiceName'), '/2e6c853c29c34231b86d49dc8c1c8b7a/myPerformanceListConf/myPerformanceListConf')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), '2e6c853c29c34231b86d49dc8c1c8b7a', 'myPerformanceListConf')]"
      ],
      "properties": {
        "displayName": "myPerformanceListConf"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "name": "[concat(parameters('apimServiceName'), '/2e6c853c29c34231b86d49dc8c1c8b7a/pendingCancellations/pendingCancellations')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), '2e6c853c29c34231b86d49dc8c1c8b7a', 'pendingCancellations')]"
      ],
      "properties": {
        "displayName": "pendingCancellations"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "name": "[concat(parameters('apimServiceName'), '/2e6c853c29c34231b86d49dc8c1c8b7a/pendingIssuances/pendingIssuances')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), '2e6c853c29c34231b86d49dc8c1c8b7a', 'pendingIssuances')]"
      ],
      "properties": {
        "displayName": "pendingIssuances"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "name": "[concat(parameters('apimServiceName'), '/2e6c853c29c34231b86d49dc8c1c8b7a/pendingQuotes/pendingQuotes')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), '2e6c853c29c34231b86d49dc8c1c8b7a', 'pendingQuotes')]"
      ],
      "properties": {
        "displayName": "pendingQuotes"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "name": "[concat(parameters('apimServiceName'), '/2e6c853c29c34231b86d49dc8c1c8b7a/pendingReferals/pendingReferals')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), '2e6c853c29c34231b86d49dc8c1c8b7a', 'pendingReferals')]"
      ],
      "properties": {
        "displayName": "pendingReferals"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "name": "[concat(parameters('apimServiceName'), '/2e6c853c29c34231b86d49dc8c1c8b7a/policyClaimsView/policyClaimsView')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), '2e6c853c29c34231b86d49dc8c1c8b7a', 'policyClaimsView')]"
      ],
      "properties": {
        "displayName": "policyClaimsView"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "name": "[concat(parameters('apimServiceName'), '/2e6c853c29c34231b86d49dc8c1c8b7a/policyDashboard/policyDashboard')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), '2e6c853c29c34231b86d49dc8c1c8b7a', 'policyDashboard')]"
      ],
      "properties": {
        "displayName": "policyDashboard"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "name": "[concat(parameters('apimServiceName'), '/2e6c853c29c34231b86d49dc8c1c8b7a/rejectedReferrals/rejectedReferrals')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), '2e6c853c29c34231b86d49dc8c1c8b7a', 'rejectedReferrals')]"
      ],
      "properties": {
        "displayName": "rejectedReferrals"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "name": "[concat(parameters('apimServiceName'), '/2e6c853c29c34231b86d49dc8c1c8b7a/upcomingRenewals/upcomingRenewals')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), '2e6c853c29c34231b86d49dc8c1c8b7a', 'upcomingRenewals')]"
      ],
      "properties": {
        "displayName": "upcomingRenewals"
      }
    }
  ]
}