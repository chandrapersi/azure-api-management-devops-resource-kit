{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "apimServiceName": {
      "type": "string"
    },
    "policyXMLBaseUrl": {
      "type": "string"
    },
    "apiLoggerId": {
      "type": "object"
    }
  },
  "resources": [
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis",
      "name": "[concat(parameters('apimServiceName'), '/3b98f0faf2684a6c825761c53bfa5668')]",
      "dependsOn": [],
      "properties": {
        "description": "This API has operations to manage information pertaining to the producer compensation. It enables to inquire commission and other payables such as incentives, bonus, subsidies that are accrued as well as paid against a producer. Operations to hold & release dues is available.   This API also has operation to post the premium payment applied on a policy for the purpose of commission calculation and recording the collected premium against a policy.",
        "authenticationSettings": {
          "subscriptionKeyRequired": false
        },
        "subscriptionKeyParameterNames": {
          "header": "Ocp-Apim-Subscription-Key",
          "query": "subscription-key"
        },
        "apiRevision": "1",
        "isCurrent": true,
        "subscriptionRequired": true,
        "displayName": "MDM Compensation API",
        "serviceUrl": "https://developer.cloudinsurer.com/DMICDService/services/rest/oas/compensation/v1",
        "path": "Compensation",
        "protocols": [
          "https"
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/schemas",
      "name": "[concat(parameters('apimServiceName'), '/3b98f0faf2684a6c825761c53bfa5668/627dffa94634611330f0d910')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668')]"
      ],
      "properties": {
        "contentType": "application/vnd.oai.openapi.components+json",
        "document": {
          "components": {
            "schemas": {
              "OutstandingDue": {
                "type": "object",
                "properties": {
                  "accrualBasisCode": {
                    "maxLength": 22,
                    "enum": [
                      "PAID",
                      "WRIT"
                    ],
                    "type": "string",
                    "description": "Basis applicable for a compensation record. This must be a supported code. List of supported accrual basis along with description can be retrieved by passing domainType equal to 'AccrualBasis' to List of Values API."
                  },
                  "accrualBasisDescription": {
                    "maxLength": 100,
                    "type": "string",
                    "description": "Description of accrual basis.",
                    "example": "Paid"
                  },
                  "adjustmentRequestTypeCode": {
                    "maxLength": 22,
                    "enum": [
                      "ADVANCE",
                      "PAYMENT",
                      "RECEIPT",
                      "RECOVERY",
                      "WRITEOFF"
                    ],
                    "type": "string",
                    "description": "Adjustment request type. This must be a supported code. List of supported adjustment request type along with description can be retrieved by passing domainType equal to 'AdjustmentRequestType' to List of Values API."
                  },
                  "adjustmentRequestTypeDescription": {
                    "maxLength": 100,
                    "type": "string",
                    "description": "Description of adjustment request type.",
                    "example": "Paid"
                  },
                  "balanceAmount": {
                    "type": "number",
                    "description": "Remaining Amount.",
                    "format": "double",
                    "example": 100.0
                  },
                  "billTypeCode": {
                    "maxLength": 22,
                    "enum": [
                      "AGYBILL",
                      "COMPBILL"
                    ],
                    "type": "string",
                    "description": "Bill type of policy. This must be a supported code. List of supported bill type along with description can be retrieved by passing domainType equal to 'BillType' to List of Values API."
                  },
                  "billTypeDescription": {
                    "maxLength": 100,
                    "type": "string",
                    "description": "Description of bill type.",
                    "example": "Agency Bill"
                  },
                  "compensationSubTypeCode": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Compensation to be given standard or overridden. This must be a supported code. List of supported compensation sub type along with description can be retrieved by passing domainType equal to 'CompensationSubType' to List of Values API.",
                    "example": "OC"
                  },
                  "compensationSubTypeDescription": {
                    "maxLength": 100,
                    "type": "string",
                    "description": "Description of compensation sub type.",
                    "example": "Overriding Commission"
                  },
                  "compensationTypeCode": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Compensation type whether it is fee or commission. This must be a supported code. List of supported compensation type along with description can be retrieved by passing domainType equal to 'CompensationType' to List of Values API.",
                    "example": "COMM"
                  },
                  "compensationTypeDescription": {
                    "maxLength": 100,
                    "type": "string",
                    "description": "Description of compensation type.",
                    "example": "Commission"
                  },
                  "dueDate": {
                    "type": "string",
                    "description": "Premium due date.",
                    "format": "date"
                  },
                  "channelCode": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Channel in which entity belongs to. This must be a supported code. List of supported channel code along with description can be retrieved by passing masterName equal to 'Channel' to Master API.",
                    "example": "BROK"
                  },
                  "channelDescription": {
                    "maxLength": 1000,
                    "type": "string",
                    "description": "Channel description.",
                    "example": "Broker Channel"
                  },
                  "currencyCode": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "This attribute indicates the currency in which premiums are received for the policy.",
                    "example": "USD"
                  },
                  "payToEntityCode": {
                    "maxLength": 150,
                    "type": "string",
                    "description": "Entity code of entity to which payment to be given.",
                    "example": "AGY1875"
                  },
                  "payToEntityName": {
                    "maxLength": 300,
                    "type": "string",
                    "description": "Name of entity.",
                    "example": "John Smith"
                  },
                  "scheduleCutOffDate": {
                    "type": "string",
                    "description": "End date of the period considered for payment i.e. payments before this date are considered in the statement.",
                    "format": "date",
                    "example": "2018-01-25"
                  },
                  "coverageSeq": {
                    "type": "integer",
                    "description": "Coverage Sequence.",
                    "format": "int64",
                    "example": 123456789.0
                  },
                  "paidToDateAmount": {
                    "type": "number",
                    "description": "Payment to be paid amount.",
                    "format": "double",
                    "example": 100.0
                  },
                  "policyNo": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Policy Number.",
                    "example": "POL548778"
                  },
                  "productCode": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Product code. This must be a supported code. List of supported product code along with description can be retrieved by passing masterName equal to 'Product' to Master API.",
                    "example": "WES-PAK-EST1"
                  },
                  "productName": {
                    "maxLength": 1000,
                    "type": "string",
                    "description": "Product name.",
                    "example": "Wespak Estate Product 1"
                  },
                  "payableDueAmount": {
                    "type": "number",
                    "description": "Amount remaining to be paid in next dues.",
                    "format": "double",
                    "example": 100.0
                  },
                  "referenceTypeCode": {
                    "maxLength": 22,
                    "enum": [
                      "ADJUSTMENT",
                      "COMMISSION",
                      "HOLD",
                      "PAYOUT",
                      "PAYOUTHDR",
                      "RELEASE",
                      "SCHEME",
                      "INCENTIVE"
                    ],
                    "type": "string",
                    "description": "Payable creation reference i.e. whether payable created for commission or incentive etc. This must be a supported code. List of supported payment reference type along with description can be retrieved by passing domainType equal to 'ProducerPayableReferenceType' to List of Values API."
                  },
                  "referenceTypeDescription": {
                    "maxLength": 1000,
                    "type": "string",
                    "description": "Description of reference type.",
                    "example": "Adjustment"
                  },
                  "remarks": {
                    "maxLength": 1024,
                    "type": "string",
                    "description": "Remarks if any.",
                    "example": "Adjustment is done because of incorrect compensation calculated."
                  },
                  "schedulePaymentDate": {
                    "type": "string",
                    "description": "Date when payment to be done.",
                    "format": "date",
                    "example": "2018-01-25"
                  },
                  "sourceEntityCode": {
                    "maxLength": 150,
                    "type": "string",
                    "description": "Entity code of entity responsible for this payable creation.",
                    "example": "AGY1875"
                  },
                  "sourceEntityName": {
                    "maxLength": 300,
                    "type": "string",
                    "description": "Name of source entity.",
                    "example": "John Smith"
                  },
                  "totalPaymentAmount": {
                    "type": "number",
                    "description": "Total Payment Amount for given reference id.",
                    "format": "double",
                    "example": 1000.0
                  },
                  "holdAmount": {
                    "type": "number",
                    "description": "Amount kept on hold.",
                    "format": "double",
                    "example": 100.0
                  },
                  "transactionDate": {
                    "type": "string",
                    "description": "Date on which Hold and release transaction occurred.",
                    "format": "date",
                    "example": "2018-01-25"
                  }
                },
                "description": "This object has all attributes stating Outstanding Due for given entity."
              },
              "OutstandingDues": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OutstandingDue"
                }
              },
              "HoldReleaseDue": {
                "type": "object",
                "properties": {
                  "transactionDate": {
                    "type": "string",
                    "description": "Date on which Hold and release transaction occurred.",
                    "format": "date",
                    "example": "2018-01-25"
                  },
                  "balanceAmount": {
                    "type": "number",
                    "description": "Remaining Amount.",
                    "format": "double",
                    "example": 100.0
                  },
                  "compensationTypeCode": {
                    "maxLength": 22,
                    "enum": [
                      "CONALL",
                      "CORFEE",
                      "FYGB",
                      "OC",
                      "OCREGFEE",
                      "OCUPEE",
                      "PRDBNS",
                      "SC",
                      "SCREGFEE",
                      "SCUPFEE"
                    ],
                    "type": "string",
                    "description": "Compensation type whether it is fee or commission. This must be a supported code. List of supported compensation type along with description can be retrieved by passing domainType equal to 'CompensationType' to List of Values API."
                  },
                  "compensationTypeDescription": {
                    "maxLength": 100,
                    "type": "string",
                    "description": "Description of compensation type."
                  },
                  "dueDate": {
                    "type": "string",
                    "description": "Premium due date.",
                    "format": "date",
                    "example": "2018-01-25"
                  },
                  "channelCode": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Channel in which entity belongs to. This must be a supported code. List of supported channel code along with description can be retrieved by passing masterName equal to 'Channel' to Master API.",
                    "example": "BROK"
                  },
                  "channelDescription": {
                    "maxLength": 1000,
                    "type": "string",
                    "description": "Channel description.",
                    "example": "Broker Channel"
                  },
                  "currencyCode": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "This attribute indicates the currency in which premiums are received for the policy.",
                    "example": "USD"
                  },
                  "holdAmount": {
                    "type": "number",
                    "description": "Amount kept on hold.",
                    "format": "double",
                    "example": 100.0
                  },
                  "releaseAmount": {
                    "type": "number",
                    "description": "Amount which is released for payment.",
                    "format": "double",
                    "example": 100.0
                  },
                  "payToEntityCode": {
                    "maxLength": 150,
                    "type": "string",
                    "description": "Entity code of entity to which payment to be given.",
                    "example": "AGY1875"
                  },
                  "payToEntityName": {
                    "maxLength": 300,
                    "type": "string",
                    "description": "Name of entity.",
                    "example": "John Smith"
                  },
                  "coverageSeq": {
                    "type": "integer",
                    "description": "Coverage Sequence.",
                    "format": "int64",
                    "example": 123456789.0
                  },
                  "paidToDateAmount": {
                    "type": "number",
                    "description": "Payment to be paid amount.",
                    "format": "double",
                    "example": 100.0
                  },
                  "policyNo": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Policy Number.",
                    "example": "POL548778"
                  },
                  "productCode": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Product code. This must be a supported code. List of supported product code along with description can be retrieved by passing masterName equal to 'Product' to Master API.",
                    "example": "WES-PAK-EST1"
                  },
                  "productName": {
                    "maxLength": 1000,
                    "type": "string",
                    "description": "Product name.",
                    "example": "Wespak Estate Product 1"
                  },
                  "referenceTypeCode": {
                    "maxLength": 22,
                    "enum": [
                      "ADJUSTMENT",
                      "COMMISSION",
                      "HOLD",
                      "PAYOUT",
                      "PAYOUTHDR",
                      "RELEASE",
                      "SCHEME",
                      "INCENTIVE"
                    ],
                    "type": "string",
                    "description": "Payable creation reference i.e. whether payable created for commission or incentive etc. This must be a supported code. List of supported payment reference type along with description can be retrieved by passing domainType equal to 'ProducerPayableReferenceType' to List of Values API."
                  },
                  "referenceTypeDescription": {
                    "maxLength": 1000,
                    "type": "string",
                    "description": "Description of reference type.",
                    "example": "Adjustment"
                  },
                  "totalPaymentAmount": {
                    "type": "number",
                    "description": "Total Payment Amount for given reference id.",
                    "format": "double",
                    "example": 1000.0
                  },
                  "holdReasonCode": {
                    "maxLength": 22,
                    "enum": [
                      "AB",
                      "UI"
                    ],
                    "type": "string",
                    "description": "Payable hold reason. This must be a supported code. List of supported hold reason code along with description can be retrieved by passing domainType equal to 'ReasonHoldReleasePayment' to List of Values API."
                  },
                  "holdReasonDescription": {
                    "maxLength": 1000,
                    "type": "string",
                    "description": "Description of hold reason.",
                    "example": "Agent Blacklisted"
                  },
                  "holdDate": {
                    "type": "string",
                    "description": "Date on which payable kept on hold.",
                    "format": "date",
                    "example": "2018-01-25"
                  },
                  "releaseReasonCode": {
                    "maxLength": 22,
                    "enum": [
                      "AB",
                      "UI"
                    ],
                    "type": "string",
                    "description": "Payable release reason. This must be a supported code. List of supported release reason code along with description can be retrieved by passing domainType equal to 'ReasonHoldReleasePayment' to List of Values API."
                  },
                  "releaseReasonDescription": {
                    "maxLength": 1000,
                    "type": "string",
                    "description": "Description of release reason.",
                    "example": "Agent Blacklisted"
                  },
                  "releaseDate": {
                    "type": "string",
                    "description": "Date on which payable released from hold.",
                    "format": "date",
                    "example": "2018-01-25"
                  },
                  "payableDueAmount": {
                    "type": "number",
                    "description": "Amount remaining to be paid in next dues.",
                    "format": "double",
                    "example": 100.0
                  }
                },
                "description": "This object has all attributes related to hold and released dues."
              },
              "HoldReleaseDues": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/HoldReleaseDue"
                }
              },
              "Adjustment": {
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "init64",
                    "readOnly": true,
                    "example": 1234
                  },
                  "requestDate": {
                    "type": "string",
                    "description": "Adjustment request date. This is defaulted to business date",
                    "format": "date",
                    "readOnly": true
                  },
                  "requestStatusCode": {
                    "enum": [
                      "APPR",
                      "CANC",
                      "PEND",
                      "REJD"
                    ],
                    "type": "string",
                    "description": "Current status of the adjustment request.  This must be a supported code. List of supported adjustment request status along with description can be retrieved by passing domainType equal to 'AdjustmentRequestStatus' to List of Values API.",
                    "readOnly": true
                  },
                  "requestStatusDescription": {
                    "maxLength": 150,
                    "type": "string",
                    "description": "Adjustment request status",
                    "readOnly": true,
                    "example": "Approved"
                  },
                  "remarks": {
                    "maxLength": 300,
                    "type": "string",
                    "description": "Allow the user to specify the remarks against the request.",
                    "example": "Sample text"
                  },
                  "requestTypeCode": {
                    "enum": [
                      "ADVANCE",
                      "PAYMENT",
                      "RECEIPT",
                      "RECOVERY",
                      "WRITEOFF"
                    ],
                    "type": "string",
                    "description": "specify the adjustment type applicable for the transaction record.  This must be a supported code. List of supported adjustment request type along with description can be retrieved by passing domainType equal to 'AdjustmentRequestType' to List of Values API."
                  },
                  "requestTypeDescription": {
                    "maxLength": 150,
                    "type": "string",
                    "description": "Adjustment request type description",
                    "example": "Advance"
                  },
                  "entityCode": {
                    "maxLength": 30,
                    "type": "string",
                    "description": "Entity code of the entity for whom adjustment is to be captured.",
                    "readOnly": true,
                    "example": "AGY4711"
                  },
                  "entityName": {
                    "maxLength": 300,
                    "type": "string",
                    "description": "Name of the entity specified in the entity code"
                  },
                  "compensationTypeCode": {
                    "enum": [
                      "COMM",
                      "CON",
                      "FEE",
                      "INC",
                      "MISC"
                    ],
                    "type": "string",
                    "description": "Compensation type applicable for the transaction record. This must be a supported code. List of supported compensation type along with description can be retrieved by passing domainType equal to 'CompensationType' to List of Values API."
                  },
                  "compensationTypeDescription": {
                    "maxLength": 150,
                    "type": "string",
                    "description": "Compensation type description",
                    "readOnly": true,
                    "example": "Commission"
                  },
                  "CompensationSubTypeCode": {
                    "enum": [
                      "OC",
                      "SC"
                    ],
                    "type": "string",
                    "description": "compensation sub-type applicable for the transaction record. This must be a supported code. List of supported compensation sub type along with description can be retrieved by passing domainType equal to 'CompensationSubType' to List of Values API."
                  },
                  "amount": {
                    "type": "number",
                    "description": "Specify the amount to be adjusted. If Adjustment Type = Payment / Receipt / Advance / Write-Off, then the adjustment amount must be always positive. If Adjustment Type = Recovery, then the adjustment amount must always be negative.",
                    "format": "double",
                    "example": 100.0
                  },
                  "frequencyCode": {
                    "enum": [
                      "MONTHLY",
                      "ONETIME",
                      "QUARTERLY"
                    ],
                    "type": "string",
                    "description": "Specify how frequently the adjustment must be effective. This must be a supported code. List of supported frequency code along with description can be retrieved by passing domainType equal to 'AdjustmentFrequency' to List of Values API."
                  },
                  "period": {
                    "type": "integer",
                    "description": "specify the period for which the adjustment must be effective.If Frequency = One Time, then this value is not required. If Frequency = Monthly, then this value must be from 1 to 12. If Frequency = Quarterly, then this cell must be enabled and the LOVs 1 to 4 must be available.",
                    "format": "init32"
                  },
                  "effectiveDate": {
                    "type": "string",
                    "description": "Effective date for the adjustment transaction",
                    "format": "date",
                    "example": "2019-09-03"
                  },
                  "statusCode": {
                    "enum": [
                      "APPR",
                      "CANC",
                      "PEND",
                      "REJD"
                    ],
                    "type": "string",
                    "description": "Current status of the adjustment transaction record. This must be a supported code. List of supported adjustment status code along with description can be retrieved by passing domainType equal to 'AdjustmentStatus' to List of Values API.",
                    "readOnly": true
                  },
                  "statusDescription": {
                    "maxLength": 150,
                    "type": "string",
                    "description": "Current status of the adjustment transaction record.",
                    "readOnly": true,
                    "example": "Approved"
                  },
                  "narration": {
                    "maxLength": 300,
                    "type": "string",
                    "description": "the user to specify the description against the adjustment transaction record.",
                    "example": "Sample text"
                  }
                },
                "description": "Payment Adjustment"
              },
              "Adjustments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Adjustment"
                }
              },
              "CommissionDetails": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Commission"
                }
              },
              "Commission": {
                "type": "object",
                "properties": {
                  "accrualAdvanceBasisCode": {
                    "maxLength": 22,
                    "enum": [
                      "INSTL",
                      "PRCNT"
                    ],
                    "type": "string",
                    "description": "Used in written commission whether commission is paid in installment or in percentage. This must be a supported code. List of supported accrual options along with description can be retrieved by passing domainType equal to 'AccrualOption' to List of Values API."
                  },
                  "accrualAdvanceBasisDescription": {
                    "maxLength": 100,
                    "type": "string",
                    "description": "Description of accrual advance basis.",
                    "example": "Installment"
                  },
                  "accrualAdvanceValue": {
                    "type": "number",
                    "description": "Accrual advance value if installment then how many installment and if in percentage then how many percentage.",
                    "example": 25.0
                  },
                  "accrualBasisCode": {
                    "maxLength": 22,
                    "enum": [
                      "PAID",
                      "WRIT"
                    ],
                    "type": "string",
                    "description": "Basis applicable for a compensation record. This must be a supported code. List of supported accrual basis along with description can be retrieved by passing domainType equal to 'AccrualBasis' to List of Values API."
                  },
                  "accrualBasisDescription": {
                    "maxLength": 100,
                    "type": "string",
                    "description": "Description of accrual basis.",
                    "example": "Paid"
                  },
                  "appropriationAmount": {
                    "type": "number",
                    "description": "Total of the premium amount received against the payment.",
                    "format": "double",
                    "example": 1000.0
                  },
                  "appropriationDate": {
                    "type": "string",
                    "description": "Premium payment date.",
                    "format": "date",
                    "example": "2018-01-25"
                  },
                  "appropriationTypeCode": {
                    "maxLength": 22,
                    "enum": [
                      "PREMIUM",
                      "FEE"
                    ],
                    "type": "string",
                    "description": "Appropriation type whether you have paid premium or fee. This must be a supported code. List of supported appropriation type along with description can be retrieved by passing domainType equal to 'AppropriationType' to List of Values API."
                  },
                  "appropriationTypeDescription": {
                    "maxLength": 100,
                    "type": "string",
                    "description": "Description of appropriation type.",
                    "example": "Premium"
                  },
                  "billTypeCode": {
                    "maxLength": 22,
                    "enum": [
                      "AGYBILL",
                      "COMPBILL"
                    ],
                    "type": "string",
                    "description": "Bill type of policy. This must be a supported code. List of supported bill type along with description can be retrieved by passing domainType equal to 'BillType' to List of Values API."
                  },
                  "billTypeDescription": {
                    "maxLength": 100,
                    "type": "string",
                    "description": "Description of bill type.",
                    "example": "Agency Bill"
                  },
                  "calculationDate": {
                    "type": "string",
                    "description": "Date when commission is calculated.",
                    "format": "date",
                    "example": "2018-01-25"
                  },
                  "commissionRetained": {
                    "type": "number",
                    "description": "How much commission to be retained.",
                    "format": "double",
                    "example": 10.0
                  },
                  "compensationAmount": {
                    "type": "number",
                    "description": "Commission amount.",
                    "format": "double",
                    "example": 600.0
                  },
                  "compensationBaseRate": {
                    "type": "number",
                    "description": "Commission calculation base rate.",
                    "format": "double",
                    "example": 20.0
                  },
                  "compensationExceptBasisDescription": {
                    "maxLength": 100,
                    "type": "string",
                    "description": "Description of compensation except basis.",
                    "example": "Amount"
                  },
                  "compensationExceptClassCode": {
                    "maxLength": 22,
                    "enum": [
                      "ENHANCE",
                      "OVERRIDE",
                      "SACRIFICE"
                    ],
                    "type": "string",
                    "description": "Want to give any exception in commission like sacrifice commission. This must be a supported code. List of supported compensation except class along with description can be retrieved by passing domainType equal to 'CompensationExceptClass' to List of Values API."
                  },
                  "compensationExceptClassDescription": {
                    "maxLength": 100,
                    "type": "string",
                    "description": "Description of compensation except class.",
                    "example": "Enhance"
                  },
                  "compensationExceptBasisCode": {
                    "maxLength": 22,
                    "enum": [
                      "AMOUNT",
                      "PERCENTAGE"
                    ],
                    "type": "string",
                    "description": "Compensation to be given as amount or in percent. This must be a supported code. List of supported compensation except basis along with description can be retrieved by passing domainType equal to 'CompensationExceptBasis' to List of Values API."
                  },
                  "compensationExceptionAmount": {
                    "type": "number",
                    "description": "How much amount to be kept in exception.",
                    "format": "double",
                    "example": 250.0
                  },
                  "compensationPayableAmount": {
                    "type": "number",
                    "description": "How much commission to be paid.",
                    "format": "double",
                    "example": 600.0
                  },
                  "compensationRate": {
                    "type": "number",
                    "description": "Compensation final rate.",
                    "format": "double",
                    "example": 20.0
                  },
                  "compensationSharePercentage": {
                    "type": "number",
                    "description": "Compensation sharing percentage.",
                    "format": "double",
                    "example": 10.0
                  },
                  "compensationSubTypeCode": {
                    "maxLength": 22,
                    "enum": [
                      "OC",
                      "SC"
                    ],
                    "type": "string",
                    "description": "Compensation to be given standard or overridden. This must be a supported code. List of supported compensation sub type along with description can be retrieved by passing domainType equal to 'CompensationSubType' to List of Values API."
                  },
                  "compensationSubTypeDescription": {
                    "maxLength": 100,
                    "type": "string",
                    "description": "Description of compensation sub type.",
                    "example": "Overriding Commission"
                  },
                  "compensationTypeCode": {
                    "maxLength": 22,
                    "enum": [
                      "COMM",
                      "FEE"
                    ],
                    "type": "string",
                    "description": "Compensation type whether it's fee or commission. This must be a supported code. List of supported compensation type along with description can be retrieved by passing domainType equal to 'CompensationType' to List of Values API."
                  },
                  "compensationTypeDescription": {
                    "maxLength": 100,
                    "type": "string",
                    "description": "Description of compensation type.",
                    "example": "Commission"
                  },
                  "compensationExceptValue": {
                    "type": "number",
                    "description": "Compensation except value if basis is percentage then how much percentage.",
                    "format": "double",
                    "example": 10.0
                  },
                  "coverageSequence": {
                    "type": "number",
                    "description": "Unique reference to coverage.",
                    "format": "double",
                    "example": 545465.0
                  },
                  "coverageYearInForce": {
                    "type": "number",
                    "description": "Coverage applicable since year.",
                    "example": 2.0
                  },
                  "currencyCode": {
                    "maxLength": 15,
                    "type": "string",
                    "description": "Currency on policy.",
                    "example": "USD"
                  },
                  "dueDate": {
                    "type": "string",
                    "description": "Premium due date.",
                    "format": "date",
                    "example": "2018-01-25"
                  },
                  "dueTypeCode": {
                    "maxLength": 22,
                    "enum": [
                      "PREMIUM",
                      "FEE"
                    ],
                    "type": "string",
                    "description": "Describes whether its a premium or fee. This must be a supported code. List of supported due type along with description can be retrieved by passing domainType equal to 'DueType' to List of Values API."
                  },
                  "dueTypeDescription": {
                    "maxLength": 100,
                    "type": "string",
                    "description": "Description of due type.",
                    "example": "Premium"
                  },
                  "entityCode": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Unique identifier of entity.",
                    "example": "AGY1845"
                  },
                  "entityName": {
                    "maxLength": 150,
                    "type": "string",
                    "description": "Name of entity.",
                    "example": "ABC Insurance Co."
                  },
                  "policyNo": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "Policy number of policy.",
                    "example": "POL87645"
                  },
                  "policyYearInForce": {
                    "maxLength": 10,
                    "type": "string",
                    "description": "Policy inforce since year.",
                    "example": "2"
                  },
                  "productCode": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Product code of policy. This must be a supported code. List of supported product code along with description can be retrieved by passing masterName equal to 'Product' to Master API.",
                    "example": "PL-YDOD1"
                  },
                  "productName": {
                    "maxLength": 100,
                    "type": "string",
                    "description": "Product name of policy.",
                    "example": "PL Product 1"
                  },
                  "remarks": {
                    "maxLength": 1024,
                    "type": "string",
                    "description": "Remarks if any.",
                    "example": "Sample Text."
                  },
                  "totalPremiumAmount": {
                    "type": "number",
                    "description": "Total premium amount.",
                    "format": "double",
                    "example": 1000.0
                  },
                  "groupNumber": {
                    "type": "string",
                    "description": "Group Number.",
                    "example": "6500017"
                  },
                  "subGroupNumber": {
                    "type": "string",
                    "description": "Sub Group Number.",
                    "example": "65000170001"
                  },
                  "memberNumber": {
                    "type": "string",
                    "description": "Member Number.",
                    "example": "M65000140010457"
                  },
                  "groupName": {
                    "type": "string",
                    "description": "Group Name.",
                    "example": "AGLGroup"
                  },
                  "tranchId": {
                    "type": "number",
                    "description": "Tranch applicable.",
                    "example": 2.0
                  },
                  "coverageProductCode": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Product code of policy. This must be a supported code. List of supported product code along with description can be retrieved by passing masterName equal to 'Product' to Master API.",
                    "example": "PL-YDOD1"
                  },
                  "coverageProductName": {
                    "maxLength": 100,
                    "type": "string",
                    "description": "Product name of policy.",
                    "example": "PL Product 1"
                  }
                },
                "description": "Commission Response."
              },
              "PolicyCommissionRateAndAmount": {
                "type": "object",
                "properties": {
                  "policyno": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Policy Number.",
                    "example": "POLNM4344"
                  },
                  "entityCode": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Unique identifier of entity.",
                    "example": "AGT2089"
                  },
                  "sourceSystemProducerCode": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Unique identifier of entity in the calling system.",
                    "example": "POL2015AGT2089"
                  },
                  "coverageCode": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Coverage code of policy coverage.",
                    "example": "PL Product1"
                  },
                  "sourceSystemCoverageId": {
                    "maxLength": 30,
                    "type": "number",
                    "description": "This attribute indicates the unique coverage ID generated in the source system.",
                    "example": 45689.0
                  },
                  "baseRate": {
                    "type": "number",
                    "description": "Base Commission rate",
                    "format": "double",
                    "example": 15.0
                  },
                  "baseAmount": {
                    "type": "number",
                    "description": "Base Commission amount.",
                    "format": "double",
                    "example": 150.0
                  },
                  "finalRate": {
                    "type": "number",
                    "description": "Final Commission Rate. This can be different from base rate if Compensation Exception Class is specified",
                    "format": "double",
                    "example": 10.0
                  },
                  "finalAmount": {
                    "type": "number",
                    "description": "Final Commission Amount. This can be different from base rate if Compensation Exception Class is specified.",
                    "format": "double",
                    "example": 100.0
                  },
                  "compensationSharePercentage": {
                    "type": "number",
                    "description": "This attribute indicates the producer's share in the policy for compensation and production..",
                    "example": 100.0
                  }
                },
                "description": "Policy Commission Response."
              },
              "PolicyCommissionDetail": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PolicyCommissionRateAndAmount"
                }
              },
              "PolicyDetails": {
                "required": [
                  "compensationSubTypeCode",
                  "currencyCode",
                  "eventType",
                  "paymentMode",
                  "policyNo",
                  "sourceSystemCode"
                ],
                "type": "object",
                "properties": {
                  "eventType": {
                    "enum": [
                      "quote",
                      "payment"
                    ],
                    "type": "string",
                    "description": "Required to determine is in quote stage or payment stage. In case of payment, the amount & rate that is already stamped in DM is returned. In case of quote, amount & rate is evaluated and returned."
                  },
                  "compensationSubTypeCode": {
                    "maxLength": 22,
                    "enum": [
                      "OC",
                      "SC"
                    ],
                    "type": "string",
                    "description": "This attribute must indicate the type of commission / fee it is expecting the service to return. For e.g. SC, Fee, OC, TC, etc. In Suite implementation it is mostly 'SC' i.e. base or standard commission."
                  },
                  "policyno": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "Policy Number.",
                    "example": "POLNM4344"
                  },
                  "policyRenewalCount": {
                    "type": "number",
                    "description": "This attribute indicates the number of times the policy has been renewed. If no value has been provided for this attribute, then DM will default it to 0 (Zero).",
                    "example": 0.0
                  },
                  "policyType": {
                    "maxLength": 22,
                    "enum": [
                      "NB",
                      "RB"
                    ],
                    "type": "string",
                    "description": "This attribute indicates if the policy is a New policy or a Renewal policy."
                  },
                  "sourceSystemCode": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "This attribute indicates the source of policy, i.e. the Policy Administration System from where the policy has been issued.",
                    "example": "PAS2015"
                  },
                  "sourceSystemProcessDate": {
                    "type": "string",
                    "description": "Issue date or process date.",
                    "format": "date"
                  },
                  "transactionEffectiveDate": {
                    "type": "string",
                    "description": "This attribute indicates the date from which the alteration takes effect on the policy.",
                    "format": "date"
                  },
                  "expirationDate": {
                    "type": "string",
                    "description": "Policy Expiration Date.",
                    "format": "date"
                  },
                  "payPlanCode": {
                    "maxLength": 22,
                    "enum": [
                      "SIN",
                      "REG"
                    ],
                    "type": "string",
                    "description": "This attribute indicates whether the policy is a Single premium policy or a Regular premium policy."
                  },
                  "policyTermUnitCode": {
                    "maxLength": 22,
                    "enum": [
                      "DAYS",
                      "WEEK",
                      "MTH",
                      "YRS"
                    ],
                    "type": "string",
                    "description": "This attribute indicates the unit (Days / Weeks / Years) of the policy term."
                  },
                  "policyTerm": {
                    "enum": [
                      "MONTH",
                      "YEAR"
                    ],
                    "type": "string",
                    "description": "This attibute indicates the policy term, i.e. the duration for which the policy has been issued"
                  },
                  "premiumPaymentTerm": {
                    "enum": [
                      "WEEK",
                      "MONT",
                      "QTRL",
                      "ANNL",
                      "HALF",
                      "5PAY",
                      "8PAY"
                    ],
                    "type": "string",
                    "description": "This attribute indicates the premium payment term, i.e. the duration for which premiums would be paid for the policy."
                  },
                  "numberOfLives": {
                    "type": "number",
                    "description": "This attribute indicates the number of individuals insured by the policy.",
                    "example": 5.0
                  },
                  "paymentFrequencyCode": {
                    "enum": [
                      "WEEK",
                      "MONT",
                      "QTRL",
                      "ANNL",
                      "HALF",
                      "5PAY",
                      "8PAY"
                    ],
                    "type": "string",
                    "description": "This attribute indicates the premium payment frequency for the policy."
                  },
                  "paymentCode": {
                    "maxLength": 22,
                    "enum": [
                      "CHQ",
                      "EFT"
                    ],
                    "type": "string",
                    "description": "This attribute indicates the mode of premium payment for the policy."
                  },
                  "currencyCode": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "This attribute indicates the currency in which premiums are received for the policy.",
                    "example": "USD"
                  },
                  "lineOfBusinessCode": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Line of business.",
                    "example": "PL"
                  },
                  "productCode": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Product code.",
                    "example": "PL Product1"
                  },
                  "programType": {
                    "maxLength": 22,
                    "enum": [
                      "STANDARD",
                      "NONSTD"
                    ],
                    "type": "string",
                    "description": "This attribute indicates the program under which the policy has been issued."
                  },
                  "issuingAgencyOfficeCode": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "This attribute indicates the code of the business entity office from where the policy was issued.",
                    "example": "AGY2087"
                  },
                  "issuingCompanyOfficeCode": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "This attribute indicates the code of the insurance company office from where the policy was issued.",
                    "example": "AGY2086"
                  },
                  "companyCode": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Underwriting company code.",
                    "example": "ABCLTD"
                  },
                  "stateCode": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "State in which appointment to be done.",
                    "example": "FL"
                  },
                  "countyCode": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "County in which appointment is allowed.",
                    "example": "61"
                  },
                  "accrualBasisCode": {
                    "maxLength": 22,
                    "enum": [
                      "PAID",
                      "WRIT"
                    ],
                    "type": "string",
                    "description": "Basis applicable for a compensation record."
                  },
                  "billTypeCode": {
                    "maxLength": 22,
                    "enum": [
                      "AGYBILL",
                      "COMPBILL"
                    ],
                    "type": "string",
                    "description": "Bill type of policy."
                  },
                  "campaignCode": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "This attribute indicates the campaign or scheme under which the policy is issued."
                  },
                  "businessClassCode": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "This attribute indicates the business class / segment applicable to the policy."
                  },
                  "selfContractYN": {
                    "type": "string",
                    "description": "This attribute indicates if the producer has purchased the policy for self or a family member."
                  },
                  "specialInvestigationYN": {
                    "type": "string",
                    "description": "This attribute indicates whether the policy is under investigation."
                  },
                  "bundledFlagYN": {
                    "type": "string",
                    "description": "This attribute indicates whether multiple diverse coverages are bundled in the policy."
                  },
                  "coverages": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/PolicyCoverages"
                    }
                  },
                  "producers": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/PolicyProducers"
                    }
                  }
                },
                "description": "This object has details related to the policy."
              },
              "CoverageSummary": {
                "type": "object",
                "properties": {
                  "sourceSystemCoverageId": {
                    "type": "number",
                    "description": "This attribute indicates the unique tranche ID generated in the PAS for the coverage.",
                    "example": 45689.0
                  },
                  "coverageCode": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Coverage code of policy coverage.",
                    "example": "PL Product1"
                  },
                  "coverageIssueDate": {
                    "type": "string",
                    "description": "This attribute indicates coverage issue date.",
                    "format": "date"
                  },
                  "planTypeCode": {
                    "maxLength": 30,
                    "enum": [
                      "BASE",
                      "RIDER"
                    ],
                    "type": "string",
                    "description": "This attribute indicates whether the coverage is the base plan or a coverage (rider)."
                  },
                  "policyCoverageTerm": {
                    "maxLength": 100,
                    "type": "string",
                    "description": "This attribute indicates the term for the coverage.",
                    "example": "2"
                  },
                  "riskCommencementDate": {
                    "type": "string",
                    "description": "TThis attribute indicates risk commencement date of coverage.",
                    "format": "date"
                  },
                  "policyHoldersEntryAge": {
                    "type": "number",
                    "description": "This attribute indicates the policy holder's age at the time of coverage issuance.",
                    "example": 25.0
                  },
                  "lifeAssuredEntryAge": {
                    "type": "number",
                    "description": "This attribute indicates the life assured's age at the time of coverage issuance.",
                    "example": 25.0
                  },
                  "policyHoldersMaturityAge": {
                    "type": "number",
                    "description": "This attribute indicates the policy holder's age when the coverage term expires.",
                    "example": 25.0
                  },
                  "lifeAssuredMaturityAge": {
                    "type": "number",
                    "description": "This attribute indicates the life assured's age when the coverage term expires.",
                    "example": 25.0
                  },
                  "ageGroup": {
                    "maxLength": 22,
                    "enum": [
                      "YOUNG",
                      "OLD",
                      "STANDARD"
                    ],
                    "type": "string",
                    "description": "This attribute indicates the age group of the insured, mainly used for auto policies."
                  },
                  "sumAssured": {
                    "type": "number",
                    "description": "This attribute indicates the sum assured amount for the coverage.",
                    "format": "int64",
                    "example": 10000.0
                  },
                  "premiumAmount": {
                    "type": "number",
                    "description": "This attribute indicates the premium amount for the coverage per installment.",
                    "format": "int64",
                    "example": 1000.0
                  },
                  "followBaseCoverageCompensationPlanYN": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "This attribute indicates the coveragestatus."
                  },
                  "compensationExceptionType": {
                    "maxLength": 22,
                    "enum": [
                      "ENHANCE",
                      "SACRIFICE",
                      "OVERRIDE"
                    ],
                    "type": "string",
                    "description": "This attribute indicates if any exceptions are to be applied while calculating the compensation for a coverage. ENHANCE - Add the Base Rate/Amount with the value specified in Compensation Exception Value SACRIFICE - Reduce the Base Rate/Amount from the value specified in Compensation Exception Value OVERRIDE - Overide the existing Base Rate/Amount with the value specified in Compensation Exception Value"
                  },
                  "compensationExceptionBasis": {
                    "maxLength": 22,
                    "enum": [
                      "AMOUNT",
                      "PERCENTAGE"
                    ],
                    "type": "string",
                    "description": "This attribute indicates if the basis for the exception to be applied while calculating the compensation for a coverage. It must be mandatory only if Compensation Exception Class is specified."
                  },
                  "compensationExceptionValue": {
                    "type": "integer",
                    "description": "This attribute indicates if the exception rate or amount to be applied while calculating the compensation for a coverage. It must be mandatory only if Compensation Exception Class is specified.",
                    "example": 10
                  }
                },
                "description": "This object describes the Coverage information associated with the policy."
              },
              "ProducerSummary": {
                "required": [
                  "entityCode"
                ],
                "type": "object",
                "properties": {
                  "entityCode": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Unique identifier of entity.",
                    "example": "AGT2089"
                  },
                  "sourceSystemProducerCode": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Unique identifier of entity in the calling system.",
                    "example": "POL2015AGT2089"
                  },
                  "baseEntityIndicatorFlagYN": {
                    "type": "string",
                    "description": "This should be Y, if the producer is base entity and N if not."
                  },
                  "producerTypeCode": {
                    "maxLength": 22,
                    "enum": [
                      "PRODUCER",
                      "REFERRAL"
                    ],
                    "type": "string",
                    "description": "This attribute indicates the type of producer, i.e. whether producer is a licensed producer or a referral producer or a CSR etc."
                  },
                  "compensationSharePercentage": {
                    "type": "number",
                    "description": "This attribute indicates the producer's share in the policy for compensation and production.",
                    "example": 100.0
                  }
                },
                "description": "This object has details related to the policy producer."
              },
              "PolicyCoverages": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CoverageSummary"
                }
              },
              "PolicyProducers": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducerSummary"
                }
              },
              "Premium": {
                "type": "object",
                "properties": {
                  "policyno": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "Policy Number.",
                    "readOnly": true,
                    "example": "POLNM4344"
                  },
                  "dueTypeCode": {
                    "maxLength": 22,
                    "enum": [
                      "PREMIUM",
                      "FEE"
                    ],
                    "type": "string",
                    "description": "This attributes indicates the recievable code that will contain the product code or fee code."
                  },
                  "sourceSystemCode": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "This attribute indicates the source of premium, i.e. the Policy Administration System or the Billing system from where the premium has been sent to DM.",
                    "example": "POL2015"
                  },
                  "sourceSystemReferenceId": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "This attribute indicates the transaction reference number for the premium record in the source system.",
                    "example": "12312"
                  },
                  "sourceSystemCoverageId": {
                    "type": "number",
                    "description": "This attribute indicates the unique tranche ID generated in the PAS for the coverage.",
                    "example": 45689.0
                  },
                  "coverageSequence": {
                    "type": "number",
                    "description": "Unique reference to coverage.",
                    "format": "double",
                    "example": 545465.0
                  },
                  "paymentCode": {
                    "maxLength": 22,
                    "enum": [
                      "CHQ",
                      "EFT"
                    ],
                    "type": "string",
                    "description": "This attribute indicates the mode of premium payment for the policy."
                  },
                  "dueDate": {
                    "type": "string",
                    "description": "Premium due date.",
                    "format": "date",
                    "example": "2018-01-25"
                  },
                  "dueAmount": {
                    "type": "number",
                    "description": "Premium amount that is due from the policy holder.",
                    "format": "double",
                    "example": 1000.0
                  },
                  "appropriationAmount": {
                    "type": "number",
                    "description": "Total of the premium amount received against the payment.",
                    "format": "double",
                    "example": 1000.0
                  },
                  "appropriationDate": {
                    "type": "string",
                    "description": "Premium payment date.",
                    "format": "date",
                    "example": "2018-01-25"
                  },
                  "appropriationTypeCode": {
                    "maxLength": 22,
                    "enum": [
                      "PREMIUM",
                      "FEE"
                    ],
                    "type": "string",
                    "description": "Appropriation type whether you have paid premium or fee."
                  },
                  "extraPremiumAmount": {
                    "type": "number",
                    "description": "Extra premium amount paid by the customer for the coverage.",
                    "format": "double",
                    "example": 10.0
                  },
                  "billTypeCode": {
                    "maxLength": 22,
                    "enum": [
                      "AGYBILL",
                      "COMPBILL"
                    ],
                    "type": "string",
                    "description": "Bill type of policy."
                  },
                  "commissionRetainedAmount": {
                    "type": "number",
                    "description": "Compensation amount retained by the agency, in case it is an agency billed policy.",
                    "format": "double",
                    "example": 100.0
                  },
                  "installmentNumber": {
                    "type": "number",
                    "description": "Installment number for which the premium has been received.",
                    "example": 1.0
                  },
                  "remarks": {
                    "maxLength": 1024,
                    "type": "string",
                    "description": "Remarks if any.",
                    "example": "Sample Text."
                  },
                  "paymentFrequencyCode": {
                    "enum": [
                      "WEEK",
                      "MONT",
                      "QTRL",
                      "ANNL",
                      "HALF",
                      "5PAY",
                      "8PAY"
                    ],
                    "type": "string",
                    "description": "This attribute indicates the premium payment frequency for the policy."
                  }
                },
                "description": "This object has details related to the policy premium paid by the Insured."
              },
              "Payment": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "System generated id for payment details.",
                    "format": "int64",
                    "example": 123456789.0
                  },
                  "channelCode": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Channel in which entity belongs to. This must be a supported code. List of supported channel code along with description can be retrieved by passing masterName equal to 'Channel' to Master API.",
                    "example": "BROK"
                  },
                  "channelDescription": {
                    "maxLength": 1000,
                    "type": "string",
                    "description": "Channel description.",
                    "example": "Broker Channel"
                  },
                  "currencyCode": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "This attribute indicates the currency in which premiums are received for the policy.",
                    "example": "USD"
                  },
                  "financePaidDate": {
                    "type": "string",
                    "description": "Date on which payment is done.",
                    "format": "date",
                    "example": "2018-01-25"
                  },
                  "financeReferenceNo": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Payment reference no.",
                    "example": "5454"
                  },
                  "narration": {
                    "maxLength": 150,
                    "type": "string",
                    "description": "Description about payment mentioning payment reason.",
                    "example": "Payment for Incentive First Year Growth Bonus for period ending 2017-03-01."
                  },
                  "paymentRejectReasonCode": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Reason for rejecting payment. This must be a supported code. List of supported payment rejection reason code along with description can be retrieved by passing domainType equal to 'PaymentRejectReasonCode' to List of Values API.",
                    "example": "INBD"
                  },
                  "paymentRejectReasonDescription": {
                    "maxLength": 1000,
                    "type": "string",
                    "description": "description of payment reject reason.",
                    "example": "Incorrect bank details"
                  },
                  "emailId": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Email id of entity.",
                    "example": "john.smith@gmail.com"
                  },
                  "payToEntityCode": {
                    "maxLength": 150,
                    "type": "string",
                    "description": "Entity code of entity to which payment to be given.",
                    "example": "AGY1875"
                  },
                  "payToEntityName": {
                    "maxLength": 300,
                    "type": "string",
                    "description": "Name of entity.",
                    "example": "John Smith"
                  },
                  "paymentModeCode": {
                    "maxLength": 22,
                    "enum": [
                      "CHQ",
                      "EFT"
                    ],
                    "type": "string",
                    "description": "Mode of payment. This must be a supported code. List of supported payment mode along with description can be retrieved by passing domainType equal to 'PaymentMode' to List of Values API."
                  },
                  "paymentModeDescription": {
                    "maxLength": 1000,
                    "type": "string",
                    "description": "Description of payment mode.",
                    "example": "Cheque"
                  },
                  "paymentTypeCode": {
                    "maxLength": 22,
                    "enum": [
                      "OC",
                      "CONALL",
                      "CORFEE",
                      "FYGB",
                      "OCREGFEE",
                      "OCUPEE",
                      "PRDBNS",
                      "SC",
                      "SCREGFEE",
                      "SCUPFEE"
                    ],
                    "type": "string",
                    "description": "Type of payment i.e. whether payment to be done for commission income & incentives, contingent commissions, bonuses, etc. This must be a supported code. List of supported payment type along with description can be retrieved by passing domainType equal to 'PaymentType' to List of Values API."
                  },
                  "paymentTypeDescription": {
                    "maxLength": 1000,
                    "type": "string",
                    "description": "Description of payment type.",
                    "example": "Overriding Commission"
                  },
                  "paymentSubTypeCode": {
                    "maxLength": 22,
                    "enum": [
                      "NEWBUS",
                      "RENBUS"
                    ],
                    "type": "string",
                    "description": "Payment subtype i.e. Payment is being done for new business or renewal business. This must be a supported code. List of supported payment sub type along with description can be retrieved by passing domainType equal to 'PaymentSubType' to List of Values API."
                  },
                  "paymentSubTypeDescription": {
                    "maxLength": 1000,
                    "type": "string",
                    "description": "Description of Payment Sub Type.",
                    "example": "New Business"
                  },
                  "payoutStatusCode": {
                    "maxLength": 22,
                    "enum": [
                      "PAID",
                      "CANCELLED",
                      "ERROR",
                      "NOTPAID",
                      "PAYMENT_SENT",
                      "PEND"
                    ],
                    "type": "string",
                    "description": "Status of payment i.e. Paid, Unpaid or Cancelled etc. This must be a supported code. List of supported payout status along with description can be retrieved by passing domainType equal to 'PayoutStatus' to List of Values API."
                  },
                  "payoutStatusDescription": {
                    "maxLength": 1000,
                    "type": "string",
                    "description": "Description of payout status.",
                    "example": "Paid"
                  },
                  "processDateTime": {
                    "type": "string",
                    "description": "Payment process date and time.",
                    "format": "date",
                    "example": "2018-01-25"
                  },
                  "scheduleCutOffDate": {
                    "type": "string",
                    "description": "End date of the period considered for payment i.e. payments before this date are considered in the statement.",
                    "format": "date",
                    "example": "2018-01-25"
                  },
                  "totalAmount": {
                    "type": "number",
                    "description": "Total amount to be paid.",
                    "format": "double",
                    "example": 1000.0
                  },
                  "bankCode": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Bank code",
                    "example": "JPM"
                  },
                  "bankName": {
                    "maxLength": 100,
                    "type": "string",
                    "description": "Bank Name",
                    "example": "JPMorgan Chase"
                  },
                  "accountNo": {
                    "maxLength": 30,
                    "type": "string",
                    "description": "Account number",
                    "example": "4354354"
                  },
                  "tokenId": {
                    "maxLength": 250,
                    "type": "string",
                    "description": "Token Id",
                    "example": "4354354"
                  },
                  "routingNumber": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Routing number",
                    "example": "4354354"
                  },
                  "payoutProcessFinalId": {
                    "type": "integer",
                    "description": "Payout process final Id",
                    "format": "int64",
                    "example": 32423.0
                  },
                  "payToAddress": {
                    "$ref": "#/components/schemas/payToAddress"
                  }
                },
                "description": "This object has all attributes related to payment."
              },
              "Payments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Payment"
                }
              },
              "PaymentDetail": {
                "type": "object",
                "properties": {
                  "paymentId": {
                    "type": "integer",
                    "description": "Unique reference to Payment Details.",
                    "format": "int64",
                    "example": 53454353.0
                  },
                  "entityCode": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "System created agent or agency code. This will be blank in Onboarding APIs.",
                    "example": "AGY7658"
                  },
                  "amountOnHold": {
                    "type": "number",
                    "description": "Amount kept on hold.",
                    "format": "double",
                    "example": 100.0
                  },
                  "amountPaid": {
                    "type": "number",
                    "description": "Amount paid to producer.",
                    "format": "double",
                    "example": 900.0
                  },
                  "balanceAmountToPay": {
                    "type": "number",
                    "description": "Balance amount to pay.",
                    "format": "double",
                    "example": 100.0
                  },
                  "coverageSeq": {
                    "type": "integer",
                    "description": "Coverage Sequence.",
                    "format": "int64",
                    "example": 123456789.0
                  },
                  "payableDueAmount": {
                    "type": "number",
                    "description": "Payable due amount i.e. Amount yet to be paid.",
                    "format": "double",
                    "example": 100.0
                  },
                  "policyNo": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Policy Number.",
                    "example": "POL548778"
                  },
                  "productCode": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Product code. This must be a supported code. List of supported product code along with description can be retrieved by passing masterName equal to 'Product' to Master API.",
                    "example": "WES-PAK-EST1"
                  },
                  "productName": {
                    "maxLength": 1000,
                    "type": "string",
                    "description": "Product name.",
                    "example": "Wespak Estate Product 1"
                  }
                },
                "description": "This object has all attributes related to payment details."
              },
              "PaymentDetails": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PaymentDetail"
                }
              },
              "Schemes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Scheme"
                }
              },
              "Scheme": {
                "type": "object",
                "properties": {
                  "schemeCode": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Unique identifier of scheme.",
                    "example": "MPB2018"
                  },
                  "schemeName": {
                    "maxLength": 150,
                    "type": "string",
                    "description": "Name given to scheme.",
                    "example": "MONTHLY PERFORMANCE BONUS FOR 2018"
                  },
                  "schemeTypeCode": {
                    "enum": [
                      "INC",
                      "CON"
                    ],
                    "type": "string",
                    "description": "Type of scheme whether its a incentive scheme or Contest. This must be a supported code. List of supported scheme type along with description can be retrieved by passing domainType equal to 'SchemeType' to List of Values API."
                  },
                  "schemeTypeDescription": {
                    "maxLength": 1000,
                    "type": "string",
                    "description": "Description of scheme type.",
                    "example": "Incentive"
                  },
                  "benefitClassCode": {
                    "maxLength": 22,
                    "enum": [
                      "MON",
                      "NON"
                    ],
                    "type": "string",
                    "description": "Benefit scheme class whether its a Monetary or Non-monetary.  This must be a supported code. List of supported benefit class along with description can be retrieved by passing domainType equal to 'BenefitClass' to List of Values API."
                  },
                  "benefitClassDescription": {
                    "maxLength": 1000,
                    "type": "string",
                    "description": "Description of benefit frequency.",
                    "readOnly": true,
                    "example": "Monetary"
                  },
                  "benefitFrequencyCode": {
                    "maxLength": 22,
                    "enum": [
                      "ONE",
                      "REC",
                      "ADV"
                    ],
                    "type": "string",
                    "description": "Benefit scheme frequency whether its a one time or recurring.  This must be a supported code. List of supported benefit frequency along with description can be retrieved by passing domainType equal to 'BenefitFrequency' to List of Values API."
                  },
                  "benefitFrequencyDescription": {
                    "maxLength": 1000,
                    "type": "string",
                    "description": "Description of benefit frequency.",
                    "readOnly": true,
                    "example": "ONE"
                  },
                  "channelCode": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Channel code to which entity belongs to. This must be a supported code. List of supported channel code along with description can be retrieved by passing masterName equal to 'Channel' to Master API.",
                    "example": "BROK"
                  },
                  "channelName": {
                    "maxLength": 1000,
                    "type": "string",
                    "description": "Name of the channel.",
                    "readOnly": true,
                    "example": "Broker Channel"
                  },
                  "evaluationFrequencyCode": {
                    "maxLength": 22,
                    "enum": [
                      "WLY",
                      "DLY",
                      "MLY"
                    ],
                    "type": "string",
                    "description": "Defines evaluation frequency whether evaluation will be weekly, daily or monthly. This must be a supported code. List of supported evaluation frequency along with description can be retrieved by passing domainType equal to 'EvaluationFrequency' to List of Values API."
                  },
                  "evaluationFrequencyDescription": {
                    "maxLength": 1000,
                    "type": "string",
                    "description": "Description of evaluation frequency.",
                    "readOnly": true,
                    "example": "Weekly"
                  },
                  "entityTypeCode": {
                    "enum": [
                      "BUS",
                      "IND",
                      "OFF"
                    ],
                    "type": "string",
                    "description": "Type of entity like Business, Individual or Office. This must be a supported code. List of supported entity type code along with description can be retrieved by passing domainType equal to 'EntityType' to List of Values API."
                  },
                  "entityTypeDescription": {
                    "maxLength": 1000,
                    "type": "string",
                    "description": "Description of Entity Type.",
                    "readOnly": true
                  },
                  "entitySubTypeCode": {
                    "maxLength": 30,
                    "type": "string",
                    "description": "Entity sub type of entity. This must be a supported code. List of supported entity sub type code along with description can be retrieved by passing domainType equal to 'EntitySubType' to List of Values API."
                  },
                  "entitySubTypeDescription": {
                    "maxLength": 1000,
                    "type": "string",
                    "description": "Description of Entity Sub Type.",
                    "readOnly": true
                  },
                  "effectiveFromDate": {
                    "type": "string",
                    "description": "Scheme effective date.",
                    "format": "date"
                  },
                  "effectiveToDate": {
                    "type": "string",
                    "description": "Date till which scheme is valid.",
                    "format": "date"
                  }
                },
                "description": "This object has attributes representing scheme details."
              },
              "SchemeEvaluationResult": {
                "type": "object",
                "properties": {
                  "schemeCode": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Unique identifier of scheme.",
                    "example": "MPB2018"
                  },
                  "schemeName": {
                    "maxLength": 150,
                    "type": "string",
                    "description": "Name given to scheme.",
                    "example": "MONTHLY PERFORMANCE BONUS FOR 2018"
                  },
                  "schemeTypeCode": {
                    "enum": [
                      "INC",
                      "CON"
                    ],
                    "type": "string",
                    "description": "Type of scheme whether its incentive scheme or Contest. This must be a supported code. List of supported scheme type along with description can be retrieved by passing domainType equal to 'SchemeType' to List of Values API."
                  },
                  "channelCode": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Channel code to which entity belongs to. This must be a supported code. List of supported channel code along with description can be retrieved by passing masterName equal to 'Channel' to Master API.",
                    "example": "BROK"
                  },
                  "channelName": {
                    "maxLength": 1000,
                    "type": "string",
                    "description": "Name of the channel.",
                    "readOnly": true,
                    "example": "Broker Channel"
                  },
                  "evaluationFrequencyCode": {
                    "maxLength": 22,
                    "enum": [
                      "WLY",
                      "DLY",
                      "MLY"
                    ],
                    "type": "string",
                    "description": "Defines evaluation frequency whether evaluation will be weekly, daily or monthly. This must be a supported code. List of supported evaluation frequency along with description can be retrieved by passing domainType equal to 'EvaluationFrequency' to List of Values API."
                  },
                  "evaluationFrequencyDescription": {
                    "maxLength": 1000,
                    "type": "string",
                    "description": "Description of evaluation frequency.",
                    "readOnly": true,
                    "example": "Weekly"
                  },
                  "processDate": {
                    "type": "string",
                    "description": "Process date.",
                    "format": "date",
                    "example": "2018-09-01"
                  },
                  "effectiveFromDate": {
                    "type": "string",
                    "description": "Scheme effective date.",
                    "format": "date",
                    "example": "2018-09-01"
                  },
                  "effectiveToDate": {
                    "type": "string",
                    "description": "Date till which scheme is valid.",
                    "format": "date",
                    "example": "2020-09-01"
                  },
                  "runTypeCode": {
                    "enum": [
                      "ADH",
                      "REV",
                      "SCH",
                      "FCY"
                    ],
                    "type": "string",
                    "description": "Specifies run type applicable for the particular run of the scheme. This must be a supported code. List of supported run type along with description can be retrieved by passing domainType equal to 'RunType' to List of Values API."
                  },
                  "runTypeDescription": {
                    "maxLength": 1000,
                    "type": "string",
                    "description": "Description of run type.",
                    "example": "Adhoc"
                  },
                  "workflowStatusCode": {
                    "enum": [
                      "APPR",
                      "PEND",
                      "PDAP",
                      "REJD",
                      "PDAI"
                    ],
                    "type": "string",
                    "description": "Specifies status of scheme. This must be a supported code. List of supported workflow status along with description can be retrieved by passing domainType equal to 'WorkFlowStatus' to List of Values API."
                  },
                  "workflowStatusDescription": {
                    "maxLength": 1000,
                    "type": "string",
                    "description": "Description of workflow status.",
                    "example": "Approved"
                  }
                },
                "description": "This object has attributes representing scheme evaluation details."
              },
              "SchemeEvaluationResults": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SchemeEvaluationResult"
                }
              },
              "EntityEvaluationResults": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EntityEvaluation"
                }
              },
              "EntityEvaluation": {
                "type": "object",
                "properties": {
                  "schemeCode": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Unique identifier of scheme.",
                    "example": "MPB2018"
                  },
                  "schemeName": {
                    "maxLength": 150,
                    "type": "string",
                    "description": "Name given to scheme.",
                    "example": "MONTHLY PERFORMANCE BONUS FOR 2018"
                  },
                  "schemeTypeCode": {
                    "enum": [
                      "INC",
                      "CON"
                    ],
                    "type": "string",
                    "description": "Type of scheme whether its incentive scheme or Contest. This must be a supported code. List of supported scheme type along with description can be retrieved by passing domainType equal to 'SchemeType' to List of Values API."
                  },
                  "entityCode": {
                    "maxLength": 30,
                    "type": "string",
                    "description": "Unique identifier of entity.",
                    "example": "AGY1837"
                  },
                  "entityName": {
                    "maxLength": 300,
                    "type": "string",
                    "description": "Name of entity.",
                    "example": "ABC Insurance Co."
                  },
                  "benefitTypeCode": {
                    "enum": [
                      "CASH",
                      "GIFT",
                      "CERT",
                      "POIN",
                      "TOUR"
                    ],
                    "type": "string",
                    "description": "Benefit type specifies whether gift or cash will be given if eligible for given scheme. This must be a supported code. List of supported benefit type along with description can be retrieved by passing domainType equal to 'BenefitType' to List of Values API."
                  },
                  "benefitTypeDescription": {
                    "maxLength": 1000,
                    "type": "string",
                    "description": "Description of Benefit type.",
                    "example": "Cash"
                  },
                  "benefitValue": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "Benefit value in amount or string displays the result value evaluated by the system.",
                    "example": "Excellent"
                  },
                  "lockInValue": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "Lock in value in amount or string if value to be locked for given scheme.",
                    "example": "Excellent"
                  },
                  "finalValue": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "Final value of scheme in string.",
                    "example": "Excellent"
                  },
                  "entityStatusCode": {
                    "enum": [
                      "ACT",
                      "SUSP",
                      "TERM",
                      "INNOTICE"
                    ],
                    "type": "string",
                    "description": "status of an entity. This must be a supported code. List of supported entity status along with description can be retrieved by passing domainType equal to 'EntityStatus' to List of Values API."
                  },
                  "entityStatusDescription": {
                    "maxLength": 1000,
                    "type": "string",
                    "description": "Description of entity status.",
                    "example": "Active"
                  },
                  "evaluationStatusCode": {
                    "enum": [
                      "DRT",
                      "LOCIN",
                      "EDTLOCIN",
                      "FNL",
                      "EXLD",
                      "CRBENF"
                    ],
                    "type": "string",
                    "description": "Entity evaluation status whether its in draft or finalize state.  This must be a supported code. List of supported evaluation status along with description can be retrieved by passing domainType equal to 'EntityEvaluationStatus' to List of Values API."
                  },
                  "evaluationStatusDescription": {
                    "maxLength": 1000,
                    "type": "string",
                    "description": "Description of evaluation status.",
                    "example": "Draft"
                  },
                  "actionCode": {
                    "enum": [
                      "CRBENF",
                      "FNL",
                      "EDTLOCIN",
                      "LOCIN",
                      "DRT",
                      "EXLD"
                    ],
                    "type": "string",
                    "description": "Specifies what action to be performed on given record driven by rule.  This must be a supported code. List of supported action code along with description can be retrieved by passing domainType equal to 'Actions' to List of Values API."
                  },
                  "actionDescription": {
                    "maxLength": 1000,
                    "type": "string",
                    "description": "Description of action.",
                    "example": "Credit Benefit"
                  },
                  "outcome": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "User defined outcome code to indicate qualified, not qualified etc.",
                    "example": "Qualified"
                  },
                  "outcomeReason": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "Reason of quailification or non-qualification.",
                    "example": "Policy Count Below Par"
                  },
                  "remarks": {
                    "maxLength": 1024,
                    "type": "string",
                    "description": "Sample Text."
                  }
                },
                "description": "This object has attributes representing evaluation of any scheme at entity level."
              },
              "EntityPortfolioDetails": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EntityPortfolioResponse"
                }
              },
              "BenefitSummary": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EntityBenefitSummaryResponse"
                }
              },
              "KpiResults": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/KpiResultsResponse"
                }
              },
              "BenefitDetails": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EntityBenefitDetailsResponse"
                }
              },
              "KpiResultsResponse": {
                "type": "object",
                "properties": {
                  "kpiCode": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Unique identifier of KPI.",
                    "example": "MPB2018"
                  },
                  "kpiName": {
                    "maxLength": 500,
                    "type": "string",
                    "description": "Name given to KPI.",
                    "example": "KPI_GRP_EFF"
                  },
                  "kpiBasisCode": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "KPI basic code.",
                    "example": "PROD"
                  },
                  "kpiType": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "KPI basic code.",
                    "example": "PRS"
                  },
                  "kpiValue": {
                    "type": "number",
                    "description": "Calculated KPI Amount.",
                    "format": "double",
                    "example": 100.0
                  },
                  "adjustedKpiValue": {
                    "type": "number",
                    "description": "Adjusted KPI Amount.",
                    "format": "double",
                    "example": 100.0
                  },
                  "diffKpiValue": {
                    "type": "number",
                    "description": "Diff KPI Amount.",
                    "format": "double",
                    "example": 100.0
                  },
                  "remarks": {
                    "maxLength": 200,
                    "type": "string",
                    "description": "Remarks if Any.",
                    "example": "PROD"
                  },
                  "kpiBasisDesc": {
                    "maxLength": 100,
                    "type": "string",
                    "description": "Kpi Basis Description",
                    "example": "Premium"
                  },
                  "kpiSubBasis": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Kpi Sub Basis",
                    "example": "CVRG"
                  },
                  "kpiSubBasisDesc": {
                    "maxLength": 100,
                    "type": "string",
                    "description": "Kpi Sub Basis Description",
                    "example": "Coverage"
                  },
                  "kpiCategory": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Kpi Category",
                    "example": "GROW"
                  },
                  "kpiCategoryDesc": {
                    "maxLength": 100,
                    "type": "string",
                    "description": "Kpi Category Description",
                    "example": "Growth"
                  },
                  "kpiValueType": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "Kpi value type",
                    "example": "46.76"
                  }
                },
                "description": "This object has attributes representing KPI details."
              },
              "EntityBenefitDetailsResponse": {
                "type": "object",
                "properties": {
                  "evaluationFromDate": {
                    "type": "string",
                    "description": "Evaluation from Date",
                    "format": "date",
                    "example": "2021-01-01"
                  },
                  "evaluationToDate": {
                    "type": "string",
                    "description": "Evaluation to Date",
                    "format": "date",
                    "example": "2021-01-01"
                  },
                  "outcome": {
                    "maxLength": 100,
                    "type": "string",
                    "description": "Outcome",
                    "example": "Qualified"
                  },
                  "outcomeReason": {
                    "maxLength": 100,
                    "type": "string",
                    "description": "Outcome Reason",
                    "example": "Annualised Premium Below Par"
                  },
                  "benefitAmount": {
                    "maxLength": 10,
                    "type": "number",
                    "description": "BenefitAmount",
                    "format": "double",
                    "example": 120.5
                  },
                  "paymentFrequency": {
                    "maxLength": 100,
                    "type": "string",
                    "description": "Payment Frequency",
                    "example": "Monthly"
                  },
                  "evalFrequency": {
                    "maxLength": 100,
                    "type": "string",
                    "description": "Evaluation Frequency",
                    "example": "Monthly"
                  },
                  "lastEvalDate": {
                    "type": "string",
                    "description": "Last Evaluation Date",
                    "format": "date",
                    "example": "2021-01-01"
                  },
                  "paymentStatus": {
                    "maxLength": 100,
                    "type": "string",
                    "description": "Payment Status",
                    "example": "Paid"
                  },
                  "schemeProcessId": {
                    "type": "integer",
                    "description": "Scheme Process Id.",
                    "format": "int64",
                    "example": 32423.0
                  },
                  "schemeProcessDtlId": {
                    "type": "integer",
                    "description": "Scheme Process detail Id.",
                    "format": "int64",
                    "example": 32423.0
                  }
                },
                "description": "This object will return data of scheme details based on the criteria."
              },
              "EntityBenefitSummaryResponse": {
                "type": "object",
                "properties": {
                  "schemeCode": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Unique identifier of scheme.",
                    "example": "MPB2018"
                  },
                  "schemeName": {
                    "maxLength": 150,
                    "type": "string",
                    "description": "Name given to scheme.",
                    "example": "MONTHLY PERFORMANCE BONUS FOR 2018"
                  },
                  "effectiveFromDate": {
                    "type": "string",
                    "description": "Scheme effective date.",
                    "format": "date",
                    "example": "2018-09-01"
                  },
                  "effectiveToDate": {
                    "type": "string",
                    "description": "Date till which scheme is valid.",
                    "format": "date",
                    "example": "2020-09-01"
                  },
                  "processDate": {
                    "type": "string",
                    "description": "Date on which scheme is processed.",
                    "format": "date",
                    "example": "2020-09-01"
                  },
                  "benefitAmount": {
                    "type": "number",
                    "description": "Calculated benefit Amount.",
                    "format": "double",
                    "example": 100.0
                  }
                },
                "description": "This object has attributes representing scheme details."
              },
              "Pagination": {
                "type": "object",
                "properties": {
                  "correlationid": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "Used to identify the record cache if the pagination logic uses a server side cache.",
                    "example": "BLUSRLIST_101"
                  },
                  "pageSize": {
                    "type": "integer",
                    "description": "Number of records to be returned in a single page. API will use default value if this is not supplied",
                    "default": 10,
                    "example": 10
                  },
                  "totalRecords": {
                    "type": "integer",
                    "description": "Total number of records. This can be used by the consumer to decide the page size.",
                    "readOnly": true,
                    "example": 100
                  },
                  "pageNumber": {
                    "type": "integer",
                    "description": "Page number of the current records.",
                    "readOnly": true,
                    "example": 1
                  },
                  "lastPageNumber": {
                    "type": "integer",
                    "description": "Page number of the last page based on total records.",
                    "readOnly": true,
                    "example": 10
                  },
                  "startIndex": {
                    "type": "string",
                    "description": "Start index/ID of records in the current page. This is the start cursor of the record set representing a page.This can be continutation token to fetch the previous page.",
                    "readOnly": true,
                    "example": "u1001"
                  },
                  "endIndex": {
                    "type": "string",
                    "description": "End index/ID of records in the current page.This is the end cursor of the record set representing a page. This can be continutation token to fetch the next page.",
                    "readOnly": true,
                    "example": "u1010"
                  },
                  "links": {
                    "$ref": "#/components/schemas/PageLink"
                  }
                },
                "description": "Pagination Metada which is used to communicate pagination related fields between consumer and API implementation"
              },
              "PageLink": {
                "type": "object",
                "properties": {
                  "next": {
                    "maxLength": 150,
                    "type": "string",
                    "description": "Represents http link to access the next page",
                    "example": "http://sampledomain/version/resourcename?pageSize=10&pageNumber=2&correlationid=GUID000111"
                  },
                  "prev": {
                    "maxLength": 150,
                    "type": "string",
                    "description": "Represents http link to access the previous page",
                    "example": "http://sampledomain/version/resourcename?pageSize=10&pageNumber=1&correlationid=GUID000111"
                  },
                  "first": {
                    "maxLength": 150,
                    "type": "string",
                    "description": "Represents http link to access the first page",
                    "example": "http://sampledomain/version/resourcename?pageSize=10&pageNumber=1&correlationid=GUID000111"
                  },
                  "last": {
                    "maxLength": 150,
                    "type": "string",
                    "description": "Represents http link to access the last page",
                    "example": "http://sampledomain/version/resourcename?pageSize=10&pageNumber=10&correlationid=GUID000111"
                  }
                },
                "description": "Represents first, last, previous and next page , http links in a pagination context."
              },
              "Error": {
                "required": [
                  "message",
                  "status",
                  "statuscode"
                ],
                "type": "object",
                "properties": {
                  "statuscode": {
                    "type": "string",
                    "description": "HTTP Status code for example 200/400/500",
                    "example": "http-status-code"
                  },
                  "status": {
                    "type": "string",
                    "description": "Short status description",
                    "example": "Example status message"
                  },
                  "message": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Error_message"
                    },
                    "description": "Detailed error messages"
                  },
                  "moreinfo": {
                    "type": "string",
                    "description": "HTTP Link to more information page.",
                    "example": "http://sampledomain/errors/ERR-001"
                  }
                }
              },
              "Message": {
                "type": "object",
                "properties": {
                  "code": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "Custom message code in case of success."
                  },
                  "description": {
                    "maxLength": 1000,
                    "type": "string",
                    "description": "Custom message details in case of success."
                  }
                }
              },
              "OutstandingDueDetails": {
                "title": "OutstandingDueDetails",
                "type": "object",
                "properties": {
                  "OutstandingDues": {
                    "$ref": "#/components/schemas/OutstandingDues"
                  },
                  "pagination": {
                    "$ref": "#/components/schemas/Pagination"
                  }
                }
              },
              "HoldReleaseDueDetails": {
                "title": "HoldReleaseDueDetails",
                "type": "object",
                "properties": {
                  "HoldReleaseDues": {
                    "$ref": "#/components/schemas/HoldReleaseDues"
                  },
                  "pagination": {
                    "$ref": "#/components/schemas/Pagination"
                  }
                }
              },
              "PaymentsDetails": {
                "title": "PaymentsDetails",
                "type": "object",
                "properties": {
                  "Payments": {
                    "$ref": "#/components/schemas/Payments"
                  },
                  "pagination": {
                    "$ref": "#/components/schemas/Pagination"
                  }
                }
              },
              "PaymentDtls": {
                "title": "PaymentDtls",
                "type": "object",
                "properties": {
                  "PaymentDetails": {
                    "$ref": "#/components/schemas/PaymentDetails"
                  },
                  "pagination": {
                    "$ref": "#/components/schemas/Pagination"
                  }
                }
              },
              "PaymentDetailsInformation": {
                "required": [
                  "total"
                ],
                "type": "object",
                "properties": {
                  "commission": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CommissionPayments"
                    }
                  },
                  "others": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/OtherPayments"
                    }
                  },
                  "total": {
                    "$ref": "#/components/schemas/TotalPayments"
                  }
                },
                "description": "Payment details object"
              },
              "PaymentTransactionsResponse": {
                "type": "object",
                "properties": {
                  "transactionDate": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Payment Transaction Date",
                    "format": "date",
                    "example": "2021-01-01"
                  },
                  "policyNo": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "Policy number",
                    "example": "PO475743"
                  },
                  "phClientId": {
                    "maxLength": 50,
                    "type": "integer",
                    "description": "Policy Client ID",
                    "example": 123456
                  },
                  "phName": {
                    "maxLength": 300,
                    "type": "string",
                    "description": "Policy Holder Name",
                    "example": "ANDREWS AGENCY INC"
                  },
                  "amount": {
                    "maxLength": 10,
                    "type": "number",
                    "description": "Payment amount",
                    "format": "double",
                    "example": 120.5
                  },
                  "srcEntityCode": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Entity code",
                    "example": "AGY11895"
                  },
                  "srcEntityName": {
                    "maxLength": 150,
                    "type": "string",
                    "description": "Entity Name",
                    "example": "ABC Insurance Co"
                  },
                  "commTypeCode": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Compensation Subtype code",
                    "example": "SC"
                  },
                  "commTypeDesc": {
                    "maxLength": 150,
                    "type": "string",
                    "description": "Compensation Subtype description",
                    "example": "Standard Commission"
                  },
                  "accrualBasisCode": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Accrual Basis Code",
                    "example": "Accrual Basis Code"
                  },
                  "accrualBasisDesc": {
                    "maxLength": 150,
                    "type": "string",
                    "description": "Accrual Basis Description",
                    "example": "Accrual Basis Description"
                  },
                  "lob": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Line Of Business",
                    "example": "HO"
                  },
                  "lobDesc": {
                    "maxLength": 150,
                    "type": "string",
                    "description": "LOB Description",
                    "example": "Group Life"
                  }
                },
                "description": "This object will return data of payment transactions based on the criteria."
              },
              "AdjustmentDetails": {
                "title": "AdjustmentDetails",
                "type": "object",
                "properties": {
                  "Adjustments": {
                    "$ref": "#/components/schemas/Adjustments"
                  },
                  "pagination": {
                    "$ref": "#/components/schemas/Pagination"
                  }
                }
              },
              "inline_response_200": {
                "properties": {
                  "policyCommissionDetail": {
                    "$ref": "#/components/schemas/PolicyCommissionDetail"
                  }
                }
              },
              "Commissions": {
                "title": "Commissions",
                "type": "object",
                "properties": {
                  "CommissionDetails": {
                    "$ref": "#/components/schemas/CommissionDetails"
                  },
                  "pagination": {
                    "$ref": "#/components/schemas/Pagination"
                  }
                }
              },
              "SchemesDetails": {
                "title": "SchemesDetails",
                "type": "object",
                "properties": {
                  "Schemes": {
                    "$ref": "#/components/schemas/Schemes"
                  },
                  "pagination": {
                    "$ref": "#/components/schemas/Pagination"
                  }
                }
              },
              "SchemesEvaluationDetails": {
                "title": "SchemesEvaluationDetails",
                "type": "object",
                "properties": {
                  "SchemeEvaluationResults": {
                    "$ref": "#/components/schemas/SchemeEvaluationResults"
                  },
                  "pagination": {
                    "$ref": "#/components/schemas/Pagination"
                  }
                }
              },
              "EntityEvaluationDetails": {
                "title": "EntityEvaluationDetails",
                "type": "object",
                "properties": {
                  "EntityEvaluationResults": {
                    "$ref": "#/components/schemas/EntityEvaluationResults"
                  },
                  "pagination": {
                    "$ref": "#/components/schemas/Pagination"
                  }
                }
              },
              "PolCommTransactions": {
                "title": "PolCommTransactions",
                "type": "object",
                "properties": {
                  "PolicyCommissionTransactions": {
                    "$ref": "#/components/schemas/PolicyCommissionTransactions"
                  },
                  "pagination": {
                    "$ref": "#/components/schemas/Pagination"
                  }
                }
              },
              "PolicyCommissionTransactions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PolicyCommissionResponse"
                }
              },
              "PolPaymentTransactions": {
                "title": "PolPaymentTransactions",
                "type": "object",
                "properties": {
                  "PaymentTransactions": {
                    "$ref": "#/components/schemas/PaymentTransactions"
                  },
                  "pagination": {
                    "$ref": "#/components/schemas/Pagination"
                  }
                }
              },
              "PaymentTransactions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PaymentTransactionsResponse"
                }
              },
              "PortfolioTrasactions": {
                "title": "PortfolioTrasactions",
                "type": "object",
                "properties": {
                  "EntityPortfolioDetails": {
                    "$ref": "#/components/schemas/EntityPortfolioDetails"
                  },
                  "pagination": {
                    "$ref": "#/components/schemas/Pagination"
                  }
                }
              },
              "BenefitTransactions": {
                "title": "BenefitTransactions",
                "type": "object",
                "properties": {
                  "BenefitDetails": {
                    "$ref": "#/components/schemas/BenefitDetails"
                  },
                  "pagination": {
                    "$ref": "#/components/schemas/Pagination"
                  }
                }
              },
              "BenefitSummaryTransactions": {
                "title": "BenefitSummaryTransactions",
                "type": "object",
                "properties": {
                  "BenefitSummary": {
                    "$ref": "#/components/schemas/BenefitSummary"
                  }
                }
              },
              "BenefitKPITransactions": {
                "title": "BenefitKPITransactions",
                "type": "object",
                "properties": {
                  "KpiResults": {
                    "$ref": "#/components/schemas/KpiResults"
                  }
                }
              },
              "payToAddress": {
                "type": "object",
                "properties": {
                  "Address1": {
                    "maxLength": 40,
                    "type": "string",
                    "description": "Address line 1 of address.",
                    "example": "2, Martin Road"
                  },
                  "Address2": {
                    "maxLength": 40,
                    "type": "string",
                    "description": "Address line 2 of address.",
                    "example": "Newbury"
                  },
                  "city": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "City of address.",
                    "example": "Texas"
                  },
                  "countyCode": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "County of address. This must be a supported code. List of supported county code along with description can be retrieved by passing domainType equal to 'County' to List of Values API.",
                    "example": "FL"
                  },
                  "countyDescription": {
                    "maxLength": 1000,
                    "type": "string",
                    "description": "Description of county.",
                    "readOnly": true,
                    "example": "Florida"
                  },
                  "stateCode": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "State of address. This must be a supported code. List of supported state code along with description can be retrieved by passing domainType equal to 'State' to List of Values API.",
                    "example": "TX"
                  },
                  "stateDescription": {
                    "maxLength": 1000,
                    "type": "string",
                    "description": "Description of state.",
                    "readOnly": true,
                    "example": "Texas"
                  },
                  "countryCode": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "Country of address. This must be a supported code. List of supported country code along with description can be retrieved by passing domainType equal to 'Country' to List of Values API.",
                    "example": "USA"
                  },
                  "countryDescription": {
                    "maxLength": 1000,
                    "type": "string",
                    "description": "Description of country.",
                    "readOnly": true,
                    "example": "United States"
                  },
                  "zipCode": {
                    "maxLength": 15,
                    "type": "string",
                    "description": "Zipcode of address.",
                    "example": "73344"
                  }
                }
              },
              "Error_message": {
                "required": [
                  "systemerrcode"
                ],
                "type": "object",
                "properties": {
                  "systemerrcode": {
                    "type": "string",
                    "description": "System/Application error code",
                    "example": "ERR-001"
                  },
                  "developer": {
                    "type": "string",
                    "description": "Verbose, plain language description of the problem for the app developer with hints about how to fix it.",
                    "example": "Message for app developer"
                  },
                  "user": {
                    "type": "string",
                    "description": "Pass this message on to the app user if needed.",
                    "example": "Message for end user"
                  }
                }
              },
              "PortfolioResponse": {
                "type": "object",
                "properties": {
                  "entityCode": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Entity Code.",
                    "example": "AGY9937"
                  },
                  "portfolioType": {
                    "maxLength": 20,
                    "type": "string",
                    "description": "Portfolio Type Received in Request",
                    "example": "NEWISSUED"
                  },
                  "portfolioTypeDescription": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "Portfolio Type Received in Request",
                    "example": "New Issued"
                  },
                  "portfolioValue": {
                    "maxLength": 30,
                    "type": "integer",
                    "description": "The resultant value of the search criteria",
                    "example": 5
                  }
                },
                "description": "This object will data of Entity returned Based on the criteria."
              },
              "CommPaymentResponse": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CommissionPayment"
                },
                "description": "This object will return summary of entity's commission and payment based on the criteria."
              },
              "CommissionPayment": {
                "required": [
                  "commPayType"
                ],
                "type": "object",
                "properties": {
                  "commPayType": {
                    "maxLength": 100,
                    "type": "string",
                    "description": "Commission Payment Type",
                    "example": "NBCOMM"
                  },
                  "commPayTypeDescription": {
                    "maxLength": 100,
                    "type": "string",
                    "description": "Commission Payment Type Description",
                    "example": "New Business Commission"
                  },
                  "commPayValue": {
                    "maxLength": 10,
                    "type": "number",
                    "description": "Commission Payment Value Received in Response",
                    "format": "double",
                    "example": 120.5
                  },
                  "currencyCode": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Currency code",
                    "example": "USD"
                  },
                  "lastPaymentDate": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Last Payment Date",
                    "example": "2020-31-08"
                  },
                  "commHoldAmount": {
                    "maxLength": 10,
                    "type": "number",
                    "description": "Commission Hold Value Received in Response",
                    "format": "double",
                    "example": 120.5
                  },
                  "commPayableAmount": {
                    "maxLength": 10,
                    "type": "number",
                    "description": "Commission Payable Value Received in Response",
                    "format": "double",
                    "example": 120.5
                  }
                },
                "description": "This is commission payment object which captures entity commission and payment summary."
              },
              "PolicyCommissionRequest": {
                "type": "object",
                "properties": {
                  "entityCode": {
                    "type": "string",
                    "description": "Entity code whose portfolio activity information is required.",
                    "example": "AGY9937"
                  },
                  "policyNo": {
                    "type": "string",
                    "description": "This will retrieve values for specified Policy Number",
                    "example": "DUEDATE_POLICY_26"
                  },
                  "commType": {
                    "type": "string",
                    "description": "This will retrieve values for specified Compensation Sub Type",
                    "example": "SC"
                  },
                  "productCode": {
                    "type": "string",
                    "description": "This will retrieve values for specified Product",
                    "example": "PROD123"
                  },
                  "searchBy": {
                    "type": "string",
                    "description": "This is the paramter for search",
                    "example": "GROUP/MEMBER"
                  },
                  "groupNo": {
                    "type": "string",
                    "description": "This will retrieve values for specified Group Number/Member Number",
                    "example": "M6500014001045"
                  },
                  "processedFromDate": {
                    "type": "string",
                    "description": "This will retrieve values for specified From date",
                    "example": "2020-01-01"
                  },
                  "processedToDate": {
                    "type": "string",
                    "description": "This will retrieve values for specified To Date",
                    "example": "2021-01-01"
                  }
                },
                "description": "This object will have  Request Criterias to fetch policy commission information."
              },
              "PolicyCommissionResponse": {
                "type": "object",
                "properties": {
                  "policyNo": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "Policy number",
                    "example": "PO475743"
                  },
                  "phName": {
                    "maxLength": 300,
                    "type": "string",
                    "description": "PolicyHolder Name",
                    "example": "ANDREWS AGENCY INC"
                  },
                  "receiptDate": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "ReceiptDate",
                    "format": "date",
                    "example": "2021-01-01"
                  },
                  "premiumAmt": {
                    "maxLength": 10,
                    "type": "number",
                    "description": "Premium amount",
                    "format": "double",
                    "example": 120.5
                  },
                  "commissionAmt": {
                    "maxLength": 10,
                    "type": "number",
                    "description": "Premium amount",
                    "format": "double",
                    "example": 120.5
                  },
                  "productCode": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Producet code",
                    "example": "MGHI"
                  },
                  "productName": {
                    "maxLength": 150,
                    "type": "string",
                    "description": "Producet Name",
                    "example": "Group HI Product - Insured"
                  },
                  "policyStatus": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Policy Status",
                    "example": "Inforce"
                  },
                  "polIssueDate": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Policy Issue Date",
                    "format": "date",
                    "example": "2021-01-01"
                  },
                  "riskCommDate": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Risk Commensement Date",
                    "format": "date",
                    "example": "2021-01-01"
                  },
                  "group": {
                    "maxLength": 150,
                    "type": "string",
                    "description": "Group Name and GroupNumber",
                    "example": "ABCGroup(G1234)"
                  },
                  "paymentFreq": {
                    "maxLength": 150,
                    "type": "string",
                    "description": "Payment Frquency Description",
                    "example": "Monthly"
                  },
                  "commType": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Compensation Sub Type",
                    "example": "SC"
                  },
                  "commTypeDesc": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "Compensation sub Type Description",
                    "example": "Standard Commission"
                  },
                  "accrualBasis": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Accrual Basis Description",
                    "example": "Written"
                  },
                  "advanceBasis": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Advance Accrual Basis",
                    "example": "Written"
                  },
                  "advanceBasisVal": {
                    "maxLength": 10,
                    "type": "number",
                    "description": "Accrual advance Value",
                    "format": "double",
                    "example": 120.5
                  },
                  "currencyCode": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Currency code",
                    "example": "USD"
                  }
                },
                "description": "This object will return data of Policy commission totals based on the criteria."
              },
              "EntityPortfolioResponse": {
                "type": "object",
                "properties": {
                  "entityCode": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Entity Code.",
                    "example": "AGY9937"
                  },
                  "entityName": {
                    "maxLength": 150,
                    "type": "string",
                    "description": "Entity Name.",
                    "example": "AllSate Agency"
                  },
                  "entityDesc": {
                    "maxLength": 150,
                    "type": "string",
                    "description": "EntityName - EntityCode",
                    "example": "AllSate Agency - AGY9937"
                  },
                  "policyNo": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "Policy number",
                    "example": "PO475743"
                  },
                  "policyHolderName": {
                    "maxLength": 300,
                    "type": "string",
                    "description": "PolicyHolder Name",
                    "example": "ANDREWS AGENCY INC"
                  },
                  "phClientId": {
                    "maxLength": 22,
                    "type": "number",
                    "description": "PhClientId",
                    "example": "12"
                  },
                  "policyIssueDate": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "PolicyIssueDate",
                    "example": "2021-01-01"
                  },
                  "stateCode": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "State Code.",
                    "example": "FL"
                  },
                  "stateDescription": {
                    "maxLength": 150,
                    "type": "string",
                    "description": "Description of state.",
                    "example": "Texas"
                  },
                  "lobCode": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "LOB code.",
                    "example": "HO"
                  },
                  "lobDescription": {
                    "maxLength": 1000,
                    "type": "string",
                    "description": "LOB description.",
                    "example": "Homeowners"
                  },
                  "productCode": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Producet code",
                    "example": "MGHI"
                  },
                  "productName": {
                    "maxLength": 150,
                    "type": "string",
                    "description": "Producet Name",
                    "example": "Group HI Product - Insured"
                  },
                  "accrualBasis": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Accrual Basis",
                    "example": "PAID"
                  },
                  "accrualBasisDescription": {
                    "maxLength": 150,
                    "type": "string",
                    "description": "Accrual Basis Description",
                    "example": "Paid"
                  },
                  "billTypeCode": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Bill type code",
                    "example": "AGYBILL"
                  },
                  "billTypeDescription": {
                    "maxLength": 150,
                    "type": "string",
                    "description": "Bill type Description",
                    "example": "Agency Bill"
                  },
                  "policyTerm": {
                    "maxLength": 22,
                    "type": "number",
                    "description": "PolicyTerm",
                    "example": "12"
                  },
                  "premium": {
                    "maxLength": 10,
                    "type": "number",
                    "description": "Premium",
                    "format": "double",
                    "example": 120.5
                  },
                  "annualPremium": {
                    "maxLength": 10,
                    "type": "number",
                    "description": "Annual Premium",
                    "format": "double",
                    "example": 120.5
                  },
                  "policyStatus": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Policy Status",
                    "example": "INFO"
                  },
                  "policyStatusDescription": {
                    "maxLength": 150,
                    "type": "string",
                    "description": "Policy Status Description",
                    "example": "Inforce"
                  },
                  "policyExpiryDate": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Policy Expiry Date",
                    "example": "2021-01-01"
                  },
                  "assignedOn": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Assigned Date",
                    "example": "2021-01-01"
                  },
                  "groupNo": {
                    "maxLength": 100,
                    "type": "string",
                    "description": "Group No",
                    "example": "MFSJ110438"
                  },
                  "showDownline": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Show Downline",
                    "example": "N"
                  },
                  "daysToExpiry": {
                    "maxLength": 22,
                    "type": "number",
                    "description": "DaysToExpiry",
                    "example": "12"
                  }
                },
                "description": "This object will return data of Policy details based on the criteria."
              },
              "CommissionPayments": {
                "type": "object",
                "properties": {
                  "typeCode": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Compensation Subtype code",
                    "example": "SC"
                  },
                  "typeDesc": {
                    "maxLength": 150,
                    "type": "string",
                    "description": "Compensation Subtype description",
                    "example": "Standard Commission"
                  },
                  "amount": {
                    "maxLength": 10,
                    "type": "number",
                    "description": "Amount",
                    "format": "double",
                    "example": 120.5
                  }
                },
                "description": "This object will return data of commission payment details."
              },
              "OtherPayments": {
                "type": "object",
                "properties": {
                  "typeCode": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Compensation Subtype code",
                    "example": "SC"
                  },
                  "typeDesc": {
                    "maxLength": 150,
                    "type": "string",
                    "description": "Compensation Subtype description",
                    "example": "Standard Commission"
                  },
                  "amount": {
                    "maxLength": 10,
                    "type": "number",
                    "description": "Amount",
                    "format": "double",
                    "example": 120.5
                  }
                },
                "description": "This object will return data of other payment details."
              },
              "TotalPayments": {
                "type": "object",
                "properties": {
                  "totalAmount": {
                    "maxLength": 10,
                    "type": "number",
                    "description": "TotalAmount",
                    "format": "double",
                    "example": 120.5
                  },
                  "totalCommAmount": {
                    "maxLength": 10,
                    "type": "number",
                    "description": "TotalCommAmount",
                    "format": "double",
                    "example": 120.5
                  },
                  "totalOthAmount": {
                    "maxLength": 10,
                    "type": "number",
                    "description": "TotalOthAmount",
                    "format": "double",
                    "example": 120.5
                  }
                },
                "description": "This object will return data of total payment details."
              },
              "AgentTotalCommResponse": {
                "type": "object",
                "properties": {
                  "totalComm": {
                    "maxLength": 30,
                    "type": "number",
                    "description": "Total commission",
                    "example": 1844.32
                  },
                  "paidComm": {
                    "maxLength": 30,
                    "type": "number",
                    "description": "Total paid commission",
                    "example": 1844.32
                  },
                  "outstandingComm": {
                    "maxLength": 30,
                    "type": "number",
                    "description": "Total outstanding commission",
                    "example": 0.0
                  },
                  "currencyCode": {
                    "maxLength": 22,
                    "type": "string",
                    "description": "Currency code",
                    "example": "USD"
                  }
                },
                "description": "This object will data of Entity returned Based on the criteria."
              },
              "Compensation-policy-policyNo-PremiumPostRequest": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Premium"
                },
                "x-apim-inline": true
              }
            }
          }
        }
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/diagnostics",
      "name": "[concat(parameters('apimServiceName'), '/applicationinsights')]",
      "dependsOn": [],
      "properties": {
        "alwaysLog": "allErrors",
        "loggerId": "[parameters('apiLoggerId').applicationinsights]",
        "httpCorrelationProtocol": "Legacy",
        "logClientIp": true,
        "sampling": {
          "samplingType": "fixed",
          "percentage": 100.0
        },
        "frontend": {
          "request": {}
        },
        "backend": {
          "request": {}
        }
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/diagnostics",
      "name": "[concat(parameters('apimServiceName'), '/azuremonitor')]",
      "dependsOn": [],
      "properties": {
        "loggerId": "[parameters('apiLoggerId').azuremonitor]",
        "logClientIp": true,
        "sampling": {
          "samplingType": "fixed",
          "percentage": 100.0
        },
        "frontend": {
          "request": {}
        },
        "backend": {
          "request": {}
        }
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/products/apis",
      "name": "[concat(parameters('apimServiceName'), '/31a8092bd7024c24b5603c96f2124b1d/3b98f0faf2684a6c825761c53bfa5668')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668')]"
      ],
      "properties": {
        "displayName": "Distribution Management",
        "description": "product giving access to Distribution Management api",
        "subscriptionRequired": true,
        "approvalRequired": false,
        "state": "published"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/3b98f0faf2684a6c825761c53bfa5668/addPaymentAdjustment')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668', '627dffa94634611330f0d910')]"
      ],
      "properties": {
        "displayName": "Create Adjustment",
        "method": "POST",
        "urlTemplate": "/compensation-adjustments/{entityCode}/adjustments",
        "description": "This operation creates payment adjustment request.",
        "templateParameters": [
          {
            "name": "entityCode",
            "description": "Unique identifier of entity.",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "request": {
          "description": "Request to create payment adjustment.",
          "headers": [],
          "queryParameters": [],
          "representations": [
            {
              "contentType": "application/json",
              "schemaId": "627dffa94634611330f0d910",
              "typeName": "Adjustment",
              "sample": "{\r\n  \"id\": 1234,\r\n  \"requestDate\": \"string\",\r\n  \"requestStatusCode\": \"APPR\",\r\n  \"requestStatusDescription\": \"Approved\",\r\n  \"remarks\": \"Sample text\",\r\n  \"requestTypeCode\": \"ADVANCE\",\r\n  \"requestTypeDescription\": \"Advance\",\r\n  \"entityCode\": \"AGY4711\",\r\n  \"entityName\": \"string\",\r\n  \"compensationTypeCode\": \"COMM\",\r\n  \"compensationTypeDescription\": \"Commission\",\r\n  \"CompensationSubTypeCode\": \"OC\",\r\n  \"amount\": 100.0,\r\n  \"frequencyCode\": \"MONTHLY\",\r\n  \"period\": 0,\r\n  \"effectiveDate\": \"2019-09-03\",\r\n  \"statusCode\": \"APPR\",\r\n  \"statusDescription\": \"Approved\",\r\n  \"narration\": \"Sample text\"\r\n}"
            }
          ]
        },
        "responses": [
          {
            "description": "Successful operation.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Adjustment",
                "sample": "{\r\n  \"id\": 1234,\r\n  \"requestDate\": \"string\",\r\n  \"requestStatusCode\": \"APPR\",\r\n  \"requestStatusDescription\": \"Approved\",\r\n  \"remarks\": \"Sample text\",\r\n  \"requestTypeCode\": \"ADVANCE\",\r\n  \"requestTypeDescription\": \"Advance\",\r\n  \"entityCode\": \"AGY4711\",\r\n  \"entityName\": \"string\",\r\n  \"compensationTypeCode\": \"COMM\",\r\n  \"compensationTypeDescription\": \"Commission\",\r\n  \"CompensationSubTypeCode\": \"OC\",\r\n  \"amount\": 100.0,\r\n  \"frequencyCode\": \"MONTHLY\",\r\n  \"period\": 0,\r\n  \"effectiveDate\": \"2019-09-03\",\r\n  \"statusCode\": \"APPR\",\r\n  \"statusDescription\": \"Approved\",\r\n  \"narration\": \"Sample text\"\r\n}"
              }
            ],
            "statusCode": 200
          },
          {
            "description": "Bad Request.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 402
          },
          {
            "description": "Server not available.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 500
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/3b98f0faf2684a6c825761c53bfa5668/deletePaymentAdjustmentById')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668', '627dffa94634611330f0d910')]"
      ],
      "properties": {
        "displayName": "Delete Adjustment",
        "method": "DELETE",
        "urlTemplate": "/compensation-adjustments/{adjustmentId}",
        "description": "This operation deletes payment adjustment request against given adjustment id.",
        "templateParameters": [
          {
            "name": "adjustmentId",
            "description": "Format - int64. This is the unique object id for payment adjustment request.",
            "type": "integer",
            "required": true,
            "values": []
          }
        ],
        "responses": [
          {
            "description": "Successful operation.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Message",
                "sample": "{\r\n  \"code\": \"string\",\r\n  \"description\": \"string\"\r\n}"
              }
            ],
            "statusCode": 200
          },
          {
            "description": "Bad Request.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 402
          },
          {
            "description": "Resource not found.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 404
          },
          {
            "description": "Server not available.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 500
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/3b98f0faf2684a6c825761c53bfa5668/getAllPaymentAdjustment')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668', '627dffa94634611330f0d910')]"
      ],
      "properties": {
        "displayName": "List Adjustment",
        "method": "GET",
        "urlTemplate": "/compensation-adjustments",
        "description": "This operation retrieves all payment adjustment requests as per query parameters.",
        "templateParameters": [],
        "request": {
          "headers": [],
          "queryParameters": [
            {
              "description": "This is the entity code to retrieve payment adjustment requests.",
              "name": "entityCode",
              "required": false,
              "type": "string"
            },
            {
              "description": "Format - date (as full-date in RFC3339). Payment adjustment inquiry from date.",
              "name": "fromDate",
              "required": false,
              "type": "string"
            },
            {
              "description": "Format - date (as full-date in RFC3339). Payment adjustment inquiry to date.",
              "name": "toDate",
              "required": false,
              "type": "string"
            },
            {
              "description": "This must be a supported code. List of supported adjustment status code along with description can be retrieved by passing domainType equal to 'AdjustmentStatus' to List of Values API.",
              "name": "statusCode",
              "required": false,
              "type": "string"
            },
            {
              "description": "Number of records to be returned in a single page. This is defaulted to 10",
              "name": "pageSize",
              "required": false,
              "type": "integer"
            },
            {
              "description": "Page (or set of the records) which is being requested.",
              "name": "pageNumber",
              "required": false,
              "type": "integer"
            },
            {
              "description": "This can be used to identify the record cache if the pagination logic uses a server side cache.",
              "name": "correlationid",
              "required": false,
              "type": "string"
            }
          ],
          "representations": []
        },
        "responses": [
          {
            "description": "Successful operation.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "AdjustmentDetails",
                "sample": "{\r\n  \"Adjustments\": [\r\n    {\r\n      \"id\": 1234,\r\n      \"requestDate\": \"string\",\r\n      \"requestStatusCode\": \"APPR\",\r\n      \"requestStatusDescription\": \"Approved\",\r\n      \"remarks\": \"Sample text\",\r\n      \"requestTypeCode\": \"ADVANCE\",\r\n      \"requestTypeDescription\": \"Advance\",\r\n      \"entityCode\": \"AGY4711\",\r\n      \"entityName\": \"string\",\r\n      \"compensationTypeCode\": \"COMM\",\r\n      \"compensationTypeDescription\": \"Commission\",\r\n      \"CompensationSubTypeCode\": \"OC\",\r\n      \"amount\": 100.0,\r\n      \"frequencyCode\": \"MONTHLY\",\r\n      \"period\": 0,\r\n      \"effectiveDate\": \"2019-09-03\",\r\n      \"statusCode\": \"APPR\",\r\n      \"statusDescription\": \"Approved\",\r\n      \"narration\": \"Sample text\"\r\n    }\r\n  ],\r\n  \"pagination\": {\r\n    \"correlationid\": \"BLUSRLIST_101\",\r\n    \"pageSize\": 10,\r\n    \"totalRecords\": 100,\r\n    \"pageNumber\": 1,\r\n    \"lastPageNumber\": 10,\r\n    \"startIndex\": \"u1001\",\r\n    \"endIndex\": \"u1010\",\r\n    \"links\": {\r\n      \"next\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=2&correlationid=GUID000111\",\r\n      \"prev\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=1&correlationid=GUID000111\",\r\n      \"first\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=1&correlationid=GUID000111\",\r\n      \"last\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=10&correlationid=GUID000111\"\r\n    }\r\n  }\r\n}"
              }
            ],
            "statusCode": 200
          },
          {
            "description": "Bad Request.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 402
          },
          {
            "description": "Resource not found.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 404
          },
          {
            "description": "Server not available.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 500
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/3b98f0faf2684a6c825761c53bfa5668/getCommissionFee')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668', '627dffa94634611330f0d910')]"
      ],
      "properties": {
        "displayName": "List Commission and Fee",
        "method": "GET",
        "urlTemplate": "/compensation-entities/commission-fee?fromDate={fromDate}",
        "description": "This operation allows to inquire commission and fee details. The details retrieved can be for a producer, for a policy and for the required period. The details listed include the premium amount, commission rate, commission amount, date of calculation and other useful information.",
        "templateParameters": [
          {
            "name": "fromDate",
            "description": "Format - date (as full-date in RFC3339). From date i.e. start date of the period for which the commission/Fee details are required to be extracted",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "request": {
          "headers": [],
          "queryParameters": [
            {
              "description": "Entity Code in DM for the entity for whom the details are to be extracted",
              "name": "entityCode",
              "required": false,
              "type": "string"
            },
            {
              "description": "National Producer Number or Unique number for the producer.",
              "name": "npn",
              "required": false,
              "type": "string"
            },
            {
              "description": "Federal Employer Identification Number",
              "name": "fein",
              "required": false,
              "type": "string"
            },
            {
              "description": "Format - date (as full-date in RFC3339). To date i.e. end date of the period for which the commission / Fee details are required to be extracted",
              "name": "toDate",
              "required": false,
              "type": "string"
            },
            {
              "description": "Policy number for whom the commission / fee details are to be extracted.",
              "name": "policyNo",
              "required": false,
              "type": "string"
            },
            {
              "name": "inquireByReceiptDate",
              "required": false,
              "type": "string"
            },
            {
              "description": "Number of records to be returned in a single page. This is defaulted to 10",
              "name": "pageSize",
              "required": false,
              "type": "integer"
            },
            {
              "description": "Page (or set of the records) which is being requested.",
              "name": "pageNumber",
              "required": false,
              "type": "integer"
            },
            {
              "description": "This can be used to identify the record cache if the pagination logic uses a server side cache.",
              "name": "correlationid",
              "required": false,
              "type": "string"
            },
            {
              "description": "Group Number in DM for the group for whom the details are to be extracted",
              "name": "groupNumber",
              "required": false,
              "type": "string"
            },
            {
              "description": "Sun Group Number in DM for the sub group for whom the details are to be extracted",
              "name": "subGroupNumber",
              "required": false,
              "type": "string"
            },
            {
              "description": "member Code in DM for the member for whom the details are to be extracted",
              "name": "member",
              "required": false,
              "type": "string"
            },
            {
              "description": "Product Code in DM for the product for whom the details are to be extracted",
              "name": "productCode",
              "required": false,
              "type": "string"
            },
            {
              "description": "Accrual basis in DM for the commission records for whom the details are to be extracted",
              "name": "accrualBasis",
              "required": false,
              "type": "string"
            },
            {
              "description": "Channel Code in DM for the commission records for whom the details are to be extracted",
              "name": "channelCode",
              "required": false,
              "type": "string"
            },
            {
              "description": "Compensation Type in DM for the commission records for whom the details are to be extracted",
              "name": "compensationType",
              "required": false,
              "type": "string"
            },
            {
              "description": "Compensation Sub Type in DM for the commission records for whom the details are to be extracted",
              "name": "compensationSubType",
              "required": false,
              "type": "string"
            },
            {
              "description": "Query Type in DM for the commission records for whom the details are to be extracted",
              "name": "queryType",
              "required": false,
              "type": "string"
            },
            {
              "description": "Lob Class in DM for the commission records for whom the details are to be extracted",
              "name": "lobClass",
              "required": false,
              "type": "string"
            }
          ],
          "representations": []
        },
        "responses": [
          {
            "description": "Successful operation.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Commissions",
                "sample": "{\r\n  \"CommissionDetails\": [\r\n    {\r\n      \"accrualAdvanceBasisCode\": \"INSTL\",\r\n      \"accrualAdvanceBasisDescription\": \"Installment\",\r\n      \"accrualAdvanceValue\": 25.0,\r\n      \"accrualBasisCode\": \"PAID\",\r\n      \"accrualBasisDescription\": \"Paid\",\r\n      \"appropriationAmount\": 1000.0,\r\n      \"appropriationDate\": \"2018-01-25\",\r\n      \"appropriationTypeCode\": \"PREMIUM\",\r\n      \"appropriationTypeDescription\": \"Premium\",\r\n      \"billTypeCode\": \"AGYBILL\",\r\n      \"billTypeDescription\": \"Agency Bill\",\r\n      \"calculationDate\": \"2018-01-25\",\r\n      \"commissionRetained\": 10.0,\r\n      \"compensationAmount\": 600.0,\r\n      \"compensationBaseRate\": 20.0,\r\n      \"compensationExceptBasisDescription\": \"Amount\",\r\n      \"compensationExceptClassCode\": \"ENHANCE\",\r\n      \"compensationExceptClassDescription\": \"Enhance\",\r\n      \"compensationExceptBasisCode\": \"AMOUNT\",\r\n      \"compensationExceptionAmount\": 250.0,\r\n      \"compensationPayableAmount\": 600.0,\r\n      \"compensationRate\": 20.0,\r\n      \"compensationSharePercentage\": 10.0,\r\n      \"compensationSubTypeCode\": \"OC\",\r\n      \"compensationSubTypeDescription\": \"Overriding Commission\",\r\n      \"compensationTypeCode\": \"COMM\",\r\n      \"compensationTypeDescription\": \"Commission\",\r\n      \"compensationExceptValue\": 10.0,\r\n      \"coverageSequence\": 545465.0,\r\n      \"coverageYearInForce\": 2.0,\r\n      \"currencyCode\": \"USD\",\r\n      \"dueDate\": \"2018-01-25\",\r\n      \"dueTypeCode\": \"PREMIUM\",\r\n      \"dueTypeDescription\": \"Premium\",\r\n      \"entityCode\": \"AGY1845\",\r\n      \"entityName\": \"ABC Insurance Co.\",\r\n      \"policyNo\": \"POL87645\",\r\n      \"policyYearInForce\": \"2\",\r\n      \"productCode\": \"PL-YDOD1\",\r\n      \"productName\": \"PL Product 1\",\r\n      \"remarks\": \"Sample Text.\",\r\n      \"totalPremiumAmount\": 1000.0,\r\n      \"groupNumber\": \"6500017\",\r\n      \"subGroupNumber\": \"65000170001\",\r\n      \"memberNumber\": \"M65000140010457\",\r\n      \"groupName\": \"AGLGroup\",\r\n      \"tranchId\": 2.0,\r\n      \"coverageProductCode\": \"PL-YDOD1\",\r\n      \"coverageProductName\": \"PL Product 1\"\r\n    }\r\n  ],\r\n  \"pagination\": {\r\n    \"correlationid\": \"BLUSRLIST_101\",\r\n    \"pageSize\": 10,\r\n    \"totalRecords\": 100,\r\n    \"pageNumber\": 1,\r\n    \"lastPageNumber\": 10,\r\n    \"startIndex\": \"u1001\",\r\n    \"endIndex\": \"u1010\",\r\n    \"links\": {\r\n      \"next\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=2&correlationid=GUID000111\",\r\n      \"prev\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=1&correlationid=GUID000111\",\r\n      \"first\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=1&correlationid=GUID000111\",\r\n      \"last\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=10&correlationid=GUID000111\"\r\n    }\r\n  }\r\n}"
              }
            ],
            "statusCode": 200
          },
          {
            "description": "Bad Request.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 402
          },
          {
            "description": "Resource not found.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 404
          },
          {
            "description": "Server not available.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 500
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/3b98f0faf2684a6c825761c53bfa5668/getPaymentDetailsById')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668', '627dffa94634611330f0d910')]"
      ],
      "properties": {
        "displayName": "List details of a Payment",
        "method": "GET",
        "urlTemplate": "/compensation-transactions/payments/{paymentId}/payment-details",
        "description": "This operation retrieves the details of a payment summary along with totals",
        "templateParameters": [
          {
            "name": "paymentId",
            "description": "Format - int64. Payment id.",
            "type": "integer",
            "required": true,
            "values": []
          }
        ],
        "responses": [
          {
            "description": "Successful operation.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "PaymentDetailsInformation",
                "sample": "{\r\n  \"commission\": [\r\n    {\r\n      \"typeCode\": \"SC\",\r\n      \"typeDesc\": \"Standard Commission\",\r\n      \"amount\": 120.5\r\n    }\r\n  ],\r\n  \"others\": [\r\n    {\r\n      \"typeCode\": \"SC\",\r\n      \"typeDesc\": \"Standard Commission\",\r\n      \"amount\": 120.5\r\n    }\r\n  ],\r\n  \"total\": {\r\n    \"totalAmount\": 120.5,\r\n    \"totalCommAmount\": 120.5,\r\n    \"totalOthAmount\": 120.5\r\n  }\r\n}"
              }
            ],
            "statusCode": 200
          },
          {
            "description": "Bad Request.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 400
          },
          {
            "description": "Resource not found.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 404
          },
          {
            "description": "Server not available.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 500
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/3b98f0faf2684a6c825761c53bfa5668/getPaymentTransactionsById')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668', '627dffa94634611330f0d910')]"
      ],
      "properties": {
        "displayName": "List details of a Payment Transactions",
        "method": "GET",
        "urlTemplate": "/compensation-transactions/{paymentId}/payment-transactions",
        "description": "This operation retrieves the details of a payment transaction",
        "templateParameters": [
          {
            "name": "paymentId",
            "description": "Format - int64. Payment id.",
            "type": "integer",
            "required": true,
            "values": []
          }
        ],
        "request": {
          "headers": [],
          "queryParameters": [
            {
              "description": "Unique identifier of commission type.",
              "name": "commissionType",
              "required": false,
              "type": "string"
            },
            {
              "description": "Unique identifier of transaction level.",
              "name": "transactionLevel",
              "required": false,
              "type": "string"
            },
            {
              "description": "Number of records to be returned in a single page. This is defaulted to 10",
              "name": "pageSize",
              "required": false,
              "type": "integer"
            },
            {
              "description": "Page (or set of the records) which is being requested.",
              "name": "pageNumber",
              "required": false,
              "type": "integer"
            },
            {
              "description": "This can be used to identify the record cache if the pagination logic uses a server side cache.",
              "name": "correlationid",
              "required": false,
              "type": "string"
            }
          ],
          "representations": []
        },
        "responses": [
          {
            "description": "Successful operation.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "PolPaymentTransactions",
                "sample": "{\r\n  \"PaymentTransactions\": [\r\n    {\r\n      \"transactionDate\": \"2021-01-01\",\r\n      \"policyNo\": \"PO475743\",\r\n      \"phClientId\": 123456,\r\n      \"phName\": \"ANDREWS AGENCY INC\",\r\n      \"amount\": 120.5,\r\n      \"srcEntityCode\": \"AGY11895\",\r\n      \"srcEntityName\": \"ABC Insurance Co\",\r\n      \"commTypeCode\": \"SC\",\r\n      \"commTypeDesc\": \"Standard Commission\",\r\n      \"accrualBasisCode\": \"Accrual Basis Code\",\r\n      \"accrualBasisDesc\": \"Accrual Basis Description\",\r\n      \"lob\": \"HO\",\r\n      \"lobDesc\": \"Group Life\"\r\n    }\r\n  ],\r\n  \"pagination\": {\r\n    \"correlationid\": \"BLUSRLIST_101\",\r\n    \"pageSize\": 10,\r\n    \"totalRecords\": 100,\r\n    \"pageNumber\": 1,\r\n    \"lastPageNumber\": 10,\r\n    \"startIndex\": \"u1001\",\r\n    \"endIndex\": \"u1010\",\r\n    \"links\": {\r\n      \"next\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=2&correlationid=GUID000111\",\r\n      \"prev\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=1&correlationid=GUID000111\",\r\n      \"first\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=1&correlationid=GUID000111\",\r\n      \"last\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=10&correlationid=GUID000111\"\r\n    }\r\n  }\r\n}"
              }
            ],
            "statusCode": 200
          },
          {
            "description": "Bad Request.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 400
          },
          {
            "description": "Resource not found.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 404
          },
          {
            "description": "Server not available.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 500
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/3b98f0faf2684a6c825761c53bfa5668/getDuesOnHold')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668', '627dffa94634611330f0d910')]"
      ],
      "properties": {
        "displayName": "List Dues On Hold",
        "method": "GET",
        "urlTemplate": "/compensation-dues/onhold",
        "description": "This operation retrieves all hold dues based on query parameters.",
        "templateParameters": [],
        "request": {
          "headers": [],
          "queryParameters": [
            {
              "description": "Unique identifier of entity.",
              "name": "entityCode",
              "required": false,
              "type": "string"
            },
            {
              "description": "Channel Code. This must be a supported code. List of supported channel code along with description can be retrieved by passing masterName equal to 'Channel' to Master API.",
              "name": "channelCode",
              "required": false,
              "type": "string"
            },
            {
              "description": "Number of records to be returned in a single page. This is defaulted to 10",
              "name": "pageSize",
              "required": false,
              "type": "integer"
            },
            {
              "description": "Page (or set of the records) which is being requested.",
              "name": "pageNumber",
              "required": false,
              "type": "integer"
            },
            {
              "description": "This can be used to identify the record cache if the pagination logic uses a server side cache.",
              "name": "correlationid",
              "required": false,
              "type": "string"
            }
          ],
          "representations": []
        },
        "responses": [
          {
            "description": "Successful operation.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "HoldReleaseDueDetails",
                "sample": "{\r\n  \"HoldReleaseDues\": [\r\n    {\r\n      \"transactionDate\": \"2018-01-25\",\r\n      \"balanceAmount\": 100.0,\r\n      \"compensationTypeCode\": \"CONALL\",\r\n      \"compensationTypeDescription\": \"string\",\r\n      \"dueDate\": \"2018-01-25\",\r\n      \"channelCode\": \"BROK\",\r\n      \"channelDescription\": \"Broker Channel\",\r\n      \"currencyCode\": \"USD\",\r\n      \"holdAmount\": 100.0,\r\n      \"releaseAmount\": 100.0,\r\n      \"payToEntityCode\": \"AGY1875\",\r\n      \"payToEntityName\": \"John Smith\",\r\n      \"coverageSeq\": 123456789.0,\r\n      \"paidToDateAmount\": 100.0,\r\n      \"policyNo\": \"POL548778\",\r\n      \"productCode\": \"WES-PAK-EST1\",\r\n      \"productName\": \"Wespak Estate Product 1\",\r\n      \"referenceTypeCode\": \"ADJUSTMENT\",\r\n      \"referenceTypeDescription\": \"Adjustment\",\r\n      \"totalPaymentAmount\": 1000.0,\r\n      \"holdReasonCode\": \"AB\",\r\n      \"holdReasonDescription\": \"Agent Blacklisted\",\r\n      \"holdDate\": \"2018-01-25\",\r\n      \"releaseReasonCode\": \"AB\",\r\n      \"releaseReasonDescription\": \"Agent Blacklisted\",\r\n      \"releaseDate\": \"2018-01-25\",\r\n      \"payableDueAmount\": 100.0\r\n    }\r\n  ],\r\n  \"pagination\": {\r\n    \"correlationid\": \"BLUSRLIST_101\",\r\n    \"pageSize\": 10,\r\n    \"totalRecords\": 100,\r\n    \"pageNumber\": 1,\r\n    \"lastPageNumber\": 10,\r\n    \"startIndex\": \"u1001\",\r\n    \"endIndex\": \"u1010\",\r\n    \"links\": {\r\n      \"next\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=2&correlationid=GUID000111\",\r\n      \"prev\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=1&correlationid=GUID000111\",\r\n      \"first\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=1&correlationid=GUID000111\",\r\n      \"last\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=10&correlationid=GUID000111\"\r\n    }\r\n  }\r\n}"
              }
            ],
            "statusCode": 200
          },
          {
            "description": "Bad Request.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 400
          },
          {
            "description": "Resource not found.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 404
          },
          {
            "description": "Server not available.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 500
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/3b98f0faf2684a6c825761c53bfa5668/getReleasedDues')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668', '627dffa94634611330f0d910')]"
      ],
      "properties": {
        "displayName": "List Dues Released",
        "method": "GET",
        "urlTemplate": "/compensation-dues/released",
        "description": "This operation retrieves released dues based on query parameters.",
        "templateParameters": [],
        "request": {
          "headers": [],
          "queryParameters": [
            {
              "description": "Unique identifier of entity.",
              "name": "entityCode",
              "required": false,
              "type": "string"
            },
            {
              "description": "Channel Code. This must be a supported code. List of supported channel code along with description can be retrieved by passing masterName equal to 'Channel' to Master API.",
              "name": "channelCode",
              "required": false,
              "type": "string"
            },
            {
              "description": "Format - date (as full-date in RFC3339). Date from which released dues to be fetched.",
              "name": "fromDate",
              "required": false,
              "type": "string"
            },
            {
              "description": "Format - date (as full-date in RFC3339). Date up to which released dues to be fetched.",
              "name": "toDate",
              "required": false,
              "type": "string"
            },
            {
              "description": "Number of records to be returned in a single page. This is defaulted to 10",
              "name": "pageSize",
              "required": false,
              "type": "integer"
            },
            {
              "description": "Page (or set of the records) which is being requested.",
              "name": "pageNumber",
              "required": false,
              "type": "integer"
            },
            {
              "description": "This can be used to identify the record cache if the pagination logic uses a server side cache.",
              "name": "correlationid",
              "required": false,
              "type": "string"
            }
          ],
          "representations": []
        },
        "responses": [
          {
            "description": "Successful operation.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "HoldReleaseDueDetails",
                "sample": "{\r\n  \"HoldReleaseDues\": [\r\n    {\r\n      \"transactionDate\": \"2018-01-25\",\r\n      \"balanceAmount\": 100.0,\r\n      \"compensationTypeCode\": \"CONALL\",\r\n      \"compensationTypeDescription\": \"string\",\r\n      \"dueDate\": \"2018-01-25\",\r\n      \"channelCode\": \"BROK\",\r\n      \"channelDescription\": \"Broker Channel\",\r\n      \"currencyCode\": \"USD\",\r\n      \"holdAmount\": 100.0,\r\n      \"releaseAmount\": 100.0,\r\n      \"payToEntityCode\": \"AGY1875\",\r\n      \"payToEntityName\": \"John Smith\",\r\n      \"coverageSeq\": 123456789.0,\r\n      \"paidToDateAmount\": 100.0,\r\n      \"policyNo\": \"POL548778\",\r\n      \"productCode\": \"WES-PAK-EST1\",\r\n      \"productName\": \"Wespak Estate Product 1\",\r\n      \"referenceTypeCode\": \"ADJUSTMENT\",\r\n      \"referenceTypeDescription\": \"Adjustment\",\r\n      \"totalPaymentAmount\": 1000.0,\r\n      \"holdReasonCode\": \"AB\",\r\n      \"holdReasonDescription\": \"Agent Blacklisted\",\r\n      \"holdDate\": \"2018-01-25\",\r\n      \"releaseReasonCode\": \"AB\",\r\n      \"releaseReasonDescription\": \"Agent Blacklisted\",\r\n      \"releaseDate\": \"2018-01-25\",\r\n      \"payableDueAmount\": 100.0\r\n    }\r\n  ],\r\n  \"pagination\": {\r\n    \"correlationid\": \"BLUSRLIST_101\",\r\n    \"pageSize\": 10,\r\n    \"totalRecords\": 100,\r\n    \"pageNumber\": 1,\r\n    \"lastPageNumber\": 10,\r\n    \"startIndex\": \"u1001\",\r\n    \"endIndex\": \"u1010\",\r\n    \"links\": {\r\n      \"next\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=2&correlationid=GUID000111\",\r\n      \"prev\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=1&correlationid=GUID000111\",\r\n      \"first\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=1&correlationid=GUID000111\",\r\n      \"last\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=10&correlationid=GUID000111\"\r\n    }\r\n  }\r\n}"
              }
            ],
            "statusCode": 200
          },
          {
            "description": "Bad Request.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 400
          },
          {
            "description": "Resource not found.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 404
          },
          {
            "description": "Server not available.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 500
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/3b98f0faf2684a6c825761c53bfa5668/getPolicyCommissionTransactions')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668', '627dffa94634611330f0d910')]"
      ],
      "properties": {
        "displayName": "List entity's policy level commission totals",
        "method": "GET",
        "urlTemplate": "/compensation-entities/commission-transactions?entityCode={entityCode}",
        "description": "This operation allows to inquire commission transaction level details based on certain search criteria. The details retrieved can be for a policy ,commission and for payment details. The details listed include the policy Number, premium amount, commission rate, commission amount, product name and other useful information.",
        "templateParameters": [
          {
            "name": "entityCode",
            "description": "This is the entity code to retrieve commission transactions.",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "request": {
          "headers": [],
          "queryParameters": [
            {
              "description": "Policy No in DM for which the details are to be extracted",
              "name": "policyNo",
              "required": false,
              "type": "string"
            },
            {
              "description": "Compensation Sub Type in DM for which the details are to be extracted",
              "name": "commType",
              "required": false,
              "type": "string"
            },
            {
              "description": "Product Code in DM for which the details are to be extracted",
              "name": "productCode",
              "required": false,
              "type": "string"
            },
            {
              "description": "Search by parameter for which the details are to be extracted",
              "name": "searchBy",
              "required": false,
              "type": "string"
            },
            {
              "description": "Group number in DM for the entity for which the details are to be extracted",
              "name": "groupNo",
              "required": false,
              "type": "string"
            },
            {
              "description": "Format - date (as full-date in RFC3339). ProcessFromDate for which the details are to be extracted",
              "name": "processedFromDate",
              "required": false,
              "type": "string"
            },
            {
              "description": "Format - date (as full-date in RFC3339). ProcessedToDate for which the details are to be extracted",
              "name": "processedToDate",
              "required": false,
              "type": "string"
            },
            {
              "description": "Number of records to be returned in a single page. This is defaulted to 10",
              "name": "pageSize",
              "required": false,
              "type": "integer"
            },
            {
              "description": "Page (or set of the records) which is being requested.",
              "name": "pageNumber",
              "required": false,
              "type": "integer"
            },
            {
              "description": "This can be used to identify the record cache if the pagination logic uses a server side cache.",
              "name": "correlationid",
              "required": false,
              "type": "string"
            }
          ],
          "representations": []
        },
        "responses": [
          {
            "description": "Successful operation.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "PolCommTransactions",
                "sample": "{\r\n  \"PolicyCommissionTransactions\": [\r\n    {\r\n      \"policyNo\": \"PO475743\",\r\n      \"phName\": \"ANDREWS AGENCY INC\",\r\n      \"receiptDate\": \"2021-01-01\",\r\n      \"premiumAmt\": 120.5,\r\n      \"commissionAmt\": 120.5,\r\n      \"productCode\": \"MGHI\",\r\n      \"productName\": \"Group HI Product - Insured\",\r\n      \"policyStatus\": \"Inforce\",\r\n      \"polIssueDate\": \"2021-01-01\",\r\n      \"riskCommDate\": \"2021-01-01\",\r\n      \"group\": \"ABCGroup(G1234)\",\r\n      \"paymentFreq\": \"Monthly\",\r\n      \"commType\": \"SC\",\r\n      \"commTypeDesc\": \"Standard Commission\",\r\n      \"accrualBasis\": \"Written\",\r\n      \"advanceBasis\": \"Written\",\r\n      \"advanceBasisVal\": 120.5,\r\n      \"currencyCode\": \"USD\"\r\n    }\r\n  ],\r\n  \"pagination\": {\r\n    \"correlationid\": \"BLUSRLIST_101\",\r\n    \"pageSize\": 10,\r\n    \"totalRecords\": 100,\r\n    \"pageNumber\": 1,\r\n    \"lastPageNumber\": 10,\r\n    \"startIndex\": \"u1001\",\r\n    \"endIndex\": \"u1010\",\r\n    \"links\": {\r\n      \"next\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=2&correlationid=GUID000111\",\r\n      \"prev\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=1&correlationid=GUID000111\",\r\n      \"first\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=1&correlationid=GUID000111\",\r\n      \"last\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=10&correlationid=GUID000111\"\r\n    }\r\n  }\r\n}"
              }
            ],
            "statusCode": 200
          },
          {
            "description": "Bad Request.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 402
          },
          {
            "description": "Resource not found.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 404
          },
          {
            "description": "Server not available.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 500
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/3b98f0faf2684a6c825761c53bfa5668/getPortfolioSummary')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668', '627dffa94634611330f0d910')]"
      ],
      "properties": {
        "displayName": "List entity's portfolio summary",
        "method": "GET",
        "urlTemplate": "/compensation-entities/{entityCode}/portfolio-summary/{portfolioType}",
        "description": "This operation allows to inquire commission and fee details. The details retrieved can be for a producer, for a policy and for the required period. The details listed include the premium amount, commission rate, commission amount, date of calculation and other useful information.",
        "templateParameters": [
          {
            "name": "entityCode",
            "description": "This is the entity code to retrieve portfolio summary.",
            "type": "string",
            "required": true,
            "values": []
          },
          {
            "name": "portfolioType",
            "description": "This is the type of request LOV code.",
            "type": "string",
            "required": true,
            "values": [
              "SERVPOLICY",
              "NEWISSUED",
              "NEWASSIGN"
            ]
          }
        ],
        "request": {
          "headers": [],
          "queryParameters": [
            {
              "description": "Duration in days",
              "name": "duration",
              "required": false,
              "type": "integer"
            }
          ],
          "representations": []
        },
        "responses": [
          {
            "description": "Successful operation.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "PortfolioResponse",
                "sample": "{\r\n  \"entityCode\": \"AGY9937\",\r\n  \"portfolioType\": \"NEWISSUED\",\r\n  \"portfolioTypeDescription\": \"New Issued\",\r\n  \"portfolioValue\": 5\r\n}"
              }
            ],
            "statusCode": 200
          },
          {
            "description": "Bad Request.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 402
          },
          {
            "description": "Resource not found.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 404
          },
          {
            "description": "Server not available.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 500
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/3b98f0faf2684a6c825761c53bfa5668/getAgentTotalCommission')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668', '627dffa94634611330f0d910')]"
      ],
      "properties": {
        "displayName": "List entity's total commission",
        "method": "POST",
        "urlTemplate": "/compensation-entities/{entityCode}/commission-total",
        "description": "This operation allows to retrieve paid and outstanding commission against the total commission based on certain search criteria so that consuming systems like portal applications can fetch the data.",
        "templateParameters": [
          {
            "name": "entityCode",
            "description": "This is the entity code to retrieve commission transactions.",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "request": {
          "description": "Request criteria to get entity's total commission.",
          "headers": [],
          "queryParameters": [],
          "representations": [
            {
              "contentType": "application/json",
              "schemaId": "627dffa94634611330f0d910",
              "typeName": "PolicyCommissionRequest",
              "sample": "{\r\n  \"entityCode\": \"AGY9937\",\r\n  \"policyNo\": \"DUEDATE_POLICY_26\",\r\n  \"commType\": \"SC\",\r\n  \"productCode\": \"PROD123\",\r\n  \"searchBy\": \"GROUP/MEMBER\",\r\n  \"groupNo\": \"M6500014001045\",\r\n  \"processedFromDate\": \"2020-01-01\",\r\n  \"processedToDate\": \"2021-01-01\"\r\n}"
            }
          ]
        },
        "responses": [
          {
            "description": "Successful operation.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "AgentTotalCommResponse",
                "sample": "{\r\n  \"totalComm\": 1844.32,\r\n  \"paidComm\": 1844.32,\r\n  \"outstandingComm\": 0.0,\r\n  \"currencyCode\": \"USD\"\r\n}"
              }
            ],
            "statusCode": 200
          },
          {
            "description": "Bad Request.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 402
          },
          {
            "description": "Resource not found.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 404
          },
          {
            "description": "Server not available.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 500
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/3b98f0faf2684a6c825761c53bfa5668/listIncentivesContestsEvaluations')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668', '627dffa94634611330f0d910')]"
      ],
      "properties": {
        "displayName": "List Evaluation for an Incentive or Contest",
        "method": "GET",
        "urlTemplate": "/compensation-incentives-contests/{schemeId}/evaluations",
        "description": "This operation retrieves incentives and contest evaluation details based on query parameters.",
        "templateParameters": [
          {
            "name": "schemeId",
            "description": "Scheme Id.",
            "type": "integer",
            "required": true,
            "values": []
          }
        ],
        "request": {
          "headers": [],
          "queryParameters": [
            {
              "description": "Unique identifier of scheme.",
              "name": "schemeCode",
              "required": false,
              "type": "string"
            },
            {
              "description": "Channel Code. This must be a supported code. List of supported channel code along with description can be retrieved by passing masterName equal to 'Channel' to Master API.",
              "name": "channelCode",
              "required": false,
              "type": "string"
            },
            {
              "description": "Format - date (as full-date in RFC3339). Scheme processed from date.",
              "name": "processedFromDate",
              "required": false,
              "type": "string"
            },
            {
              "description": "Format - date (as full-date in RFC3339). Scheme processed to date.",
              "name": "processedToDate",
              "required": false,
              "type": "string"
            },
            {
              "description": "Number of records to be returned in a single page. This is defaulted to 10",
              "name": "pageSize",
              "required": false,
              "type": "integer"
            },
            {
              "description": "Page (or set of the records) which is being requested.",
              "name": "pageNumber",
              "required": false,
              "type": "integer"
            },
            {
              "description": "This can be used to identify the record cache if the pagination logic uses a server side cache.",
              "name": "correlationid",
              "required": false,
              "type": "string"
            }
          ],
          "representations": []
        },
        "responses": [
          {
            "description": "Successful operation.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "SchemesEvaluationDetails",
                "sample": "{\r\n  \"SchemeEvaluationResults\": [\r\n    {\r\n      \"schemeCode\": \"MPB2018\",\r\n      \"schemeName\": \"MONTHLY PERFORMANCE BONUS FOR 2018\",\r\n      \"schemeTypeCode\": \"INC\",\r\n      \"channelCode\": \"BROK\",\r\n      \"channelName\": \"Broker Channel\",\r\n      \"evaluationFrequencyCode\": \"WLY\",\r\n      \"evaluationFrequencyDescription\": \"Weekly\",\r\n      \"processDate\": \"2018-09-01\",\r\n      \"effectiveFromDate\": \"2018-09-01\",\r\n      \"effectiveToDate\": \"2020-09-01\",\r\n      \"runTypeCode\": \"ADH\",\r\n      \"runTypeDescription\": \"Adhoc\",\r\n      \"workflowStatusCode\": \"APPR\",\r\n      \"workflowStatusDescription\": \"Approved\"\r\n    }\r\n  ],\r\n  \"pagination\": {\r\n    \"correlationid\": \"BLUSRLIST_101\",\r\n    \"pageSize\": 10,\r\n    \"totalRecords\": 100,\r\n    \"pageNumber\": 1,\r\n    \"lastPageNumber\": 10,\r\n    \"startIndex\": \"u1001\",\r\n    \"endIndex\": \"u1010\",\r\n    \"links\": {\r\n      \"next\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=2&correlationid=GUID000111\",\r\n      \"prev\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=1&correlationid=GUID000111\",\r\n      \"first\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=1&correlationid=GUID000111\",\r\n      \"last\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=10&correlationid=GUID000111\"\r\n    }\r\n  }\r\n}"
              }
            ],
            "statusCode": 200
          },
          {
            "description": "Bad Request.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 400
          },
          {
            "description": "Resource not found.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 404
          },
          {
            "description": "Server not available.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 500
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/3b98f0faf2684a6c825761c53bfa5668/getIncentiveKPIDetails')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668', '627dffa94634611330f0d910')]"
      ],
      "properties": {
        "displayName": "List Incentive KPI",
        "method": "GET",
        "urlTemplate": "/compensation-benefits/kpi-results/{schemeProcessDtlId}",
        "description": "This operation retrieves details of all KPIS for Incentive Process Details ID.",
        "templateParameters": [
          {
            "name": "schemeProcessDtlId",
            "description": "Format - int64. This is the scheme process detail id to retrieve KPI details.",
            "type": "integer",
            "required": true,
            "values": []
          }
        ],
        "responses": [
          {
            "description": "Successful operation.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "BenefitKPITransactions",
                "sample": "{\r\n  \"KpiResults\": [\r\n    {\r\n      \"kpiCode\": \"MPB2018\",\r\n      \"kpiName\": \"KPI_GRP_EFF\",\r\n      \"kpiBasisCode\": \"PROD\",\r\n      \"kpiType\": \"PRS\",\r\n      \"kpiValue\": 100.0,\r\n      \"adjustedKpiValue\": 100.0,\r\n      \"diffKpiValue\": 100.0,\r\n      \"remarks\": \"PROD\",\r\n      \"kpiBasisDesc\": \"Premium\",\r\n      \"kpiSubBasis\": \"CVRG\",\r\n      \"kpiSubBasisDesc\": \"Coverage\",\r\n      \"kpiCategory\": \"GROW\",\r\n      \"kpiCategoryDesc\": \"Growth\",\r\n      \"kpiValueType\": \"46.76\"\r\n    }\r\n  ]\r\n}"
              }
            ],
            "statusCode": 200
          },
          {
            "description": "Bad Request.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 400
          },
          {
            "description": "Resource not found.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 404
          },
          {
            "description": "Server not available.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 500
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/3b98f0faf2684a6c825761c53bfa5668/listIncentivesContestsEvalResult')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668', '627dffa94634611330f0d910')]"
      ],
      "properties": {
        "displayName": "List Incentive or Contest Evaluation Results",
        "method": "GET",
        "urlTemplate": "/compensation-incentives-contests/{schemeId}/evaluations/{evaluationId}/results",
        "description": "This operation retrieves incentives and contest evaluation result based on query parameters.",
        "templateParameters": [
          {
            "name": "schemeId",
            "description": "Scheme Id.",
            "type": "integer",
            "required": true,
            "values": []
          },
          {
            "name": "evaluationId",
            "description": "Evaluation Id.",
            "type": "integer",
            "required": true,
            "values": []
          }
        ],
        "request": {
          "headers": [],
          "queryParameters": [
            {
              "description": "Unique Identifier of entity.",
              "name": "entityCode",
              "required": false,
              "type": "string"
            },
            {
              "description": "Unique identifier of scheme.",
              "name": "schemeCode",
              "required": false,
              "type": "string"
            },
            {
              "description": "Format - date (as full-date in RFC3339). Scheme processed from date.",
              "name": "processedFromDate",
              "required": false,
              "type": "string"
            },
            {
              "description": "Format - date (as full-date in RFC3339). Scheme processed to date.",
              "name": "processedToDate",
              "required": false,
              "type": "string"
            },
            {
              "description": "Entity evaluation status whether its in draft or finalize state. This must be a supported code. List of supported evaluation status along with description can be retrieved by passing domainType equal to 'EntityEvaluationStatus' to List of Values API.",
              "name": "evaluationStatusCode",
              "required": false,
              "type": "string"
            },
            {
              "description": "User defined outcome code to indicate qualified, not qualified etc.",
              "name": "outcome",
              "required": false,
              "type": "string"
            },
            {
              "description": "Number of records to be returned in a single page. This is defaulted to 10",
              "name": "pageSize",
              "required": false,
              "type": "integer"
            },
            {
              "description": "Page (or set of the records) which is being requested.",
              "name": "pageNumber",
              "required": false,
              "type": "integer"
            },
            {
              "description": "This can be used to identify the record cache if the pagination logic uses a server side cache.",
              "name": "correlationid",
              "required": false,
              "type": "string"
            }
          ],
          "representations": []
        },
        "responses": [
          {
            "description": "Successful operation.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "EntityEvaluationDetails",
                "sample": "{\r\n  \"EntityEvaluationResults\": [\r\n    {\r\n      \"schemeCode\": \"MPB2018\",\r\n      \"schemeName\": \"MONTHLY PERFORMANCE BONUS FOR 2018\",\r\n      \"schemeTypeCode\": \"INC\",\r\n      \"entityCode\": \"AGY1837\",\r\n      \"entityName\": \"ABC Insurance Co.\",\r\n      \"benefitTypeCode\": \"CASH\",\r\n      \"benefitTypeDescription\": \"Cash\",\r\n      \"benefitValue\": \"Excellent\",\r\n      \"lockInValue\": \"Excellent\",\r\n      \"finalValue\": \"Excellent\",\r\n      \"entityStatusCode\": \"ACT\",\r\n      \"entityStatusDescription\": \"Active\",\r\n      \"evaluationStatusCode\": \"DRT\",\r\n      \"evaluationStatusDescription\": \"Draft\",\r\n      \"actionCode\": \"CRBENF\",\r\n      \"actionDescription\": \"Credit Benefit\",\r\n      \"outcome\": \"Qualified\",\r\n      \"outcomeReason\": \"Policy Count Below Par\",\r\n      \"remarks\": \"string\"\r\n    }\r\n  ],\r\n  \"pagination\": {\r\n    \"correlationid\": \"BLUSRLIST_101\",\r\n    \"pageSize\": 10,\r\n    \"totalRecords\": 100,\r\n    \"pageNumber\": 1,\r\n    \"lastPageNumber\": 10,\r\n    \"startIndex\": \"u1001\",\r\n    \"endIndex\": \"u1010\",\r\n    \"links\": {\r\n      \"next\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=2&correlationid=GUID000111\",\r\n      \"prev\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=1&correlationid=GUID000111\",\r\n      \"first\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=1&correlationid=GUID000111\",\r\n      \"last\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=10&correlationid=GUID000111\"\r\n    }\r\n  }\r\n}"
              }
            ],
            "statusCode": 200
          },
          {
            "description": "Bad Request.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 400
          },
          {
            "description": "Resource not found.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 404
          },
          {
            "description": "Server not available.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 500
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/3b98f0faf2684a6c825761c53bfa5668/listIncentivesContests')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668', '627dffa94634611330f0d910')]"
      ],
      "properties": {
        "displayName": "List Incentives and Contests",
        "method": "GET",
        "urlTemplate": "/compensation-incentives-contests",
        "description": "This operation retrieves incentives and contest details based on query parameters.",
        "templateParameters": [],
        "request": {
          "headers": [],
          "queryParameters": [
            {
              "description": "Type of scheme whether its a incentive scheme or Contest. This must be a supported code. List of supported scheme type along with description can be retrieved by passing domainType equal to 'SchemeType' to List of Values API.",
              "name": "schemeTypeCode",
              "required": false,
              "type": "string"
            },
            {
              "description": "Channel Code. This must be a supported code. List of supported channel code along with description can be retrieved by passing masterName equal to 'Channel' to Master API.",
              "name": "channelCode",
              "required": false,
              "type": "string"
            },
            {
              "description": "Unique Identifier of entity.",
              "name": "entityCode",
              "required": false,
              "type": "string"
            },
            {
              "description": "Number of records to be returned in a single page. This is defaulted to 10",
              "name": "pageSize",
              "required": false,
              "type": "integer"
            },
            {
              "description": "Page (or set of the records) which is being requested.",
              "name": "pageNumber",
              "required": false,
              "type": "integer"
            },
            {
              "description": "This can be used to identify the record cache if the pagination logic uses a server side cache.",
              "name": "correlationid",
              "required": false,
              "type": "string"
            }
          ],
          "representations": []
        },
        "responses": [
          {
            "description": "Successful operation.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "SchemesDetails",
                "sample": "{\r\n  \"Schemes\": [\r\n    {\r\n      \"schemeCode\": \"MPB2018\",\r\n      \"schemeName\": \"MONTHLY PERFORMANCE BONUS FOR 2018\",\r\n      \"schemeTypeCode\": \"INC\",\r\n      \"schemeTypeDescription\": \"Incentive\",\r\n      \"benefitClassCode\": \"MON\",\r\n      \"benefitClassDescription\": \"Monetary\",\r\n      \"benefitFrequencyCode\": \"ONE\",\r\n      \"benefitFrequencyDescription\": \"ONE\",\r\n      \"channelCode\": \"BROK\",\r\n      \"channelName\": \"Broker Channel\",\r\n      \"evaluationFrequencyCode\": \"WLY\",\r\n      \"evaluationFrequencyDescription\": \"Weekly\",\r\n      \"entityTypeCode\": \"BUS\",\r\n      \"entityTypeDescription\": \"string\",\r\n      \"entitySubTypeCode\": \"string\",\r\n      \"entitySubTypeDescription\": \"string\",\r\n      \"effectiveFromDate\": \"string\",\r\n      \"effectiveToDate\": \"string\"\r\n    }\r\n  ],\r\n  \"pagination\": {\r\n    \"correlationid\": \"BLUSRLIST_101\",\r\n    \"pageSize\": 10,\r\n    \"totalRecords\": 100,\r\n    \"pageNumber\": 1,\r\n    \"lastPageNumber\": 10,\r\n    \"startIndex\": \"u1001\",\r\n    \"endIndex\": \"u1010\",\r\n    \"links\": {\r\n      \"next\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=2&correlationid=GUID000111\",\r\n      \"prev\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=1&correlationid=GUID000111\",\r\n      \"first\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=1&correlationid=GUID000111\",\r\n      \"last\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=10&correlationid=GUID000111\"\r\n    }\r\n  }\r\n}"
              }
            ],
            "statusCode": 200
          },
          {
            "description": "Bad Request.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 400
          },
          {
            "description": "Resource not found.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 404
          },
          {
            "description": "Server not available.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 500
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/3b98f0faf2684a6c825761c53bfa5668/getEntityBenefitDetails')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668', '627dffa94634611330f0d910')]"
      ],
      "properties": {
        "displayName": "List of benefit results of an agent",
        "method": "GET",
        "urlTemplate": "/compensation-benefits?entityCode={entityCode}&benefitType={benefitType}&benefitCode={benefitCode}",
        "description": "This operation allows to inquire incentive schemes of an entity. The details retrieved can be for a scheme. The details listed include the scheme related and other useful information.",
        "templateParameters": [
          {
            "name": "entityCode",
            "description": "This is the entity code to retrieve scheme details.",
            "type": "string",
            "required": true,
            "values": []
          },
          {
            "name": "benefitType",
            "description": "Benefit Type can be INC, CON",
            "type": "string",
            "required": true,
            "values": []
          },
          {
            "name": "benefitCode",
            "description": "This is the benefit code.",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "request": {
          "headers": [],
          "queryParameters": [
            {
              "description": "Number of records to be returned in a single page. This is defaulted to 10",
              "name": "pageSize",
              "required": false,
              "type": "integer"
            },
            {
              "description": "Page (or set of the records) which is being requested.",
              "name": "pageNumber",
              "required": false,
              "type": "integer"
            },
            {
              "description": "This can be used to identify the record cache if the pagination logic uses a server side cache.",
              "name": "correlationid",
              "required": false,
              "type": "string"
            }
          ],
          "representations": []
        },
        "responses": [
          {
            "description": "Successful operation.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "BenefitTransactions",
                "sample": "{\r\n  \"BenefitDetails\": [\r\n    {\r\n      \"evaluationFromDate\": \"2021-01-01\",\r\n      \"evaluationToDate\": \"2021-01-01\",\r\n      \"outcome\": \"Qualified\",\r\n      \"outcomeReason\": \"Annualised Premium Below Par\",\r\n      \"benefitAmount\": 120.5,\r\n      \"paymentFrequency\": \"Monthly\",\r\n      \"evalFrequency\": \"Monthly\",\r\n      \"lastEvalDate\": \"2021-01-01\",\r\n      \"paymentStatus\": \"Paid\",\r\n      \"schemeProcessId\": 32423.0,\r\n      \"schemeProcessDtlId\": 32423.0\r\n    }\r\n  ],\r\n  \"pagination\": {\r\n    \"correlationid\": \"BLUSRLIST_101\",\r\n    \"pageSize\": 10,\r\n    \"totalRecords\": 100,\r\n    \"pageNumber\": 1,\r\n    \"lastPageNumber\": 10,\r\n    \"startIndex\": \"u1001\",\r\n    \"endIndex\": \"u1010\",\r\n    \"links\": {\r\n      \"next\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=2&correlationid=GUID000111\",\r\n      \"prev\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=1&correlationid=GUID000111\",\r\n      \"first\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=1&correlationid=GUID000111\",\r\n      \"last\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=10&correlationid=GUID000111\"\r\n    }\r\n  }\r\n}"
              }
            ],
            "statusCode": 200
          },
          {
            "description": "Bad Request.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 402
          },
          {
            "description": "Resource not found.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 404
          },
          {
            "description": "Server not available.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 500
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/3b98f0faf2684a6c825761c53bfa5668/getEntityPortfolio')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668', '627dffa94634611330f0d910')]"
      ],
      "properties": {
        "displayName": "List of policies being serviced by the entity",
        "method": "GET",
        "urlTemplate": "/compensation-entities/{entityCode}/entity-portfolio/{portfolioType}",
        "description": "This operation allows to inquire policies being serviced by the entity. The details retrieved can be for a policy and for the required period. The details listed include the policy related and other useful information.",
        "templateParameters": [
          {
            "name": "entityCode",
            "description": "This is the entity code to retrieve portfolio summary.",
            "type": "string",
            "required": true,
            "values": []
          },
          {
            "name": "portfolioType",
            "description": "This is the type of request LOV code.",
            "type": "string",
            "required": true,
            "values": [
              "SERVPOLICY",
              "NEWISSUED",
              "NEWASSIGN"
            ]
          }
        ],
        "request": {
          "headers": [],
          "queryParameters": [
            {
              "description": "Format - date (as full-date in RFC3339). IssueFromDate for which the details are to be extracted",
              "name": "policyIssueFromDate",
              "required": false,
              "type": "string"
            },
            {
              "description": "Format - date (as full-date in RFC3339). IssueToDate for which the details are to be extracted",
              "name": "policyIssueToDate",
              "required": false,
              "type": "string"
            },
            {
              "description": "This is the show downline option.",
              "name": "showDownline",
              "required": false,
              "type": "string"
            },
            {
              "description": "This is the policy no to retrieve portfolio transactions.",
              "name": "policyNo",
              "required": false,
              "type": "string"
            },
            {
              "description": "This is the product code to retrieve portfolio transactions.",
              "name": "productCode",
              "required": false,
              "type": "string"
            },
            {
              "description": "This is the group number to retrieve portfolio transactions.",
              "name": "groupNo",
              "required": false,
              "type": "string"
            },
            {
              "description": "Number of records to be returned in a single page. This is defaulted to 10",
              "name": "pageSize",
              "required": false,
              "type": "integer"
            },
            {
              "description": "Duration in days",
              "name": "duration",
              "required": false,
              "type": "integer"
            },
            {
              "description": "Page (or set of the records) which is being requested.",
              "name": "pageNumber",
              "required": false,
              "type": "integer"
            },
            {
              "description": "This can be used to identify the record cache if the pagination logic uses a server side cache.",
              "name": "correlationid",
              "required": false,
              "type": "string"
            }
          ],
          "representations": []
        },
        "responses": [
          {
            "description": "Successful operation.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "PortfolioTrasactions",
                "sample": "{\r\n  \"EntityPortfolioDetails\": [\r\n    {\r\n      \"entityCode\": \"AGY9937\",\r\n      \"entityName\": \"AllSate Agency\",\r\n      \"entityDesc\": \"AllSate Agency - AGY9937\",\r\n      \"policyNo\": \"PO475743\",\r\n      \"policyHolderName\": \"ANDREWS AGENCY INC\",\r\n      \"phClientId\": \"12\",\r\n      \"policyIssueDate\": \"2021-01-01\",\r\n      \"stateCode\": \"FL\",\r\n      \"stateDescription\": \"Texas\",\r\n      \"lobCode\": \"HO\",\r\n      \"lobDescription\": \"Homeowners\",\r\n      \"productCode\": \"MGHI\",\r\n      \"productName\": \"Group HI Product - Insured\",\r\n      \"accrualBasis\": \"PAID\",\r\n      \"accrualBasisDescription\": \"Paid\",\r\n      \"billTypeCode\": \"AGYBILL\",\r\n      \"billTypeDescription\": \"Agency Bill\",\r\n      \"policyTerm\": \"12\",\r\n      \"premium\": 120.5,\r\n      \"annualPremium\": 120.5,\r\n      \"policyStatus\": \"INFO\",\r\n      \"policyStatusDescription\": \"Inforce\",\r\n      \"policyExpiryDate\": \"2021-01-01\",\r\n      \"assignedOn\": \"2021-01-01\",\r\n      \"groupNo\": \"MFSJ110438\",\r\n      \"showDownline\": \"N\",\r\n      \"daysToExpiry\": \"12\"\r\n    }\r\n  ],\r\n  \"pagination\": {\r\n    \"correlationid\": \"BLUSRLIST_101\",\r\n    \"pageSize\": 10,\r\n    \"totalRecords\": 100,\r\n    \"pageNumber\": 1,\r\n    \"lastPageNumber\": 10,\r\n    \"startIndex\": \"u1001\",\r\n    \"endIndex\": \"u1010\",\r\n    \"links\": {\r\n      \"next\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=2&correlationid=GUID000111\",\r\n      \"prev\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=1&correlationid=GUID000111\",\r\n      \"first\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=1&correlationid=GUID000111\",\r\n      \"last\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=10&correlationid=GUID000111\"\r\n    }\r\n  }\r\n}"
              }
            ],
            "statusCode": 200
          },
          {
            "description": "Bad Request.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 402
          },
          {
            "description": "Resource not found.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 404
          },
          {
            "description": "Server not available.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 500
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/3b98f0faf2684a6c825761c53bfa5668/getEntityOutstandingDues')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668', '627dffa94634611330f0d910')]"
      ],
      "properties": {
        "displayName": "List Outstanding Dues",
        "method": "GET",
        "urlTemplate": "/compensation-dues/outstanding",
        "description": "This operation retrieves outstanding dues based on query parameters.",
        "templateParameters": [],
        "request": {
          "headers": [],
          "queryParameters": [
            {
              "description": "Unique identifier of entity.",
              "name": "entityCode",
              "required": false,
              "type": "string"
            },
            {
              "description": "Compensation Type. This must be a supported code. List of supported compensation type along with description can be retrieved by passing domainType equal to 'PaymentHead' to List of Values API.",
              "name": "compensationTypeCode",
              "required": false,
              "type": "string"
            },
            {
              "description": "Compensation Type. This must be a supported code. List of supported compensation type along with description can be retrieved by passing domainType equal to 'PaymentType' to List of Values API.",
              "name": "compensationSubTypeCode",
              "required": false,
              "type": "string"
            },
            {
              "description": "Policy No.",
              "name": "policyNo",
              "required": false,
              "type": "string"
            },
            {
              "description": "Number of records to be returned in a single page. This is defaulted to 10",
              "name": "pageSize",
              "required": false,
              "type": "integer"
            },
            {
              "description": "Page (or set of the records) which is being requested.",
              "name": "pageNumber",
              "required": false,
              "type": "integer"
            },
            {
              "description": "This can be used to identify the record cache if the pagination logic uses a server side cache.",
              "name": "correlationid",
              "required": false,
              "type": "string"
            }
          ],
          "representations": []
        },
        "responses": [
          {
            "description": "Successful operation.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "OutstandingDueDetails",
                "sample": "{\r\n  \"OutstandingDues\": [\r\n    {\r\n      \"accrualBasisCode\": \"PAID\",\r\n      \"accrualBasisDescription\": \"Paid\",\r\n      \"adjustmentRequestTypeCode\": \"ADVANCE\",\r\n      \"adjustmentRequestTypeDescription\": \"Paid\",\r\n      \"balanceAmount\": 100.0,\r\n      \"billTypeCode\": \"AGYBILL\",\r\n      \"billTypeDescription\": \"Agency Bill\",\r\n      \"compensationSubTypeCode\": \"OC\",\r\n      \"compensationSubTypeDescription\": \"Overriding Commission\",\r\n      \"compensationTypeCode\": \"COMM\",\r\n      \"compensationTypeDescription\": \"Commission\",\r\n      \"dueDate\": \"string\",\r\n      \"channelCode\": \"BROK\",\r\n      \"channelDescription\": \"Broker Channel\",\r\n      \"currencyCode\": \"USD\",\r\n      \"payToEntityCode\": \"AGY1875\",\r\n      \"payToEntityName\": \"John Smith\",\r\n      \"scheduleCutOffDate\": \"2018-01-25\",\r\n      \"coverageSeq\": 123456789.0,\r\n      \"paidToDateAmount\": 100.0,\r\n      \"policyNo\": \"POL548778\",\r\n      \"productCode\": \"WES-PAK-EST1\",\r\n      \"productName\": \"Wespak Estate Product 1\",\r\n      \"payableDueAmount\": 100.0,\r\n      \"referenceTypeCode\": \"ADJUSTMENT\",\r\n      \"referenceTypeDescription\": \"Adjustment\",\r\n      \"remarks\": \"Adjustment is done because of incorrect compensation calculated.\",\r\n      \"schedulePaymentDate\": \"2018-01-25\",\r\n      \"sourceEntityCode\": \"AGY1875\",\r\n      \"sourceEntityName\": \"John Smith\",\r\n      \"totalPaymentAmount\": 1000.0,\r\n      \"holdAmount\": 100.0,\r\n      \"transactionDate\": \"2018-01-25\"\r\n    }\r\n  ],\r\n  \"pagination\": {\r\n    \"correlationid\": \"BLUSRLIST_101\",\r\n    \"pageSize\": 10,\r\n    \"totalRecords\": 100,\r\n    \"pageNumber\": 1,\r\n    \"lastPageNumber\": 10,\r\n    \"startIndex\": \"u1001\",\r\n    \"endIndex\": \"u1010\",\r\n    \"links\": {\r\n      \"next\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=2&correlationid=GUID000111\",\r\n      \"prev\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=1&correlationid=GUID000111\",\r\n      \"first\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=1&correlationid=GUID000111\",\r\n      \"last\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=10&correlationid=GUID000111\"\r\n    }\r\n  }\r\n}"
              }
            ],
            "statusCode": 200
          },
          {
            "description": "Bad Request.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 400
          },
          {
            "description": "Server not available.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 500
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/3b98f0faf2684a6c825761c53bfa5668/getEntityPaymentDetails')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668', '627dffa94634611330f0d910')]"
      ],
      "properties": {
        "displayName": "List Payments",
        "method": "GET",
        "urlTemplate": "/compensation-transactions/payments?fromDate={fromDate}&toDate={toDate}",
        "description": "This operation retrieves payment details against a producer within a specified duration. It provides the paid amount and the instrument details for each payment.",
        "templateParameters": [
          {
            "name": "fromDate",
            "description": "Format - date (as full-date in RFC3339). Payment inquiry from date",
            "type": "string",
            "required": true,
            "values": []
          },
          {
            "name": "toDate",
            "description": "Format - date (as full-date in RFC3339). Payment inquiry to date",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "request": {
          "headers": [],
          "queryParameters": [
            {
              "description": "Unique identifier of entity.",
              "name": "entityCode",
              "required": false,
              "type": "string"
            },
            {
              "description": "National Producer Number or Unique number for the producer.",
              "name": "npn",
              "required": false,
              "type": "string"
            },
            {
              "description": "Federal Employer Identification Number",
              "name": "fein",
              "required": false,
              "type": "string"
            },
            {
              "description": "Payment status. This must be a supported code. List of supported payout status along with description can be retrieved by passing domainType equal to 'PayoutStatus' to List of Values API.",
              "name": "statusCode",
              "required": false,
              "type": "string"
            },
            {
              "description": "Inquiry by process date",
              "name": "inquireByProcessDate",
              "required": false,
              "type": "string"
            },
            {
              "description": "Number of records to be returned in a single page. This is defaulted to 10",
              "name": "pageSize",
              "required": false,
              "type": "integer"
            },
            {
              "description": "Page (or set of the records) which is being requested.",
              "name": "pageNumber",
              "required": false,
              "type": "integer"
            },
            {
              "description": "This can be used to identify the record cache if the pagination logic uses a server side cache.",
              "name": "correlationid",
              "required": false,
              "type": "string"
            }
          ],
          "representations": []
        },
        "responses": [
          {
            "description": "Successful operation.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "PaymentsDetails",
                "sample": "{\r\n  \"Payments\": [\r\n    {\r\n      \"id\": 123456789.0,\r\n      \"channelCode\": \"BROK\",\r\n      \"channelDescription\": \"Broker Channel\",\r\n      \"currencyCode\": \"USD\",\r\n      \"financePaidDate\": \"2018-01-25\",\r\n      \"financeReferenceNo\": \"5454\",\r\n      \"narration\": \"Payment for Incentive First Year Growth Bonus for period ending 2017-03-01.\",\r\n      \"paymentRejectReasonCode\": \"INBD\",\r\n      \"paymentRejectReasonDescription\": \"Incorrect bank details\",\r\n      \"emailId\": \"john.smith@gmail.com\",\r\n      \"payToEntityCode\": \"AGY1875\",\r\n      \"payToEntityName\": \"John Smith\",\r\n      \"paymentModeCode\": \"CHQ\",\r\n      \"paymentModeDescription\": \"Cheque\",\r\n      \"paymentTypeCode\": \"OC\",\r\n      \"paymentTypeDescription\": \"Overriding Commission\",\r\n      \"paymentSubTypeCode\": \"NEWBUS\",\r\n      \"paymentSubTypeDescription\": \"New Business\",\r\n      \"payoutStatusCode\": \"PAID\",\r\n      \"payoutStatusDescription\": \"Paid\",\r\n      \"processDateTime\": \"2018-01-25\",\r\n      \"scheduleCutOffDate\": \"2018-01-25\",\r\n      \"totalAmount\": 1000.0,\r\n      \"bankCode\": \"JPM\",\r\n      \"bankName\": \"JPMorgan Chase\",\r\n      \"accountNo\": \"4354354\",\r\n      \"tokenId\": \"4354354\",\r\n      \"routingNumber\": \"4354354\",\r\n      \"payoutProcessFinalId\": 32423.0,\r\n      \"payToAddress\": {\r\n        \"Address1\": \"2, Martin Road\",\r\n        \"Address2\": \"Newbury\",\r\n        \"city\": \"Texas\",\r\n        \"countyCode\": \"FL\",\r\n        \"countyDescription\": \"Florida\",\r\n        \"stateCode\": \"TX\",\r\n        \"stateDescription\": \"Texas\",\r\n        \"countryCode\": \"USA\",\r\n        \"countryDescription\": \"United States\",\r\n        \"zipCode\": \"73344\"\r\n      }\r\n    }\r\n  ],\r\n  \"pagination\": {\r\n    \"correlationid\": \"BLUSRLIST_101\",\r\n    \"pageSize\": 10,\r\n    \"totalRecords\": 100,\r\n    \"pageNumber\": 1,\r\n    \"lastPageNumber\": 10,\r\n    \"startIndex\": \"u1001\",\r\n    \"endIndex\": \"u1010\",\r\n    \"links\": {\r\n      \"next\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=2&correlationid=GUID000111\",\r\n      \"prev\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=1&correlationid=GUID000111\",\r\n      \"first\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=1&correlationid=GUID000111\",\r\n      \"last\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=10&correlationid=GUID000111\"\r\n    }\r\n  }\r\n}"
              }
            ],
            "statusCode": 200
          },
          {
            "description": "Bad Request.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 400
          },
          {
            "description": "Resource not found.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 404
          },
          {
            "description": "Server not available.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 500
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/3b98f0faf2684a6c825761c53bfa5668/getEntityPaymentDetailsById')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668', '627dffa94634611330f0d910')]"
      ],
      "properties": {
        "displayName": "List Transactions within a Payment",
        "method": "GET",
        "urlTemplate": "/compensation-transactions/{paymentId}/payment-breakup",
        "description": "This operation retrieves the individual transactions that were part of a single payment. Commission entries and any other payments such as incentives, bonus amounts and subsidy's that contributed to the total paid amount are all retrieved for the selected payment id.",
        "templateParameters": [
          {
            "name": "paymentId",
            "description": "Format - int64. Payment id.",
            "type": "integer",
            "required": true,
            "values": []
          }
        ],
        "request": {
          "headers": [],
          "queryParameters": [
            {
              "description": "Number of records to be returned in a single page. This is defaulted to 10",
              "name": "pageSize",
              "required": false,
              "type": "integer"
            },
            {
              "description": "Page (or set of the records) which is being requested.",
              "name": "pageNumber",
              "required": false,
              "type": "integer"
            },
            {
              "description": "This can be used to identify the record cache if the pagination logic uses a server side cache.",
              "name": "correlationid",
              "required": false,
              "type": "string"
            }
          ],
          "representations": []
        },
        "responses": [
          {
            "description": "Successful operation.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "PaymentDtls",
                "sample": "{\r\n  \"PaymentDetails\": [\r\n    {\r\n      \"paymentId\": 53454353.0,\r\n      \"entityCode\": \"AGY7658\",\r\n      \"amountOnHold\": 100.0,\r\n      \"amountPaid\": 900.0,\r\n      \"balanceAmountToPay\": 100.0,\r\n      \"coverageSeq\": 123456789.0,\r\n      \"payableDueAmount\": 100.0,\r\n      \"policyNo\": \"POL548778\",\r\n      \"productCode\": \"WES-PAK-EST1\",\r\n      \"productName\": \"Wespak Estate Product 1\"\r\n    }\r\n  ],\r\n  \"pagination\": {\r\n    \"correlationid\": \"BLUSRLIST_101\",\r\n    \"pageSize\": 10,\r\n    \"totalRecords\": 100,\r\n    \"pageNumber\": 1,\r\n    \"lastPageNumber\": 10,\r\n    \"startIndex\": \"u1001\",\r\n    \"endIndex\": \"u1010\",\r\n    \"links\": {\r\n      \"next\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=2&correlationid=GUID000111\",\r\n      \"prev\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=1&correlationid=GUID000111\",\r\n      \"first\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=1&correlationid=GUID000111\",\r\n      \"last\": \"http://sampledomain/version/resourcename?pageSize=10&pageNumber=10&correlationid=GUID000111\"\r\n    }\r\n  }\r\n}"
              }
            ],
            "statusCode": 200
          },
          {
            "description": "Bad Request.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 400
          },
          {
            "description": "Resource not found.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 404
          },
          {
            "description": "Server not available.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 500
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/3b98f0faf2684a6c825761c53bfa5668/addPremium')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668', '627dffa94634611330f0d910')]"
      ],
      "properties": {
        "displayName": "Post Policy Premium",
        "method": "POST",
        "urlTemplate": "/compensation-policy/{policyNo}/premium",
        "description": "This operation allows to add policy premium records.",
        "templateParameters": [
          {
            "name": "policyNo",
            "description": "Policy Number.",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "request": {
          "description": "Add the paid policy premium details into the DM System",
          "headers": [],
          "queryParameters": [],
          "representations": [
            {
              "contentType": "application/json",
              "schemaId": "627dffa94634611330f0d910",
              "typeName": "Compensation-policy-policyNo-PremiumPostRequest",
              "sample": "[\r\n  {\r\n    \"policyno\": \"POLNM4344\",\r\n    \"dueTypeCode\": \"PREMIUM\",\r\n    \"sourceSystemCode\": \"POL2015\",\r\n    \"sourceSystemReferenceId\": \"12312\",\r\n    \"sourceSystemCoverageId\": 45689.0,\r\n    \"coverageSequence\": 545465.0,\r\n    \"paymentCode\": \"CHQ\",\r\n    \"dueDate\": \"2018-01-25\",\r\n    \"dueAmount\": 1000.0,\r\n    \"appropriationAmount\": 1000.0,\r\n    \"appropriationDate\": \"2018-01-25\",\r\n    \"appropriationTypeCode\": \"PREMIUM\",\r\n    \"extraPremiumAmount\": 10.0,\r\n    \"billTypeCode\": \"AGYBILL\",\r\n    \"commissionRetainedAmount\": 100.0,\r\n    \"installmentNumber\": 1.0,\r\n    \"remarks\": \"Sample Text.\",\r\n    \"paymentFrequencyCode\": \"WEEK\"\r\n  }\r\n]"
            }
          ]
        },
        "responses": [
          {
            "description": "Successful operation.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Message",
                "sample": "{\r\n  \"code\": \"string\",\r\n  \"description\": \"string\"\r\n}"
              }
            ],
            "statusCode": 200
          },
          {
            "description": "Bad Request.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 400
          },
          {
            "description": "Resource not found.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 404
          },
          {
            "description": "Server not available.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 500
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/3b98f0faf2684a6c825761c53bfa5668/getPaymentAdjustmentById')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668', '627dffa94634611330f0d910')]"
      ],
      "properties": {
        "displayName": "Retrieve Adjustment",
        "method": "GET",
        "urlTemplate": "/compensation-adjustments/{adjustmentId}",
        "description": "This operation retrieves payment adjustment request for given  adjustment id.",
        "templateParameters": [
          {
            "name": "adjustmentId",
            "description": "Format - int64. This is the unique object id for payment adjustment.",
            "type": "integer",
            "required": true,
            "values": []
          }
        ],
        "responses": [
          {
            "description": "Successful operation.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Adjustment",
                "sample": "{\r\n  \"id\": 1234,\r\n  \"requestDate\": \"string\",\r\n  \"requestStatusCode\": \"APPR\",\r\n  \"requestStatusDescription\": \"Approved\",\r\n  \"remarks\": \"Sample text\",\r\n  \"requestTypeCode\": \"ADVANCE\",\r\n  \"requestTypeDescription\": \"Advance\",\r\n  \"entityCode\": \"AGY4711\",\r\n  \"entityName\": \"string\",\r\n  \"compensationTypeCode\": \"COMM\",\r\n  \"compensationTypeDescription\": \"Commission\",\r\n  \"CompensationSubTypeCode\": \"OC\",\r\n  \"amount\": 100.0,\r\n  \"frequencyCode\": \"MONTHLY\",\r\n  \"period\": 0,\r\n  \"effectiveDate\": \"2019-09-03\",\r\n  \"statusCode\": \"APPR\",\r\n  \"statusDescription\": \"Approved\",\r\n  \"narration\": \"Sample text\"\r\n}"
              }
            ],
            "statusCode": 200
          },
          {
            "description": "Bad Request.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 402
          },
          {
            "description": "Resource not found.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 404
          },
          {
            "description": "Server not available.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 500
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/3b98f0faf2684a6c825761c53bfa5668/getCommPaymentSummary')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668', '627dffa94634611330f0d910')]"
      ],
      "properties": {
        "displayName": "Retrieve commission and payment summary",
        "method": "GET",
        "urlTemplate": "/compensation-entities/{entityCode}/commission-payment-summary/{commPayType}",
        "description": "This operation allows to view entity summarized commissions and payments generated and received till date.",
        "templateParameters": [
          {
            "name": "entityCode",
            "description": "This is the entity code to retrieve commission and payment summary.",
            "type": "string",
            "required": true,
            "values": []
          },
          {
            "name": "commPayType",
            "description": "This is the type of request LOV code.",
            "type": "string",
            "required": true,
            "values": [
              "OUTSTANDING",
              "DUESONHOLD",
              "LASTPAY",
              "NBCOMM",
              "TOTCOMM",
              "LASTPAYDT",
              "PAYSUMMARY"
            ]
          }
        ],
        "request": {
          "headers": [],
          "queryParameters": [
            {
              "description": "Format - date (as full-date in RFC3339). ProcessFromDate for which the details are to be extracted",
              "name": "processFromDate",
              "required": false,
              "type": "string"
            },
            {
              "description": "Format - date (as full-date in RFC3339). ProcessToDate for which the details are to be extracted",
              "name": "processToDate",
              "required": false,
              "type": "string"
            }
          ],
          "representations": []
        },
        "responses": [
          {
            "description": "Successful operation.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "CommissionPayment",
                "sample": "{\r\n  \"commPayType\": \"NBCOMM\",\r\n  \"commPayTypeDescription\": \"New Business Commission\",\r\n  \"commPayValue\": 120.5,\r\n  \"currencyCode\": \"USD\",\r\n  \"lastPaymentDate\": \"2020-31-08\",\r\n  \"commHoldAmount\": 120.5,\r\n  \"commPayableAmount\": 120.5\r\n}"
              }
            ],
            "statusCode": 200
          },
          {
            "description": "Bad Request.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 402
          },
          {
            "description": "Resource not found.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 404
          },
          {
            "description": "Server not available.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 500
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/3b98f0faf2684a6c825761c53bfa5668/evaluateCommissionRateAndAmount')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668', '627dffa94634611330f0d910')]"
      ],
      "properties": {
        "displayName": "Retrieve Policy Commission Rate and Amount",
        "method": "POST",
        "urlTemplate": "/compensation-policy/evaluate-commission-rate-and-fee",
        "description": "'This operation enables to get the commission rate and amount eligible against a policy for each commissioning producer. The request can be invoked during new business or for deriving the commission amount against a premium payment.'",
        "templateParameters": [],
        "request": {
          "description": "Request to get the coverage level commission fee and rate details from the Policy/Coverage/Producer information.",
          "headers": [],
          "queryParameters": [],
          "representations": [
            {
              "contentType": "application/json",
              "schemaId": "627dffa94634611330f0d910",
              "typeName": "PolicyDetails",
              "sample": "{\r\n  \"eventType\": \"quote\",\r\n  \"compensationSubTypeCode\": \"OC\",\r\n  \"policyno\": \"POLNM4344\",\r\n  \"policyRenewalCount\": 0.0,\r\n  \"policyType\": \"NB\",\r\n  \"sourceSystemCode\": \"PAS2015\",\r\n  \"sourceSystemProcessDate\": \"string\",\r\n  \"transactionEffectiveDate\": \"string\",\r\n  \"expirationDate\": \"string\",\r\n  \"payPlanCode\": \"SIN\",\r\n  \"policyTermUnitCode\": \"DAYS\",\r\n  \"policyTerm\": \"MONTH\",\r\n  \"premiumPaymentTerm\": \"WEEK\",\r\n  \"numberOfLives\": 5.0,\r\n  \"paymentFrequencyCode\": \"WEEK\",\r\n  \"paymentCode\": \"CHQ\",\r\n  \"currencyCode\": \"USD\",\r\n  \"lineOfBusinessCode\": \"PL\",\r\n  \"productCode\": \"PL Product1\",\r\n  \"programType\": \"STANDARD\",\r\n  \"issuingAgencyOfficeCode\": \"AGY2087\",\r\n  \"issuingCompanyOfficeCode\": \"AGY2086\",\r\n  \"companyCode\": \"ABCLTD\",\r\n  \"stateCode\": \"FL\",\r\n  \"countyCode\": \"61\",\r\n  \"accrualBasisCode\": \"PAID\",\r\n  \"billTypeCode\": \"AGYBILL\",\r\n  \"campaignCode\": \"string\",\r\n  \"businessClassCode\": \"string\",\r\n  \"selfContractYN\": \"string\",\r\n  \"specialInvestigationYN\": \"string\",\r\n  \"bundledFlagYN\": \"string\",\r\n  \"coverages\": [\r\n    [\r\n      {\r\n        \"sourceSystemCoverageId\": 45689.0,\r\n        \"coverageCode\": \"PL Product1\",\r\n        \"coverageIssueDate\": \"string\",\r\n        \"planTypeCode\": \"BASE\",\r\n        \"policyCoverageTerm\": \"2\",\r\n        \"riskCommencementDate\": \"string\",\r\n        \"policyHoldersEntryAge\": 25.0,\r\n        \"lifeAssuredEntryAge\": 25.0,\r\n        \"policyHoldersMaturityAge\": 25.0,\r\n        \"lifeAssuredMaturityAge\": 25.0,\r\n        \"ageGroup\": \"YOUNG\",\r\n        \"sumAssured\": 10000.0,\r\n        \"premiumAmount\": 1000.0,\r\n        \"followBaseCoverageCompensationPlanYN\": \"string\",\r\n        \"compensationExceptionType\": \"ENHANCE\",\r\n        \"compensationExceptionBasis\": \"AMOUNT\",\r\n        \"compensationExceptionValue\": 10\r\n      }\r\n    ]\r\n  ],\r\n  \"producers\": [\r\n    [\r\n      {\r\n        \"entityCode\": \"AGT2089\",\r\n        \"sourceSystemProducerCode\": \"POL2015AGT2089\",\r\n        \"baseEntityIndicatorFlagYN\": \"string\",\r\n        \"producerTypeCode\": \"PRODUCER\",\r\n        \"compensationSharePercentage\": 100.0\r\n      }\r\n    ]\r\n  ]\r\n}"
            }
          ]
        },
        "responses": [
          {
            "description": "Successful operation.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "inline_response_200",
                "sample": "{\r\n  \"policyCommissionDetail\": [\r\n    {\r\n      \"policyno\": \"POLNM4344\",\r\n      \"entityCode\": \"AGT2089\",\r\n      \"sourceSystemProducerCode\": \"POL2015AGT2089\",\r\n      \"coverageCode\": \"PL Product1\",\r\n      \"sourceSystemCoverageId\": 45689.0,\r\n      \"baseRate\": 15.0,\r\n      \"baseAmount\": 150.0,\r\n      \"finalRate\": 10.0,\r\n      \"finalAmount\": 100.0,\r\n      \"compensationSharePercentage\": 100.0\r\n    }\r\n  ]\r\n}"
              }
            ],
            "statusCode": 200
          },
          {
            "description": "Bad Request.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 400
          },
          {
            "description": "Server not available.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 500
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/3b98f0faf2684a6c825761c53bfa5668/getEntityBenefitSummary')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668', '627dffa94634611330f0d910')]"
      ],
      "properties": {
        "displayName": "Summary Incentives and Contests",
        "method": "GET",
        "urlTemplate": "/compensation-benefits-summary?entityCode={entityCode}&benefitType={benefitType}",
        "description": "This operation retrieves incentives and contest summary based on query parameters.",
        "templateParameters": [
          {
            "name": "entityCode",
            "description": "Entity code for which we need summary of Incentive Contest",
            "type": "string",
            "required": true,
            "values": []
          },
          {
            "name": "benefitType",
            "description": "Benefit Type can be INC, CON",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "request": {
          "headers": [],
          "queryParameters": [
            {
              "description": "This field will define where to get ongoing Incentive or closed one.",
              "name": "benefitStatus",
              "required": false,
              "type": "string"
            }
          ],
          "representations": []
        },
        "responses": [
          {
            "description": "Successful operation.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "BenefitSummaryTransactions",
                "sample": "{\r\n  \"BenefitSummary\": [\r\n    {\r\n      \"schemeCode\": \"MPB2018\",\r\n      \"schemeName\": \"MONTHLY PERFORMANCE BONUS FOR 2018\",\r\n      \"effectiveFromDate\": \"2018-09-01\",\r\n      \"effectiveToDate\": \"2020-09-01\",\r\n      \"processDate\": \"2020-09-01\",\r\n      \"benefitAmount\": 100.0\r\n    }\r\n  ]\r\n}"
              }
            ],
            "statusCode": 200
          },
          {
            "description": "Bad Request.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 400
          },
          {
            "description": "Resource not found.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 404
          },
          {
            "description": "Server not available.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 500
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/3b98f0faf2684a6c825761c53bfa5668/updatePaymentAdjustmentById')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668', '627dffa94634611330f0d910')]"
      ],
      "properties": {
        "displayName": "Update Adjustment",
        "method": "PUT",
        "urlTemplate": "/compensation-adjustments/{adjustmentId}",
        "description": "This operation updates payment adjustment request against adjustment id.",
        "templateParameters": [
          {
            "name": "adjustmentId",
            "description": "Format - int64. This is the unique object id for payment adjustment request.",
            "type": "integer",
            "required": true,
            "values": []
          }
        ],
        "request": {
          "description": "Request to update payment adjustment.",
          "headers": [],
          "queryParameters": [],
          "representations": [
            {
              "contentType": "application/json",
              "schemaId": "627dffa94634611330f0d910",
              "typeName": "Adjustment",
              "sample": "{\r\n  \"id\": 1234,\r\n  \"requestDate\": \"string\",\r\n  \"requestStatusCode\": \"APPR\",\r\n  \"requestStatusDescription\": \"Approved\",\r\n  \"remarks\": \"Sample text\",\r\n  \"requestTypeCode\": \"ADVANCE\",\r\n  \"requestTypeDescription\": \"Advance\",\r\n  \"entityCode\": \"AGY4711\",\r\n  \"entityName\": \"string\",\r\n  \"compensationTypeCode\": \"COMM\",\r\n  \"compensationTypeDescription\": \"Commission\",\r\n  \"CompensationSubTypeCode\": \"OC\",\r\n  \"amount\": 100.0,\r\n  \"frequencyCode\": \"MONTHLY\",\r\n  \"period\": 0,\r\n  \"effectiveDate\": \"2019-09-03\",\r\n  \"statusCode\": \"APPR\",\r\n  \"statusDescription\": \"Approved\",\r\n  \"narration\": \"Sample text\"\r\n}"
            }
          ]
        },
        "responses": [
          {
            "description": "Successful operation.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Adjustment",
                "sample": "{\r\n  \"id\": 1234,\r\n  \"requestDate\": \"string\",\r\n  \"requestStatusCode\": \"APPR\",\r\n  \"requestStatusDescription\": \"Approved\",\r\n  \"remarks\": \"Sample text\",\r\n  \"requestTypeCode\": \"ADVANCE\",\r\n  \"requestTypeDescription\": \"Advance\",\r\n  \"entityCode\": \"AGY4711\",\r\n  \"entityName\": \"string\",\r\n  \"compensationTypeCode\": \"COMM\",\r\n  \"compensationTypeDescription\": \"Commission\",\r\n  \"CompensationSubTypeCode\": \"OC\",\r\n  \"amount\": 100.0,\r\n  \"frequencyCode\": \"MONTHLY\",\r\n  \"period\": 0,\r\n  \"effectiveDate\": \"2019-09-03\",\r\n  \"statusCode\": \"APPR\",\r\n  \"statusDescription\": \"Approved\",\r\n  \"narration\": \"Sample text\"\r\n}"
              }
            ],
            "statusCode": 200
          },
          {
            "description": "Bad Request.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 402
          },
          {
            "description": "Resource not found.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 404
          },
          {
            "description": "Server not available.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "627dffa94634611330f0d910",
                "typeName": "Error",
                "sample": "{\r\n  \"statuscode\": \"http-status-code\",\r\n  \"status\": \"Example status message\",\r\n  \"message\": [\r\n    {\r\n      \"systemerrcode\": \"ERR-001\",\r\n      \"developer\": \"Message for app developer\",\r\n      \"user\": \"Message for end user\"\r\n    }\r\n  ],\r\n  \"moreinfo\": \"http://sampledomain/errors/ERR-001\"\r\n}"
              }
            ],
            "statusCode": 500
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "name": "[concat(parameters('apimServiceName'), '/3b98f0faf2684a6c825761c53bfa5668/addPaymentAdjustment/Adjustments')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668', 'addPaymentAdjustment')]"
      ],
      "properties": {
        "displayName": "Adjustments"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "name": "[concat(parameters('apimServiceName'), '/3b98f0faf2684a6c825761c53bfa5668/deletePaymentAdjustmentById/Adjustments')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668', 'deletePaymentAdjustmentById')]"
      ],
      "properties": {
        "displayName": "Adjustments"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "name": "[concat(parameters('apimServiceName'), '/3b98f0faf2684a6c825761c53bfa5668/getAllPaymentAdjustment/Adjustments')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668', 'getAllPaymentAdjustment')]"
      ],
      "properties": {
        "displayName": "Adjustments"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "name": "[concat(parameters('apimServiceName'), '/3b98f0faf2684a6c825761c53bfa5668/getCommissionFee/Entities')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668', 'getCommissionFee')]"
      ],
      "properties": {
        "displayName": "Entities"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "name": "[concat(parameters('apimServiceName'), '/3b98f0faf2684a6c825761c53bfa5668/getPaymentDetailsById/Transactions')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668', 'getPaymentDetailsById')]"
      ],
      "properties": {
        "displayName": "Transactions"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "name": "[concat(parameters('apimServiceName'), '/3b98f0faf2684a6c825761c53bfa5668/getPaymentTransactionsById/Transactions')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668', 'getPaymentTransactionsById')]"
      ],
      "properties": {
        "displayName": "Transactions"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "name": "[concat(parameters('apimServiceName'), '/3b98f0faf2684a6c825761c53bfa5668/getDuesOnHold/Dues')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668', 'getDuesOnHold')]"
      ],
      "properties": {
        "displayName": "Dues"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "name": "[concat(parameters('apimServiceName'), '/3b98f0faf2684a6c825761c53bfa5668/getReleasedDues/Dues')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668', 'getReleasedDues')]"
      ],
      "properties": {
        "displayName": "Dues"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "name": "[concat(parameters('apimServiceName'), '/3b98f0faf2684a6c825761c53bfa5668/getPolicyCommissionTransactions/Entities')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668', 'getPolicyCommissionTransactions')]"
      ],
      "properties": {
        "displayName": "Entities"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "name": "[concat(parameters('apimServiceName'), '/3b98f0faf2684a6c825761c53bfa5668/getPortfolioSummary/Entities')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668', 'getPortfolioSummary')]"
      ],
      "properties": {
        "displayName": "Entities"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "name": "[concat(parameters('apimServiceName'), '/3b98f0faf2684a6c825761c53bfa5668/getAgentTotalCommission/Entities')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668', 'getAgentTotalCommission')]"
      ],
      "properties": {
        "displayName": "Entities"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "name": "[concat(parameters('apimServiceName'), '/3b98f0faf2684a6c825761c53bfa5668/listIncentivesContestsEvaluations/Incentive-Contests')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668', 'listIncentivesContestsEvaluations')]"
      ],
      "properties": {
        "displayName": "Incentive Contests"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "name": "[concat(parameters('apimServiceName'), '/3b98f0faf2684a6c825761c53bfa5668/getIncentiveKPIDetails/Incentive-Contests')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668', 'getIncentiveKPIDetails')]"
      ],
      "properties": {
        "displayName": "Incentive Contests"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "name": "[concat(parameters('apimServiceName'), '/3b98f0faf2684a6c825761c53bfa5668/listIncentivesContestsEvalResult/Incentive-Contests')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668', 'listIncentivesContestsEvalResult')]"
      ],
      "properties": {
        "displayName": "Incentive Contests"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "name": "[concat(parameters('apimServiceName'), '/3b98f0faf2684a6c825761c53bfa5668/listIncentivesContests/Incentive-Contests')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668', 'listIncentivesContests')]"
      ],
      "properties": {
        "displayName": "Incentive Contests"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "name": "[concat(parameters('apimServiceName'), '/3b98f0faf2684a6c825761c53bfa5668/getEntityBenefitDetails/Incentive-Contests')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668', 'getEntityBenefitDetails')]"
      ],
      "properties": {
        "displayName": "Incentive Contests"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "name": "[concat(parameters('apimServiceName'), '/3b98f0faf2684a6c825761c53bfa5668/getEntityPortfolio/Entities')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668', 'getEntityPortfolio')]"
      ],
      "properties": {
        "displayName": "Entities"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "name": "[concat(parameters('apimServiceName'), '/3b98f0faf2684a6c825761c53bfa5668/getEntityOutstandingDues/Dues')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668', 'getEntityOutstandingDues')]"
      ],
      "properties": {
        "displayName": "Dues"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "name": "[concat(parameters('apimServiceName'), '/3b98f0faf2684a6c825761c53bfa5668/getEntityPaymentDetails/Transactions')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668', 'getEntityPaymentDetails')]"
      ],
      "properties": {
        "displayName": "Transactions"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "name": "[concat(parameters('apimServiceName'), '/3b98f0faf2684a6c825761c53bfa5668/getEntityPaymentDetailsById/Transactions')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668', 'getEntityPaymentDetailsById')]"
      ],
      "properties": {
        "displayName": "Transactions"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "name": "[concat(parameters('apimServiceName'), '/3b98f0faf2684a6c825761c53bfa5668/addPremium/Policy')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668', 'addPremium')]"
      ],
      "properties": {
        "displayName": "Policy"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "name": "[concat(parameters('apimServiceName'), '/3b98f0faf2684a6c825761c53bfa5668/getPaymentAdjustmentById/Adjustments')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668', 'getPaymentAdjustmentById')]"
      ],
      "properties": {
        "displayName": "Adjustments"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "name": "[concat(parameters('apimServiceName'), '/3b98f0faf2684a6c825761c53bfa5668/getCommPaymentSummary/Entities')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668', 'getCommPaymentSummary')]"
      ],
      "properties": {
        "displayName": "Entities"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "name": "[concat(parameters('apimServiceName'), '/3b98f0faf2684a6c825761c53bfa5668/evaluateCommissionRateAndAmount/Policy')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668', 'evaluateCommissionRateAndAmount')]"
      ],
      "properties": {
        "displayName": "Policy"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "name": "[concat(parameters('apimServiceName'), '/3b98f0faf2684a6c825761c53bfa5668/getEntityBenefitSummary/Incentive-Contests')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668', 'getEntityBenefitSummary')]"
      ],
      "properties": {
        "displayName": "Incentive Contests"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "name": "[concat(parameters('apimServiceName'), '/3b98f0faf2684a6c825761c53bfa5668/updatePaymentAdjustmentById/Adjustments')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), '3b98f0faf2684a6c825761c53bfa5668', 'updatePaymentAdjustmentById')]"
      ],
      "properties": {
        "displayName": "Adjustments"
      }
    }
  ]
}