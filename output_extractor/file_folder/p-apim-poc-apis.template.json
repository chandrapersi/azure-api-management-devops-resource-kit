{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "apimServiceName": {
      "type": "string"
    },
    "policyXMLBaseUrl": {
      "type": "string"
    }
  },
  "resources": [
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis",
      "name": "[concat(parameters('apimServiceName'), '/6b60079d96b446329099b0c406643730')]",
      "dependsOn": [],
      "properties": {
        "description": "This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.",
        "authenticationSettings": {
          "subscriptionKeyRequired": false
        },
        "subscriptionKeyParameterNames": {
          "header": "Ocp-Apim-Subscription-Key",
          "query": "subscription-key"
        },
        "apiRevision": "1",
        "isCurrent": true,
        "subscriptionRequired": true,
        "displayName": "Swagger Petstore",
        "serviceUrl": "https://petstore.swagger.io/v2",
        "path": "petstore",
        "protocols": [
          "http",
          "https"
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/schemas",
      "name": "[concat(parameters('apimServiceName'), '/6b60079d96b446329099b0c406643730/626677474634610edcbff8bc')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), '6b60079d96b446329099b0c406643730')]"
      ],
      "properties": {
        "contentType": "application/vnd.ms-azure-apim.swagger.definitions+json",
        "document": {
          "definitions": {
            "ApiResponse": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "type": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              }
            },
            "Category": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int64"
                },
                "name": {
                  "type": "string"
                }
              },
              "xml": {
                "name": "Category"
              }
            },
            "Pet": {
              "type": "object",
              "required": [
                "name",
                "photoUrls"
              ],
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int64"
                },
                "category": {
                  "$ref": "#/definitions/Category"
                },
                "name": {
                  "type": "string",
                  "example": "doggie"
                },
                "photoUrls": {
                  "type": "array",
                  "xml": {
                    "wrapped": true
                  },
                  "items": {
                    "type": "string",
                    "xml": {
                      "name": "photoUrl"
                    }
                  }
                },
                "tags": {
                  "type": "array",
                  "xml": {
                    "wrapped": true
                  },
                  "items": {
                    "xml": {
                      "name": "tag"
                    },
                    "$ref": "#/definitions/Tag"
                  }
                },
                "status": {
                  "type": "string",
                  "description": "pet status in the store",
                  "enum": [
                    "available",
                    "pending",
                    "sold"
                  ]
                }
              },
              "xml": {
                "name": "Pet"
              }
            },
            "Tag": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int64"
                },
                "name": {
                  "type": "string"
                }
              },
              "xml": {
                "name": "Tag"
              }
            },
            "Order": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int64"
                },
                "petId": {
                  "type": "integer",
                  "format": "int64"
                },
                "quantity": {
                  "type": "integer",
                  "format": "int32"
                },
                "shipDate": {
                  "type": "string",
                  "format": "date-time"
                },
                "status": {
                  "type": "string",
                  "description": "Order Status",
                  "enum": [
                    "placed",
                    "approved",
                    "delivered"
                  ]
                },
                "complete": {
                  "type": "boolean"
                }
              },
              "xml": {
                "name": "Order"
              }
            },
            "User": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int64"
                },
                "username": {
                  "type": "string"
                },
                "firstName": {
                  "type": "string"
                },
                "lastName": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "phone": {
                  "type": "string"
                },
                "userStatus": {
                  "type": "integer",
                  "format": "int32",
                  "description": "User Status"
                }
              },
              "xml": {
                "name": "User"
              }
            },
            "PetArray": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Pet"
              }
            },
            "StoreInventoryGet200ApplicationJsonResponse": {
              "type": "object",
              "additionalProperties": {
                "type": "integer",
                "format": "int32"
              }
            },
            "UserArray": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            },
            "UserLoginGet200ApplicationJsonResponse": {
              "type": "string"
            },
            "UserLoginGet200ApplicationXmlResponse": {
              "type": "string"
            }
          },
          "value": "{\r\n  \"ApiResponse\": {\r\n    \"type\": \"object\",\r\n    \"properties\": {\r\n      \"code\": {\r\n        \"type\": \"integer\",\r\n        \"format\": \"int32\"\r\n      },\r\n      \"type\": {\r\n        \"type\": \"string\"\r\n      },\r\n      \"message\": {\r\n        \"type\": \"string\"\r\n      }\r\n    }\r\n  },\r\n  \"Category\": {\r\n    \"type\": \"object\",\r\n    \"properties\": {\r\n      \"id\": {\r\n        \"type\": \"integer\",\r\n        \"format\": \"int64\"\r\n      },\r\n      \"name\": {\r\n        \"type\": \"string\"\r\n      }\r\n    },\r\n    \"xml\": {\r\n      \"name\": \"Category\"\r\n    }\r\n  },\r\n  \"Pet\": {\r\n    \"type\": \"object\",\r\n    \"required\": [\r\n      \"name\",\r\n      \"photoUrls\"\r\n    ],\r\n    \"properties\": {\r\n      \"id\": {\r\n        \"type\": \"integer\",\r\n        \"format\": \"int64\"\r\n      },\r\n      \"category\": {\r\n        \"$ref\": \"#/definitions/Category\"\r\n      },\r\n      \"name\": {\r\n        \"type\": \"string\",\r\n        \"example\": \"doggie\"\r\n      },\r\n      \"photoUrls\": {\r\n        \"type\": \"array\",\r\n        \"xml\": {\r\n          \"wrapped\": true\r\n        },\r\n        \"items\": {\r\n          \"type\": \"string\",\r\n          \"xml\": {\r\n            \"name\": \"photoUrl\"\r\n          }\r\n        }\r\n      },\r\n      \"tags\": {\r\n        \"type\": \"array\",\r\n        \"xml\": {\r\n          \"wrapped\": true\r\n        },\r\n        \"items\": {\r\n          \"xml\": {\r\n            \"name\": \"tag\"\r\n          },\r\n          \"$ref\": \"#/definitions/Tag\"\r\n        }\r\n      },\r\n      \"status\": {\r\n        \"type\": \"string\",\r\n        \"description\": \"pet status in the store\",\r\n        \"enum\": [\r\n          \"available\",\r\n          \"pending\",\r\n          \"sold\"\r\n        ]\r\n      }\r\n    },\r\n    \"xml\": {\r\n      \"name\": \"Pet\"\r\n    }\r\n  },\r\n  \"Tag\": {\r\n    \"type\": \"object\",\r\n    \"properties\": {\r\n      \"id\": {\r\n        \"type\": \"integer\",\r\n        \"format\": \"int64\"\r\n      },\r\n      \"name\": {\r\n        \"type\": \"string\"\r\n      }\r\n    },\r\n    \"xml\": {\r\n      \"name\": \"Tag\"\r\n    }\r\n  },\r\n  \"Order\": {\r\n    \"type\": \"object\",\r\n    \"properties\": {\r\n      \"id\": {\r\n        \"type\": \"integer\",\r\n        \"format\": \"int64\"\r\n      },\r\n      \"petId\": {\r\n        \"type\": \"integer\",\r\n        \"format\": \"int64\"\r\n      },\r\n      \"quantity\": {\r\n        \"type\": \"integer\",\r\n        \"format\": \"int32\"\r\n      },\r\n      \"shipDate\": {\r\n        \"type\": \"string\",\r\n        \"format\": \"date-time\"\r\n      },\r\n      \"status\": {\r\n        \"type\": \"string\",\r\n        \"description\": \"Order Status\",\r\n        \"enum\": [\r\n          \"placed\",\r\n          \"approved\",\r\n          \"delivered\"\r\n        ]\r\n      },\r\n      \"complete\": {\r\n        \"type\": \"boolean\"\r\n      }\r\n    },\r\n    \"xml\": {\r\n      \"name\": \"Order\"\r\n    }\r\n  },\r\n  \"User\": {\r\n    \"type\": \"object\",\r\n    \"properties\": {\r\n      \"id\": {\r\n        \"type\": \"integer\",\r\n        \"format\": \"int64\"\r\n      },\r\n      \"username\": {\r\n        \"type\": \"string\"\r\n      },\r\n      \"firstName\": {\r\n        \"type\": \"string\"\r\n      },\r\n      \"lastName\": {\r\n        \"type\": \"string\"\r\n      },\r\n      \"email\": {\r\n        \"type\": \"string\"\r\n      },\r\n      \"password\": {\r\n        \"type\": \"string\"\r\n      },\r\n      \"phone\": {\r\n        \"type\": \"string\"\r\n      },\r\n      \"userStatus\": {\r\n        \"type\": \"integer\",\r\n        \"format\": \"int32\",\r\n        \"description\": \"User Status\"\r\n      }\r\n    },\r\n    \"xml\": {\r\n      \"name\": \"User\"\r\n    }\r\n  },\r\n  \"PetArray\": {\r\n    \"type\": \"array\",\r\n    \"items\": {\r\n      \"$ref\": \"#/definitions/Pet\"\r\n    }\r\n  },\r\n  \"StoreInventoryGet200ApplicationJsonResponse\": {\r\n    \"type\": \"object\",\r\n    \"additionalProperties\": {\r\n      \"type\": \"integer\",\r\n      \"format\": \"int32\"\r\n    }\r\n  },\r\n  \"UserArray\": {\r\n    \"type\": \"array\",\r\n    \"items\": {\r\n      \"$ref\": \"#/definitions/User\"\r\n    }\r\n  },\r\n  \"UserLoginGet200ApplicationJsonResponse\": {\r\n    \"type\": \"string\"\r\n  },\r\n  \"UserLoginGet200ApplicationXmlResponse\": {\r\n    \"type\": \"string\"\r\n  }\r\n}"
        }
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/diagnostics",
      "name": "[concat(parameters('apimServiceName'), '/applicationinsights')]",
      "dependsOn": [],
      "properties": {
        "alwaysLog": "allErrors",
        "loggerId": "/subscriptions/510e61ea-804b-489a-b0d1-775d711fe7c0/resourceGroups/APIM-POC/providers/Microsoft.ApiManagement/service/p-apim-poc/loggers/appi-psl-dev-g7iea-logs",
        "httpCorrelationProtocol": "Legacy",
        "logClientIp": true,
        "sampling": {
          "samplingType": "fixed",
          "percentage": 100.0
        },
        "frontend": {
          "request": {}
        },
        "backend": {
          "request": {}
        }
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/products/apis",
      "name": "[concat(parameters('apimServiceName'), '/cfd6560de1594b03bab78e1073aa1724/6b60079d96b446329099b0c406643730')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), '6b60079d96b446329099b0c406643730')]"
      ],
      "properties": {
        "displayName": "Pet Store Product",
        "description": "Product giving access to Petstore api",
        "subscriptionRequired": true,
        "approvalRequired": false,
        "state": "published"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/6b60079d96b446329099b0c406643730/getPetById')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), '6b60079d96b446329099b0c406643730')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('apimServiceName'), '6b60079d96b446329099b0c406643730', '626677474634610edcbff8bc')]"
      ],
      "properties": {
        "displayName": "Find pet by ID",
        "method": "GET",
        "urlTemplate": "/pet/{petId}",
        "description": "Returns a single pet",
        "templateParameters": [
          {
            "name": "petId",
            "description": "Format - int64. ID of pet to return",
            "type": "integer",
            "required": true,
            "values": []
          }
        ],
        "responses": [
          {
            "description": "successful operation",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "626677474634610edcbff8bc",
                "typeName": "Pet",
                "sample": "{\r\n  \"id\": 0,\r\n  \"category\": {\r\n    \"id\": 0,\r\n    \"name\": \"string\"\r\n  },\r\n  \"name\": \"doggie\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 0,\r\n      \"name\": \"string\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}"
              },
              {
                "contentType": "application/xml",
                "schemaId": "626677474634610edcbff8bc",
                "typeName": "Pet",
                "sample": "<Pet>\r\n  <id>0</id>\r\n  <Category>\r\n    <id>0</id>\r\n    <name>string</name>\r\n  </Category>\r\n  <name>doggie</name>\r\n  <photoUrls>\r\n    <photoUrl>string</photoUrl>\r\n  </photoUrls>\r\n  <tags>\r\n    <Tag>\r\n      <id>0</id>\r\n      <name>string</name>\r\n    </Tag>\r\n  </tags>\r\n  <status>available</status>\r\n</Pet>"
              }
            ],
            "statusCode": 200
          },
          {
            "description": "Invalid ID supplied",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json"
              },
              {
                "contentType": "application/xml"
              }
            ],
            "statusCode": 400
          },
          {
            "description": "Pet not found",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json"
              },
              {
                "contentType": "application/xml"
              }
            ],
            "statusCode": 404
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/6b60079d96b446329099b0c406643730/getOrderById')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), '6b60079d96b446329099b0c406643730')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('apimServiceName'), '6b60079d96b446329099b0c406643730', '626677474634610edcbff8bc')]"
      ],
      "properties": {
        "displayName": "Find purchase order by ID",
        "method": "GET",
        "urlTemplate": "/store/order/{orderId}",
        "description": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions",
        "templateParameters": [
          {
            "name": "orderId",
            "description": "Format - int64. ID of pet that needs to be fetched",
            "type": "integer",
            "required": true,
            "values": []
          }
        ],
        "responses": [
          {
            "description": "successful operation",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "626677474634610edcbff8bc",
                "typeName": "Order",
                "sample": "{\r\n  \"id\": 0,\r\n  \"petId\": 0,\r\n  \"quantity\": 0,\r\n  \"shipDate\": \"string\",\r\n  \"status\": \"placed\",\r\n  \"complete\": true\r\n}"
              },
              {
                "contentType": "application/xml",
                "schemaId": "626677474634610edcbff8bc",
                "typeName": "Order",
                "sample": "<Order>\r\n  <id>0</id>\r\n  <petId>0</petId>\r\n  <quantity>0</quantity>\r\n  <shipDate>string</shipDate>\r\n  <status>placed</status>\r\n  <complete>true</complete>\r\n</Order>"
              }
            ],
            "statusCode": 200
          },
          {
            "description": "Invalid ID supplied",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json"
              },
              {
                "contentType": "application/xml"
              }
            ],
            "statusCode": 400
          },
          {
            "description": "Order not found",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json"
              },
              {
                "contentType": "application/xml"
              }
            ],
            "statusCode": 404
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/6b60079d96b446329099b0c406643730/findPetsByStatus')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), '6b60079d96b446329099b0c406643730')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('apimServiceName'), '6b60079d96b446329099b0c406643730', '626677474634610edcbff8bc')]"
      ],
      "properties": {
        "displayName": "Finds Pets by status",
        "method": "GET",
        "urlTemplate": "/pet/findByStatus?status={status}",
        "description": "Multiple status values can be provided with comma separated strings",
        "templateParameters": [
          {
            "name": "status",
            "description": "Status values that need to be considered for filter",
            "type": "array",
            "required": true,
            "values": []
          }
        ],
        "responses": [
          {
            "description": "successful operation",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "626677474634610edcbff8bc",
                "typeName": "PetArray",
                "sample": "{'id':0,'category':{'id':0,'name':'string'},'name':'doggie','photoUrls':['string'],'tags':[{'id':0,'name':'string'}],'status':'available'}"
              },
              {
                "contentType": "application/xml",
                "schemaId": "626677474634610edcbff8bc",
                "typeName": "PetArray",
                "sample": "<Pet>\r\n  <id>0</id>\r\n  <Category>\r\n    <id>0</id>\r\n    <name>string</name>\r\n  </Category>\r\n  <name>doggie</name>\r\n  <photoUrls>\r\n    <photoUrl>string</photoUrl>\r\n  </photoUrls>\r\n  <tags>\r\n    <Tag>\r\n      <id>0</id>\r\n      <name>string</name>\r\n    </Tag>\r\n  </tags>\r\n  <status>available</status>\r\n</Pet>"
              }
            ],
            "statusCode": 200
          },
          {
            "description": "Invalid status value",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json"
              },
              {
                "contentType": "application/xml"
              }
            ],
            "statusCode": 400
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/6b60079d96b446329099b0c406643730/getUserByName')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), '6b60079d96b446329099b0c406643730')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('apimServiceName'), '6b60079d96b446329099b0c406643730', '626677474634610edcbff8bc')]"
      ],
      "properties": {
        "displayName": "Get user by user name",
        "method": "GET",
        "urlTemplate": "/user/{username}",
        "description": "",
        "templateParameters": [
          {
            "name": "username",
            "description": "The name that needs to be fetched. Use user1 for testing. ",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "responses": [
          {
            "description": "successful operation",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "schemaId": "626677474634610edcbff8bc",
                "typeName": "User",
                "sample": "{\r\n  \"id\": 0,\r\n  \"username\": \"string\",\r\n  \"firstName\": \"string\",\r\n  \"lastName\": \"string\",\r\n  \"email\": \"string\",\r\n  \"password\": \"string\",\r\n  \"phone\": \"string\",\r\n  \"userStatus\": 0\r\n}"
              },
              {
                "contentType": "application/xml",
                "schemaId": "626677474634610edcbff8bc",
                "typeName": "User",
                "sample": "<User>\r\n  <id>0</id>\r\n  <username>string</username>\r\n  <firstName>string</firstName>\r\n  <lastName>string</lastName>\r\n  <email>string</email>\r\n  <password>string</password>\r\n  <phone>string</phone>\r\n  <userStatus>0</userStatus>\r\n</User>"
              }
            ],
            "statusCode": 200
          },
          {
            "description": "Invalid username supplied",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json"
              },
              {
                "contentType": "application/xml"
              }
            ],
            "statusCode": 400
          },
          {
            "description": "User not found",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json"
              },
              {
                "contentType": "application/xml"
              }
            ],
            "statusCode": 404
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "name": "[concat(parameters('apimServiceName'), '/6b60079d96b446329099b0c406643730/getPetById/policy')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), '6b60079d96b446329099b0c406643730', 'getPetById')]"
      ],
      "properties": {
        "value": "[concat(parameters('policyXMLBaseUrl'), '6b60079d96b446329099b0c406643730-getPetById-operationPolicy.xml')]",
        "format": "rawxml-link"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "name": "[concat(parameters('apimServiceName'), '/6b60079d96b446329099b0c406643730/getPetById/pet')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), '6b60079d96b446329099b0c406643730', 'getPetById')]"
      ],
      "properties": {
        "displayName": "pet"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "name": "[concat(parameters('apimServiceName'), '/6b60079d96b446329099b0c406643730/getOrderById/store')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), '6b60079d96b446329099b0c406643730', 'getOrderById')]"
      ],
      "properties": {
        "displayName": "store"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "name": "[concat(parameters('apimServiceName'), '/6b60079d96b446329099b0c406643730/findPetsByStatus/pet')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), '6b60079d96b446329099b0c406643730', 'findPetsByStatus')]"
      ],
      "properties": {
        "displayName": "pet"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "name": "[concat(parameters('apimServiceName'), '/6b60079d96b446329099b0c406643730/getUserByName/user')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), '6b60079d96b446329099b0c406643730', 'getUserByName')]"
      ],
      "properties": {
        "displayName": "user"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/policies",
      "name": "[concat(parameters('apimServiceName'), '/6b60079d96b446329099b0c406643730/policy')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), '6b60079d96b446329099b0c406643730')]"
      ],
      "properties": {
        "value": "[concat(parameters('policyXMLBaseUrl'), '6b60079d96b446329099b0c406643730-apiPolicy.xml')]",
        "format": "rawxml-link"
      }
    }
  ]
}